<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我常用的那些golang与rust程序-EP01</title>
    <link href="/2024/12/04/golang-rust-application-recommendations-ep01/"/>
    <url>/2024/12/04/golang-rust-application-recommendations-ep01/</url>
    
    <content type="html"><![CDATA[<p>好久不见！</p><p>由于工作过于繁忙以及游戏太好玩，鸽了大半年，今天老人作息，爬起来水一期</p><h2 id="为什么我热衷于使用golang及rust的程序"><a href="#为什么我热衷于使用golang及rust的程序" class="headerlink" title="为什么我热衷于使用golang及rust的程序"></a>为什么我热衷于使用golang及rust的程序</h2><p>作为一名主机、数据库运维工程师，日常会遇到很多奇奇怪怪的环境，例如就经常遇到RHEL6甚至RHEL5的上古平台，这时候想要使用一些现代化的工具就几乎不用想了，因为要编译、安装甚至构建编译环境都极其困难（因为多数客户的设备都不会连接互联网）。</p><p>此时golang及rust的优越性就体现出来了，以Golang为例，golang支持<code>2.6.23</code>及以上版本内核的任何Linux，也就是说RHEL6及以上的环境全部都能直接使用！直接把二进制包丢进去就可以了，属实过于方便。</p><h2 id="介绍一些好用的工具"><a href="#介绍一些好用的工具" class="headerlink" title="介绍一些好用的工具"></a>介绍一些好用的工具</h2><p>接下来就给大伙看看我平时常用的一些好东西</p><h3 id="WEB服务器"><a href="#WEB服务器" class="headerlink" title="WEB服务器"></a>WEB服务器</h3><h4 id="Caddy2"><a href="#Caddy2" class="headerlink" title="Caddy2"></a>Caddy2</h4><p><img src="https://pic.imgdb.cn/item/674f7fbed0e0a243d4dce59b.png"></p><ul><li><a href="https://github.com/caddyserver/caddy">项目地址</a></li></ul><p>一个非常好用的web服务器，🔒默认安全、支持HTTP3、支持自动签发续签SSL证书、强大的自定义功能以及丰富的插件！</p><p>另外也欢迎使用我的<a href="https://hub.docker.com/r/mrxianyu/caddy">客制化容器</a>！</p><h3 id="系统监控项"><a href="#系统监控项" class="headerlink" title="系统监控项"></a>系统监控项</h3><h4 id="gotop"><a href="#gotop" class="headerlink" title="gotop"></a>gotop</h4><p><img src="https://pic.imgdb.cn/item/674f80b6d0e0a243d4dce59f.png"></p><ul><li><a href="https://github.com/xxxserxxx/gotop">项目地址</a></li></ul><p>一个系统负载查看🇨🇭瑞士军刀</p><p>可以非常方便地查看cpu、内存、进程、磁盘等信息</p><p>一个小趣闻：原作者入了rust邪教跑去用rust重写了这个项目😆</p><h4 id="bottom"><a href="#bottom" class="headerlink" title="bottom"></a>bottom</h4><ul><li><p><a href="https://github.com/ClementTsang/bottom">项目地址</a></p></li><li><p><a href="https://github.com/ClementTsang/bottom">项目地址</a></p></li></ul><p>另一个系统负载查看🇨🇭瑞士军刀</p><p>可以非常方便地查看cpu、内存、进程、磁盘等信息</p><p>另一个小趣闻：就是上面👆那个gotop的作者写的</p><h4 id="bandwhich"><a href="#bandwhich" class="headerlink" title="bandwhich"></a>bandwhich</h4><p><img src="https://pic.imgdb.cn/item/674f8508d0e0a243d4dce5af.png"></p><ul><li><a href="https://github.com/imsnif/bandwhich">项目地址</a></li></ul><p>网络负载查看🇨🇭瑞士军刀</p><p>可以非常方便地查看网络负载</p><h4 id="kyanos"><a href="#kyanos" class="headerlink" title="kyanos"></a>kyanos</h4><p><img src="https://pic.imgdb.cn/item/674f8680d0e0a243d4dce5b9.png"></p><ul><li><a href="https://github.com/hengyoush/kyanos">项目地址</a></li></ul><p>使用ebpf黑科技的网络流量采集和分析工具</p><p>tql！</p><h4 id="gdu"><a href="#gdu" class="headerlink" title="gdu"></a>gdu</h4><p><img src="https://pic.imgdb.cn/item/674f8a13d0e0a243d4dce5c6.png"></p><ul><li><a href="https://github.com/dundee/gdu">项目地址</a></li></ul><p>磁盘占用分析工具</p><h3 id="网络安全工具"><a href="#网络安全工具" class="headerlink" title="网络安全工具"></a>网络安全工具</h3><h4 id="fscan"><a href="#fscan" class="headerlink" title="fscan"></a>fscan</h4><p><img src="https://pic.imgdb.cn/item/674f858dd0e0a243d4dce5b1.png"></p><ul><li><a href="https://github.com/shadow1ng/fscan">项目地址</a></li></ul><p>大名鼎鼎的fscan，网安小助手</p><p>一般我只用来扫描网段用</p><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><h4 id="doggo"><a href="#doggo" class="headerlink" title="doggo"></a>doggo</h4><p><img src="https://pic.imgdb.cn/item/674f85fcd0e0a243d4dce5b2.png"></p><ul><li><a href="https://github.com/mr-karan/doggo">项目地址</a></li></ul><p>更加现代化的DNS命令行查询工具</p><p><del>由于dig用习惯了所以其实这个我用的挺少</del></p>]]></content>
    
    
    
    <tags>
      
      <tag>推荐</tag>
      
      <tag>分享</tag>
      
      <tag>golang</tag>
      
      <tag>rust</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AIX系统初体验</title>
    <link href="/2024/05/06/AIX/welcome-AIX/"/>
    <url>/2024/05/06/AIX/welcome-AIX/</url>
    
    <content type="html"><![CDATA[<p>由于未来工作中会接触AIX系统，所以想尝试熟悉一下这个来自IBM的神奇闭源类Unix系统</p><h2 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h2><ul><li>一台使用Linux操作系统的计算机（其实其他系统也行）</li><li>完整的kvm虚拟化环境（如果没有，可以参考<a href="https://docs.xianyu.one/Linux%E7%9B%B8%E5%85%B3/%E8%99%9A%E6%8B%9F%E5%8C%96/%E5%AE%89%E8%A3%85KVM/">这篇文章</a>进行环境的安装）</li><li>AIX系统镜像，此处使用<a href="https://archive.org/details/aix_7200-04-02-2027_072020">AIX 7.2</a></li></ul><h3 id="安装qemu-system-ppc"><a href="#安装qemu-system-ppc" class="headerlink" title="安装qemu_system_ppc"></a>安装qemu_system_ppc</h3><p>由于KVM的安装并不会附带安装上不同架构的模拟软件，所以此处需要进行额外的安装</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">apt install qemu-system -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>等待安装完成后，我们的x86电脑就可以完整模拟包含<code>Power</code>架构在内的各类系统架构了</p><h2 id="正片"><a href="#正片" class="headerlink" title="正片"></a>正片</h2><p>接下来就进入正式的安装流程了</p><p>在本次实验中，所有的文件，例如虚拟磁盘、AIX的iso文件，都会放在当前目录下进行</p><h3 id="创建虚拟磁盘"><a href="#创建虚拟磁盘" class="headerlink" title="创建虚拟磁盘"></a>创建虚拟磁盘</h3><p>如同使用virt-manager创建虚拟机一样（虽然没有GUI，但又不是不能用）</p><p>需要为虚拟机创建一个虚拟磁盘</p><figure><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">qemu-img create <span class="token parameter variable">-f</span> qcow2 aix.qcow2 100G<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p>从<a href="https://archive.org/details/aix_7200-04-02-2027_072020">网络上</a>下载的AIX安装光盘镜像有两个镜像文件</p><ul><li><code>aix_7200-04-02-2027_1of2_072020.iso</code></li><li><code>aix_7200-04-02-2027_2of2_072020.iso</code></li></ul><p>实际在安装过程中仅需挂载第一个即可</p><p>下面是安装系统时的命令</p><figure><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">qemu-system-ppc64 <span class="token punctuation">\</span><span class="token parameter variable">-cpu</span> POWER8 <span class="token punctuation">\</span><span class="token parameter variable">-machine</span> pseries <span class="token punctuation">\</span><span class="token parameter variable">-m</span> <span class="token number">8192</span> <span class="token punctuation">\</span><span class="token parameter variable">-serial</span> stdio <span class="token punctuation">\</span><span class="token parameter variable">-drive</span> <span class="token assign-left variable">file</span><span class="token operator">=</span>aix.qcow2,if<span class="token operator">=</span>none,id<span class="token operator">=</span>drive-virtio-disk0 <span class="token punctuation">\</span><span class="token parameter variable">-device</span> virtio-scsi-pci,id<span class="token operator">=</span>scsi <span class="token punctuation">\</span><span class="token parameter variable">-device</span> scsi-hd,drive<span class="token operator">=</span>drive-virtio-disk0 <span class="token punctuation">\</span><span class="token parameter variable">-cdrom</span> ./aix_7200-04-02-2027_1of2_072020.iso <span class="token punctuation">\</span>-prom-env <span class="token string">"boot-command=boot cdrom:"</span> <span class="token punctuation">\</span><span class="token parameter variable">-display</span> none<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>让我们先来逐行解读上面的命令：</p><ol><li><code>-cpu POWER8</code>: 指定虚拟机使用 POWER8 处理器。</li><li><code>-machine pseries</code>: 设置虚拟机的机器类型为 pseries。</li><li><code>-m 8192</code>: 设置虚拟机的内存为 8192 MB（8 GB）。</li><li><code>-serial stdio</code>: 将虚拟机的串行控制台重定向到标准输入&#x2F;输出。</li><li><code>-drive file=aix.qcow2,if=none,id=drive-virtio-disk0</code>: 创建一个虚拟磁盘驱动器，映射到名为 <code>aix.qcow2</code> 的 QCOW2 格式的磁盘文件。</li><li><code>-device virtio-scsi-pci,id=scsi</code>: 创建一个 Virtio SCSI 控制器，并指定其 ID 为 <code>scsi</code>。</li><li><code>-device scsi-hd,drive=drive-virtio-disk0</code>: 将之前创建的虚拟磁盘驱动器连接到 Virtio SCSI 控制器上。</li><li><code>-cdrom ./aix_7200-04-02-2027_1of2_072020.iso</code>: 将名为 <code>aix_7200-04-02-2027_1of2_072020.iso</code> 的 ISO 文件挂载为虚拟机的光驱。</li><li><code>-prom-env &quot;boot-command=boot cdrom:&quot;</code>: 设置 Open Firmware 环境变量，指定虚拟机启动时从光驱启动。</li><li><code>-display none</code>: 禁用图形显示，虚拟机将没有图形界面，所有操作通过命令行或串行控制台进行。</li></ol><p>运行后不出意外的话就正常跑起来了</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240506105245.webp"></p><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><p>安装时会出现下图的情况</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240506105856.webp"><br>根据提示，我们扣1并回车</p><p>下一步会让我们选择语言，此处自然是直接回车默认使用英语安装 </p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240506110107.webp"></p><p>默认情况下AIX并不会主动安装上openssh，这里推荐先安装上，以便进入系统后的连接。这里我们输入<code>2</code>并回车</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240506110300.webp"></p><p>输入<code>4</code>查看更多选项</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507152419.webp"></p><p>这里可以看到我们到<code>OpenSSH Client</code>和<code>OpenSSH Server</code>均没有安装，此处分别输入<code>3</code>和<code>4</code>并回车即可将其更改为安装系统时附带将<code>OpenSSH Client</code>和<code>OpenSSH Server</code>一并安装上</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507152501.webp"></p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507152706.webp"></p><p>完成操作后输入<code>99</code>并回车两次，返回到最开始的安装界面</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240506110300.webp"></p><p>进入上图页面后直接回车两次开始安装</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507152929.webp"></p><p>接下去就是极其漫长的安装等待，<del>此处建议搓一把炉石</del></p><p>安装完成后会疯狂重启，此时使用ctrl+c退出，下面我们要为设备添加虚拟网卡（注意，此网卡是临时添加的，重启后会消失）</p><figure><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">ip</span> tuntap <span class="token function">add</span> tap0 mode tap<span class="token function">sudo</span> <span class="token function">ip</span> <span class="token function">link</span> <span class="token builtin class-name">set</span> tap0 up<span class="token function">sudo</span> <span class="token function">ip</span> a <span class="token function">add</span> <span class="token number">10.233</span>.11.1/24 dev tap0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>准备完成后就可以开始初始化系统了</p><h3 id="AIX，启动！"><a href="#AIX，启动！" class="headerlink" title="AIX，启动！"></a>AIX，启动！</h3><p>使用下面的命令启动AIX</p><figure><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">qemu-system-ppc64 <span class="token punctuation">\</span><span class="token parameter variable">-cpu</span> POWER8 <span class="token punctuation">\</span><span class="token parameter variable">-machine</span> pseries <span class="token punctuation">\</span><span class="token parameter variable">-m</span> <span class="token number">8192</span> <span class="token punctuation">\</span><span class="token parameter variable">-serial</span> mon:stdio <span class="token punctuation">\</span><span class="token parameter variable">-drive</span> <span class="token assign-left variable">file</span><span class="token operator">=</span>aix.qcow2,if<span class="token operator">=</span>none,id<span class="token operator">=</span>drive-virtio-disk0 <span class="token punctuation">\</span><span class="token parameter variable">-device</span> virtio-scsi-pci,id<span class="token operator">=</span>scsi <span class="token punctuation">\</span><span class="token parameter variable">-device</span> scsi-hd,drive<span class="token operator">=</span>drive-virtio-disk0 <span class="token punctuation">\</span>-prom-env boot-command<span class="token operator">=</span><span class="token string">'boot disk:'</span> <span class="token punctuation">\</span><span class="token parameter variable">-display</span> none <span class="token punctuation">\</span><span class="token parameter variable">-net</span> nic <span class="token punctuation">\</span><span class="token parameter variable">-net</span> tap,script<span class="token operator">=</span>no,ifname<span class="token operator">=</span>tap0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>经过漫长的等待就进入系统初始化界面了</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507184008.webp"></p><p>此处输入vt100，接下去会跳是否接受许可，选中<code>Accept Licence Agreements</code>并回车</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507185132.webp"></p><p>此处有个大坑，我尝试了好久都没法把下图的<code>no</code>改成<code>yes</code>，既不是直接输入也不是用过左右键选择，而是使用<code>tab</code>键……</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507191749.webp"></p><p>回车后使用<code>f3</code>退出即可回到配置界面进行其他例如时区、密码的配置了</p><p>在此界面设置完毕后直接<code>f3</code>退出，可以进入Shell 界面</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507194554.webp"></p><h3 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h3><p>使用下面这个命令配置IP</p><figure><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chdev <span class="token parameter variable">-l</span> en0 <span class="token parameter variable">-a</span> <span class="token assign-left variable">netaddr</span><span class="token operator">=</span><span class="token number">10.233</span>.11.10 <span class="token parameter variable">-a</span> <span class="token assign-left variable">netmask</span><span class="token operator">=</span><span class="token number">255.255</span>.255.0 <span class="token parameter variable">-a</span> <span class="token assign-left variable">state</span><span class="token operator">=</span>up<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>完成后就可以尝试ssh连接了</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507195836.webp"></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>IBM的操作逻辑设计还是挺怪的，也可能是我不会用导致的，总之，慢慢来吧！</p><h3 id="为啥没有直接用virt-manager-创建"><a href="#为啥没有直接用virt-manager-创建" class="headerlink" title="为啥没有直接用virt-manager 创建"></a>为啥没有直接用virt-manager 创建</h3><p><a href="https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/1571075">https://bugs.launchpad.net/ubuntu/+source/libvirt/+bug/1571075</a></p><p>根据上面的内容可知遇到无法正常创建虚拟机的并非只有我一人，并且似乎并没有打算修的样子，命令行凑合用吧。</p><p><img src="/../../img/AIX/welcome-AIX/Pasted%20image%2020240507182915.webp"></p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://wzt.ac.cn/2021/05/28/QEMU-networking/">QEMU 网络配置一把梭</a></li><li><a href="https://kwakousys.wordpress.com/2020/09/06/run-aix-7-2-on-x86-with-qemu/">Run AIX 7.2 on x86 with QEMU</a></li><li><a href="https://community.unix.com/t/cannot-accept-license-agreement-on-smit-install/219089">Cannot Accept License Agreement on Smit Install?</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>AIX</tag>
      
      <tag>IBM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>subconverter进阶使用教学</title>
    <link href="/2024/04/09/sub-server-re/"/>
    <url>/2024/04/09/sub-server-re/</url>
    
    <content type="html"><![CDATA[<p>好久没水文章了，在wjh师傅的催更下来写一篇。</p><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>过去我曾写过一篇<a href="https://blog.xianyu.one/2021/05/12/Linux/tutorial/subconverter/">subconverter订阅转换及搭配 clash 使用教程</a></p><p>简要介绍了一下subconverter和clash的使用小技巧</p><p>本篇将要在原基础上更进一步，透过自定义的subconverter来获得更好的上网体验</p><h3 id="本文所解决的问题"><a href="#本文所解决的问题" class="headerlink" title="本文所解决的问题"></a>本文所解决的问题</h3><p>会想要做进一步的修改自然是因为实际使用遇到了一些问题：</p><ul><li>Clash存在DNS泄露</li><li>使用FakeIP后公司内网的DNS解析无法正常获取</li><li>国域网访问比蜗牛还慢</li></ul><p>实际上，为了方便大家使用，已经创建了一个<a href="https://github.com/xianyu-one/subconverter_configs">项目</a>来存放相关配置以及创建容器镜像来（如果可以请给我的项目加星 orz ）</p><h2 id="实际解决思路"><a href="#实际解决思路" class="headerlink" title="实际解决思路"></a>实际解决思路</h2><h3 id="解决DNS泄露问题"><a href="#解决DNS泄露问题" class="headerlink" title="解决DNS泄露问题"></a>解决DNS泄露问题</h3><p>首先就是修改外部配置文件了，在<a href="https://blog.xianyu.one/2021/05/12/Linux/tutorial/subconverter/">subconverter订阅转换及搭配 clash 使用教程</a>所介绍的配置目前已不太适用，请参考下面的配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">[custom];不要随意改变关键字，否则会导致出错;设置规则标志位ruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;LocalAreaNetwork.listruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;UnBan.listruleset&#x3D;🛑 全球拦截,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;BanAD.listruleset&#x3D;Google,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Google.listruleset&#x3D;Google,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;GoogleFCM.listruleset&#x3D;Google,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;GoogleCN.listruleset&#x3D;Google,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;GoogleCNProxyIP.listruleset&#x3D;📺 巴哈姆特,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Bahamut.listruleset&#x3D;📺 Youtube,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;YouTubeMusic.listruleset&#x3D;📺 Youtube,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;YouTube.listruleset&#x3D;🔰 节点选择,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Global.listruleset&#x3D;🍎 苹果服务,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Apple.listruleset&#x3D;⚙️ 开发者,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Developer.listruleset&#x3D;⚙️ 开发者,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Github.listruleset&#x3D;Netflix,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Netflix.listruleset&#x3D;Netflix,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;NetflixIP.listruleset&#x3D;🔞 R18,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Porn.listruleset&#x3D;🖼️ Pixiv,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Pixiv.listruleset&#x3D;⚙️ 开发者,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Developer.listruleset&#x3D;⚙️ 开发者,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Github.listruleset&#x3D;Disney+,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;DisneyPlus.listruleset&#x3D;✈️ Telegram,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Telegram.listruleset&#x3D;🪟 巨硬服务,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Microsoft.listruleset&#x3D;🪟 巨硬服务,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;OneDrive.listruleset&#x3D;🎮 Xbox,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Xbox.listruleset&#x3D;🕹︎ Nintendo,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Nintendo.listruleset&#x3D;🖥️ PC游戏平台,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Epic.listruleset&#x3D;🖥️ PC游戏平台,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Steam.listruleset&#x3D;🖥️ PC游戏平台,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;Blizzard.listruleset&#x3D;🤖 AI相关,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Ruleset&#x2F;OpenAi.listruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;ChinaIpV6.listruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;Download.listruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;LocalAreaNetwork.listruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;UnBan.listruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;ChinaDomain.listruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;ChinaMedia.listruleset&#x3D;REJECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;BanAD.listruleset&#x3D;REJECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;BanProgramAD.listruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;ChinaCompanyIp.listruleset&#x3D;DIRECT,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ACL4SSR&#x2F;ACL4SSR&#x2F;master&#x2F;Clash&#x2F;ChinaIp.listruleset&#x3D;DIRECT,[]GEOIP,CN,no-resolveruleset&#x3D;🐟 漏网之鱼,[]FINAL;设置规则标志位;设置分组标志位custom_proxy_group&#x3D;🔰 节点选择&#96;select&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]流媒体&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;✈ 手动选择&#96;select&#96;.*custom_proxy_group&#x3D;Disney+&#96;select&#96;[]🔰 节点选择&#96;[]🇹🇼 台湾地区&#96;[]🇸🇬 新加坡&#96;[]🇹🇼🇸🇬 中文地区&#96;[]流媒体&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;Google&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;📺 Youtube&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;⚙️ 开发者&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;🕹︎ Nintendo&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;🖥️ PC游戏平台&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;🎮 Xbox&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;🤖 AI相关&#96;select&#96;[]🔰 节点选择&#96;[]🇹🇼 台湾地区&#96;[]🇸🇬 新加坡&#96;[]🇹🇼🇸🇬 中文地区&#96;[]流媒体&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;🖼️ Pixiv&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;✈️ Telegram&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;📺 巴哈姆特&#96;select&#96;[]🇹🇼 台湾地区&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;(台)custom_proxy_group&#x3D;🍎 苹果服务&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;🪟 巨硬服务&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;🔞 R18&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;Netflix&#96;select&#96;[]🔰 节点选择&#96;[]🇹🇼🇸🇬 中文地区&#96;[]流媒体&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲及大洋洲&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼 台湾地区&#96;[]🇸🇬 新加坡&#96;[]🇯🇵 日本国&#96;[]🪙超低倍率0.2&#96;[]DIRECTcustom_proxy_group&#x3D;🌏 全球直连&#96;select&#96;[]DIRECT&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;🛑 全球拦截&#96;select&#96;[]REJECT&#96;[]DIRECTcustom_proxy_group&#x3D;🐟 漏网之鱼&#96;select&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]DIRECTcustom_proxy_group&#x3D;✈ 延迟最低&#96;url-test&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;✈ 故障切换&#96;fallback&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🌏 亚洲及大洋洲&#96;url-test&#96;(台|新|日|韩|马来|印度|澳大利亚｜新西兰)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🌍 欧洲及中东地区&#96;url-test&#96;(英|法|德|阿姆斯特丹|荷兰|土耳其|比利时|瑞士)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇺🇸🇨🇦 北美通用&#96;url-test&#96;(美|加拿)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇹🇼🇸🇬 中文地区&#96;url-test&#96;(台|新)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇹🇼 台湾地区&#96;url-test&#96;(台)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇯🇵 日本国&#96;url-test&#96;(日)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇸🇬 新加坡&#96;url-test&#96;(新加坡|R新|s新)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;流媒体&#96;url-test&#96;(R台|s台|R新|s新|流|流媒体)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🪙超低倍率0.2&#96;url-test&#96;(0.2)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500;设置分组标志位enable_rule_generator&#x3D;trueoverwrite_original_rules&#x3D;trueexclude_remarks&#x3D;(到期|官方|Traffic|Expire|剩余|时间|官网|产品|香港|俄罗斯)enable_rule_generator&#x3D;trueoverwrite_original_rules&#x3D;true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="添加redir-port配置"><a href="#添加redir-port配置" class="headerlink" title="添加redir-port配置"></a>添加redir-port配置</h3><p>redir-port是Linux 系统中iptables 的一个模块，它可以将来自特定来源IP 地址和端口的网络流量重定向到另一个目标IP 地址和端口。 这是一种防火墙规则，通常用于将内部网络中的流量重定向到特定的服务器或服务上，或者将流量从一个端口重定向到另一个端口</p><p>具体请看 <a href="https://github.com/xianyu-one/subconverter_configs/blob/main/subconverter_server_conf/pref.toml">项目地址</a></p><h3 id="为subconverter添加DNS部分的配置模板"><a href="#为subconverter添加DNS部分的配置模板" class="headerlink" title="为subconverter添加DNS部分的配置模板"></a>为subconverter添加DNS部分的配置模板</h3><p>由于subconverter默认转换时并不会附带DNS部分的配置，需要客户端进行添加，所以在这里我们直接通过修改subconverter的模板来实现向配置文件添加</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">dns:  enable: true  listen: 127.0.0.1:8853  default-nameserver:    - 223.5.5.5    - 8.8.4.4  ipv6: false  enhanced-mode: fake-ip  nameserver:    - 119.29.29.29    - 223.5.5.5    - tls:&#x2F;&#x2F;223.5.5.5:853    - tls:&#x2F;&#x2F;223.6.6.6:853    - tls:&#x2F;&#x2F;120.53.53.53    - tls:&#x2F;&#x2F;1.12.12.12  fallback:    - https:&#x2F;&#x2F;1.0.0.1&#x2F;dns-query    - https:&#x2F;&#x2F;public.dns.iij.jp&#x2F;dns-query    - tls:&#x2F;&#x2F;8.8.4.4:853  fallback-filter:    geoip: false    ipcidr:      - 240.0.0.0&#x2F;4      - 0.0.0.0&#x2F;32      - 127.0.0.1&#x2F;32    domain:      - +.facebook.com      - +.twitter.com      - +.google.com      - +.googleapis.com      - +.google.cn      - +.googleapis.cn      - +.xn--ngstr-lra8j.com      - +.googlevideo.com      - +.gvt1.com      - +.gmail.com      - +.youtube.com      - +.youtu.be      - +.gvt0.com      - +.gvt2.com      - +.gvt3.com      - +.gstatic.com      - +.265.com      - +.2mdn.net      - +.app-measurement.com      - +.c.admob.com      - +.clickserve.dartsearch.net      - +.crl.pki.goog      - +.doubleclick.net      - +.firebase-settings.crashlytics.com      - +.google-analytics.com      - +.googleadservices.com      - +.googleanalytics.com      - +.googleoptimize.com      - +.googlesyndication.com      - +.googletagmanager.com      - +.googletagservices.com  fake-ip-filter:    &#123;% include &quot;include&#x2F;cn-list.txt&quot; %&#125;    &#123;% include &quot;include&#x2F;a-list.txt&quot; %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>具体请看 <a href="https://github.com/xianyu-one/subconverter_configs/blob/main/subconverter_server_conf/pref.toml">项目地址</a></p><h4 id="fake-ip-filter"><a href="#fake-ip-filter" class="headerlink" title="fake-ip-filter"></a>fake-ip-filter</h4><p>fake-ip-filter<br>部分所添加的为国域网的域名清单，这边默认给的不多，<del>也就七万多条</del>，其作用是当DNS查询匹配这些域名时，并不会使用FakeIP，而是返回正确的解析，一方面这能提高国域网的访问速度，另一方面，你也可以通过添加自定义的内容（例如公司内网的域名）来获取真实的地址，防止开启代理的同时无法正常访问内网网站</p><p>如果你有自己的订阅转换服务器可以参考下面的方法进行自定义：</p><p>首先运行一个容器</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker run --name tester mrxianyu&#x2F;subconverter:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>将容器内的<code>all_base.tpl</code>拷贝至本地的项容器目文件夹中（下面操作均是在本地的项容器目文件夹中进行的）</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker cp tester:&#x2F;base&#x2F;base&#x2F;all_base.tpl .&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>将include文件夹拷贝出来</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker cp tester:&#x2F;base&#x2F;include .&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>此处我们假设需要自定义的域名列表（格式参考include文件夹下已存在的文件）写在<code>include/URL.txt</code>中</p><p>接着我们向的<code>all_base.tpl</code>中的<code>fake-ip-filter</code>部分写入引用这个文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">..............      - +.firebase-settings.crashlytics.com      - +.google-analytics.com      - +.googleadservices.com      - +.googleanalytics.com      - +.googleoptimize.com      - +.googlesyndication.com      - +.googletagmanager.com      - +.googletagservices.com  fake-ip-filter:    &#123;% include &quot;include&#x2F;cn-list.txt&quot; %&#125;    &#123;% include &quot;include&#x2F;a-list.txt&quot; %&#125;    &#123;% include &quot;include&#x2F;URL.txt&quot; %&#125;.............<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>最后使用如下示例dockercompose文件启用正式的订阅转换服务器即可</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">version: &#39;3&#39;services:  app:    image: mrxianyu&#x2F;subconverter    container_name: subconverter    restart: unless-stopped    volumes:      - .&#x2F;pref.toml:&#x2F;base&#x2F;pref.toml:ro      - .&#x2F;include:&#x2F;base&#x2F;include:ro    ports:      - &#39;25500:25500&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Git设置代理</title>
    <link href="/2023/11/30/git-proxy/"/>
    <url>/2023/11/30/git-proxy/</url>
    
    <content type="html"><![CDATA[<p>由于众所周知的原因github的项目拉取和推送非常的痛苦，此篇以记录相关方法以拯救青年失智的我</p><span id="more"></span><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>确保已有<code>http</code>或<code>socks</code>代理，此处以<code>http://127.0.0.1:1080</code>和<code>socks5://127.0.0.1:1081</code>为例</p><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><p>使用以下命令配置HTTP代理：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy http://127.0.0.1:1080<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy http://127.0.0.1:1080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>使用以下命令配置SOCKS代理：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy socks5://127.0.0.1:1081<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy socks5://127.0.0.1:1081<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h3 id="为特定目标进行设置"><a href="#为特定目标进行设置" class="headerlink" title="为特定目标进行设置"></a>为特定目标进行设置</h3><p>以为github设置为例</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.https://github.com.proxy socks5://127.0.0.1:1081<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure>]]></content>
    
    
    
    <tags>
      
      <tag>教学</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker Build 配置代理</title>
    <link href="/2023/11/03/docker/docker-build-proxy/"/>
    <url>/2023/11/03/docker/docker-build-proxy/</url>
    
    <content type="html"><![CDATA[<p>好像拖更有点久，我记得上一次写文章还是在上一次……</p><span id="more"></span><p>最近好多服务都开始用自己手搓的容器了，由于众所周知的原因，拉取很多项目的代码的体验会很差，在build阶段挂上代理就显得很重要了。</p><h2 id="设备及软件说明"><a href="#设备及软件说明" class="headerlink" title="设备及软件说明"></a>设备及软件说明</h2><p>本次演示使用的计算机操作系统为 <code>Ubuntu 22.04LTS</code> ，其他操作系统的方法基本一致。</p><p>软件方面有如下配置：</p><ul><li>Docker version 24.0.7</li><li>Docker Compose version v2.22.0</li><li>本机HTTP代理软件，默认监听本机的所以网卡的8080端口</li><li>ufw</li><li><a href="https://github.com/chaifeng/ufw-docker">ufw-docker</a> (一个用于解决docker导致ufw防火墙失效的小工具)</li></ul><h2 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h2><p>本次实验以 <a href="https://caddyserver.com/v2">Caddy2</a> 的容器为例</p><h3 id="确认docker默认网卡的配置"><a href="#确认docker默认网卡的配置" class="headerlink" title="确认docker默认网卡的配置"></a>确认docker默认网卡的配置</h3><p>通常情况下Linux的Docker默认网卡名为 <code>docker0</code> ，默认IP及其网段信息一般情况下是 <code>172.17.0.1/16</code> ，在运行build命令时临时容器将会在这张网卡的网段下，所以需要明确这张网卡的配置信息，以方便后续配置本地HTTP代理的地址，以及如果你跟我一样开启了防火墙的情况下开放端口使用。</p><p>首先可以运行以下命令查看网卡信息</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ip</span> a show docker0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>你会得到类似如下的输出</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xianyu@book:/home/xianyu $ <span class="token function">ip</span> a show docker0<span class="token number">14</span>: docker0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state UP group default     link/ether xx:xx:xx:xx:xx:xx brd ff:ff:ff:ff:ff:ff    inet <span class="token number">172.17</span>.0.1/16 brd <span class="token number">172.17</span>.255.255 scope global docker0       valid_lft forever preferred_lft forever<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>如果你不打算修改默认配置的话就可以看下一节了，但如果你觉得默认网段有问题（不少企业网络会使用172的网段作为内网的地址段，会有比较大的概率冲突），那么就可以修改默认的网段。</p><h4 id="修改默认网段"><a href="#修改默认网段" class="headerlink" title="修改默认网段"></a>修改默认网段</h4><p>修改默认网段的方法非常简单，只需向 <code>/etc/docker/daemon.json</code> 中添加如下配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"bip"</span><span class="token operator">:</span><span class="token string">"10.233.0.1/24"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>并重启docker即可</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>同样的，重启后通过以下命令验证网段是否修改成功</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xianyu@book:/home/xianyu $ <span class="token function">ip</span> a show docker0<span class="token number">14</span>: docker0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">></span> mtu <span class="token number">1500</span> qdisc noqueue state UP group default     link/ether xx:xx:xx:xx:xx:xx brd ff:ff:ff:ff:ff:ff    inet <span class="token number">10.233</span>.0.1/24 brd <span class="token number">10.233</span>.0.255 scope global docker0       valid_lft forever preferred_lft forever<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="开放防火墙端口"><a href="#开放防火墙端口" class="headerlink" title="开放防火墙端口"></a>开放防火墙端口</h3><p>由于目前IPv6的逐渐普及，计算机不开放防火墙会有极大的安全风险，所以在我的本地环境中是启用防火墙的</p><p>在上一节中我们提到了默认网卡的网段问题，此时我们可以知道默认网卡的网段为 <code>10.233.0.0/24</code> 本机作为网关在这个网段中的地址为 <code>10.233.0.1</code></p><p>我们希望这个网段中的容器可以访问本机的HTTP代理服务，即我们需要添加一条ufw规则以允许来自 <code>10.233.0.0/24</code> 的请求访问 <code>10.233.0.1:8080</code> ，具体的ufw命令如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw allow from <span class="token number">10.233</span>.0.0/24 to <span class="token number">10.233</span>.0.1 port <span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="编辑Dockerfile"><a href="#编辑Dockerfile" class="headerlink" title="编辑Dockerfile"></a>编辑Dockerfile</h3><p>做好上述准备我们就可以开始配置容器的HTTP代理了</p><p>本次实际案例为编译一个包含自定义插件的Caddy2容器，依照官方文档原始的Dockerfile长这样：</p><figure><div class="code-wrapper"><pre class="line-numbers language-Dockerfile" data-language="Dockerfile"><code class="language-Dockerfile">FROM caddy:builder AS builderRUN xcaddy build \    --with github.com&#x2F;caddy-dns&#x2F;cloudflareFROM caddyCOPY --from&#x3D;builder &#x2F;usr&#x2F;bin&#x2F;caddy &#x2F;usr&#x2F;bin&#x2F;caddy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>可以看到在 <code>RUN</code> 当中我们需要从Github拉取我们需要的代码，但实际上由于网络环境问题很难正常拉取到，此时我们可以在这里加入HTTP代理的变量使其拉取时走本机的代理</p><figure><div class="code-wrapper"><pre class="line-numbers language-Dockerfile" data-language="Dockerfile"><code class="language-Dockerfile">FROM caddy:builder AS builderENV http_proxy&#x3D;http:&#x2F;&#x2F;10.233.0.1:8080ENV https_proxy&#x3D;http:&#x2F;&#x2F;10.233.0.1:8080RUN xcaddy build \    --with github.com&#x2F;caddy-dns&#x2F;cloudflareFROM caddyCOPY --from&#x3D;builder &#x2F;usr&#x2F;bin&#x2F;caddy &#x2F;usr&#x2F;bin&#x2F;caddy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>经过上述处理即可愉快的手搓容器了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>proxy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kea DHCP 折腾小记</title>
    <link href="/2023/06/01/Linux/tutorial/kea-dhcp/"/>
    <url>/2023/06/01/Linux/tutorial/kea-dhcp/</url>
    
    <content type="html"><![CDATA[<blockquote><p>别问，问就是在摆烂</p></blockquote><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>因为<code>isc-dhcp</code>项目目前已不再更新，转向开发<code>kea DHCP</code>了，从官方的介绍中我们可以了解到<code>kea DHCP</code>有以下优点：</p><ul><li><p>灵活性：Kea DHCP 提供了广泛的配置选项和灵活的扩展机制，可以根据不同的网络需求进行高度定制。它支持动态更新配置、灵活的租约管理、多种地址分配策略以及丰富的选项定义。</p></li><li><p>性能和可扩展性：Kea DHCP 通过优化的设计和实现，具有出色的性能和可扩展性。它采用了多线程和异步处理，以处理大规模网络环境下的高并发请求，并能有效地管理大量的租约信息。</p></li><li><p>强大的管理和监控功能：Kea DHCP 提供了丰富的管理和监控功能，可通过命令行工具或REST API进行配置、状态查询和统计数据收集。管理员可以轻松地监视服务器状态、租约信息、日志记录，并进行动态配置和管理。</p></li><li><p>安全性：Kea DHCP 提供了安全的通信和认证机制，以保护服务器和客户端之间的通信安全。它支持TLS加密和身份验证，可以防止未经授权的访问和数据泄露。</p></li><li><p>兼容性：Kea DHCP 兼容标准的DHCPv4和DHCPv6协议，并支持常见的客户端操作系统和网络设备。它还支持动态DNS（DDNS）更新、网站指导模式（Captive Portal）、PXE引导、客户端分类和挂钩脚本等功能。</p></li></ul><p>注意，这是官方说法，我也信了，但最后为什么选择不迁移了呢？且听我娓娓道来</p><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><p>这次测试使用的环境是在KVM虚拟化的环境中进行的，使用<code>172.18.146.0/24</code>作为测试网段<br><img src="https://pic.imgdb.cn/item/647be21bf024cca173f0dca9.jpg"></p><p>DHCP服务器将架设在一台运行<code>UbuntuServer 22.04.2 LTS</code>的虚拟机上，仅启用DHCPv4（v6用不上），此外是直接用root用户操作的（我懒得打sudo）</p><table><thead><tr><th>设备</th><th>IP</th><th>操作系统</th></tr></thead><tbody><tr><td>DHCP Server</td><td>172.18.146.53</td><td>UbuntuServer 22.04.2 LTS</td></tr><tr><td>User</td><td>DHCPv4</td><td>Windows 10 Pro</td></tr></tbody></table><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>安装<code>kea</code>可以直接使用<code>apt</code>进行安装，也可以编译安装，这里我们两者都会介绍到。</p><h3 id="软件源安装"><a href="#软件源安装" class="headerlink" title="软件源安装"></a>软件源安装</h3><p>这种方法非常简单，一条命令即可完成安装</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> kea<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>上述命令将会自动安装kea在软件源中的所有软件（但不是所有其项目的所有软件，后面会说）</p><p>以下是源中所有可选安装的组件</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kea                   kea-ctrl-agent        kea-dhcp4-serverkea-admin             kea-dev               kea-dhcp6-serverkea-common            kea-dhcp-ddns-server  kea-doc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>在本次实验中，使用下面的命令安装部分必要的组件即可</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> kea-ctrl-agent kea-dhcp4-server kea-admin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>安装好后配置文件均位于<code>/etc/kea</code>文件夹中</p><h4 id="为什么不推荐源安装"><a href="#为什么不推荐源安装" class="headerlink" title="为什么不推荐源安装"></a>为什么不推荐源安装</h4><p>源中的软件包缺失了很多<code>kea</code>所推荐或是新增的功能，例如源安装的<code>kea</code>并不能正常的与数据库进行交互（似乎是源预编译没有使用相关选项进行编译），同时缺失了hooks的支持，在版本上，也比官方的落后一些（目前ubuntu源的kea组件是2.0.2版本的）</p><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><p>源码安装的好处是可以用上kea的所有功能，缺点是需要忍受很长的编译时间。<br>本次实验环境所编译的包为构建用于和mysql（也可以是mariadb）交互的。</p><h4 id="安装编译所需包"><a href="#安装编译所需包" class="headerlink" title="安装编译所需包"></a>安装编译所需包</h4><p>首先根据官方文档所要求的安装编译所需的软件</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span> <span class="token function">curl</span> libboost-all-dev openssl <span class="token function">git</span> g++ libssl-dev liblog4cplus-dev liblog4cplus-2.0.5 <span class="token function">make</span> cmake <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>由于需要在编译时加上<code>--with-mysql</code>的选项，所以需要额外安装以下的包</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> mysql-client libmysqlclient-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="拉取源码"><a href="#拉取源码" class="headerlink" title="拉取源码"></a>拉取源码</h4><p>直接从官方仓库拉取即可</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://gitlab.isc.org/isc-projects/kea.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="编译并安装软件"><a href="#编译并安装软件" class="headerlink" title="编译并安装软件"></a>编译并安装软件</h4><h5 id="进入项目文件夹"><a href="#进入项目文件夹" class="headerlink" title="进入项目文件夹"></a>进入项目文件夹</h5><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> kea/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h5 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h5><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">autoreconf <span class="token parameter variable">-i</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h5 id="生成构建环境"><a href="#生成构建环境" class="headerlink" title="生成构建环境"></a>生成构建环境</h5><p>由于我们需要使用mysql数据库，所以此处需要加上–with-mysql&#96;的选项</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./configure --with-mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h5 id="编译软件"><a href="#编译软件" class="headerlink" title="编译软件"></a>编译软件</h5><p>通常情况下会花费很多时间，可以先出门吃个饭</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h5 id="更新链接缓存"><a href="#更新链接缓存" class="headerlink" title="更新链接缓存"></a>更新链接缓存</h5><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/libldconfig<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>依照上述方法编译后配置文件夹默认位置为软件安装位置下的<code>etc/kea</code>子文件夹中</p><h2 id="正式使用及配置文件解析"><a href="#正式使用及配置文件解析" class="headerlink" title="正式使用及配置文件解析"></a>正式使用及配置文件解析</h2><p>完成上一节操作后就可以正式开始使用kea了，但是！这里就要说一说kea不好的地方了，kea的配置文件，是json的格式，这意味着，会有一大堆的括号，极不利于阅读</p><h3 id="简易使用教学"><a href="#简易使用教学" class="headerlink" title="简易使用教学"></a>简易使用教学</h3><p>kea可以通过<code>keactrl</code>来启用各项服务（其实systemctl也可以用，如果是从源码编译的systemctl命令不能开箱即用），例如可以使用以下命令查看服务状态</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@testserver:/home/app/kea<span class="token comment"># keactrl status</span>DHCPv4 server: activeDHCPv6 server: activeDHCP DDNS: activeControl Agent: activeKea DHCPv4 configuration file: /etc/kea/kea-dhcp4.confKea DHCPv6 configuration file: /etc/kea/kea-dhcp6.confKea DHCP DDNS configuration file: /etc/kea/kea-dhcp-ddns.confKea Control Agent configuration file: /etc/kea/kea-ctrl-agent.confkeactrl configuration file: /etc/kea/keactrl.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>可以看到各项服务都启动了</p><p>在不添加选项的情况下，<code>keactrl start</code>将会根据配置文件夹下的<code>keactrl.conf</code>配置文件的内容来启动相关服务，例如我们不想启动DHCPv6的服务的话就可以将配置文件中的</p><figure><div class="code-wrapper"><pre class="line-numbers language-config" data-language="config"><code class="language-config"># Start DHCPv6 server?dhcp6&#x3D;yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>改成</p><figure><div class="code-wrapper"><pre class="line-numbers language-config" data-language="config"><code class="language-config"># Start DHCPv6 server?dhcp6&#x3D;no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h3 id="配置文件解析"><a href="#配置文件解析" class="headerlink" title="配置文件解析"></a>配置文件解析</h3><p>此处我们以DHCPv4来说（别的我也不想用）,下面是一个配置文件的节选（不用仔细看，我会将其拆分的更仔细，仅注意我所添加的分割线即可）</p><figure><div class="code-wrapper"><pre class="line-numbers language-config" data-language="config"><code class="language-config">&quot;Dhcp4&quot;: &#123;    &quot;interfaces-config&quot;: &#123;        &quot;interfaces&quot;: [ ]    &#125;,&#x2F;&#x2F; ################################ 此处分割 #######################################    &quot;control-socket&quot;: &#123;        &quot;socket-type&quot;: &quot;unix&quot;,        &quot;socket-name&quot;: &quot;&#x2F;tmp&#x2F;kea4-ctrl-socket&quot;    &#125;,&#x2F;&#x2F; ################################ 此处分割 #######################################    &quot;lease-database&quot;: &#123;        &#x2F;&#x2F; Memfile is the simplest and easiest backend to use. It&#39;s an in-memory        &#x2F;&#x2F; C++ database that stores its state in CSV file.        &quot;type&quot;: &quot;memfile&quot;,        &quot;lfc-interval&quot;: 3600    &#125;,    &quot;hosts-database&quot;: &#123;        &quot;type&quot;: &quot;mysql&quot;,        &quot;name&quot;: &quot;kea&quot;,        &quot;user&quot;: &quot;kea&quot;,        &quot;password&quot;: &quot;kea&quot;,        &quot;host&quot;: &quot;localhost&quot;,        &quot;port&quot;: 3306    &#125;,&#x2F;&#x2F; ################################ 此处分割 #######################################    &quot;expired-leases-processing&quot;: &#123;        &quot;reclaim-timer-wait-time&quot;: 10,        &quot;flush-reclaimed-timer-wait-time&quot;: 25,        &quot;hold-reclaimed-time&quot;: 3600,        &quot;max-reclaim-leases&quot;: 100,        &quot;max-reclaim-time&quot;: 250,        &quot;unwarned-reclaim-cycles&quot;: 5    &#125;,    &quot;renew-timer&quot;: 900,    &quot;rebind-timer&quot;: 1800,    &quot;valid-lifetime&quot;: 3600,    &quot;option-data&quot;: [        &#123;            &quot;name&quot;: &quot;domain-name-servers&quot;,            &quot;data&quot;: &quot;192.0.2.1, 192.0.2.2&quot;        &#125;,        &#123;            &quot;code&quot;: 15,            &quot;data&quot;: &quot;example.org&quot;        &#125;,        &#123;            &quot;name&quot;: &quot;domain-search&quot;,            &quot;data&quot;: &quot;mydomain.example.com, example.com&quot;        &#125;,        &#123;            &quot;name&quot;: &quot;boot-file-name&quot;,            &quot;data&quot;: &quot;EST5EDT4\\,M3.2.0&#x2F;02:00\\,M11.1.0&#x2F;02:00&quot;        &#125;,        &#123;            &quot;name&quot;: &quot;default-ip-ttl&quot;,            &quot;data&quot;: &quot;0xf0&quot;        &#125;    ],&#x2F;&#x2F; ################################ 此处分割 #######################################    &quot;client-classes&quot;: [        &#123;            &quot;name&quot;: &quot;voip&quot;,            &quot;test&quot;: &quot;substring(option[60].hex,0,6) &#x3D;&#x3D; &#39;Aastra&#39;&quot;,            &quot;next-server&quot;: &quot;192.0.2.254&quot;,            &quot;server-hostname&quot;: &quot;hal9000&quot;,            &quot;boot-file-name&quot;: &quot;&#x2F;dev&#x2F;null&quot;        &#125;    ],&#x2F;&#x2F; ################################ 此处分割 #######################################    &#x2F;&#x2F; &quot;hooks-libraries&quot;: [    &#x2F;&#x2F;   &#123;    &#x2F;&#x2F;       &#x2F;&#x2F; Forensic Logging library generates forensic type of audit trail    &#x2F;&#x2F;       &#x2F;&#x2F; of all devices serviced by Kea, including their identifiers    &#x2F;&#x2F;       &#x2F;&#x2F; (like MAC address), their location in the network, times    &#x2F;&#x2F;       &#x2F;&#x2F; when they were active etc.    &#x2F;&#x2F;       &quot;library&quot;: &quot;&#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;kea&#x2F;hooks&#x2F;libdhcp_legal_log.so&quot;,    &#x2F;&#x2F;       &quot;parameters&quot;: &#123;    &#x2F;&#x2F;           &quot;path&quot;: &quot;&#x2F;var&#x2F;lib&#x2F;kea&quot;,    &#x2F;&#x2F;           &quot;base-name&quot;: &quot;kea-forensic4&quot;    &#x2F;&#x2F;       &#125;    &#x2F;&#x2F;   &#125;,    &#x2F;&#x2F;   &#123;    &#x2F;&#x2F;       &#x2F;&#x2F; Flexible identifier (flex-id). Kea software provides a way to    &#x2F;&#x2F;       &#x2F;&#x2F; handle host reservations that include addresses, prefixes,    &#x2F;&#x2F;       &#x2F;&#x2F; options, client classes and other features. The reservation can    &#x2F;&#x2F;       &#x2F;&#x2F; be based on hardware address, DUID, circuit-id or client-id in    &#x2F;&#x2F;       &#x2F;&#x2F; DHCPv4 and using hardware address or DUID in DHCPv6. However,    &#x2F;&#x2F;       &#x2F;&#x2F; there are sometimes scenario where the reservation is more    &#x2F;&#x2F;       &#x2F;&#x2F; complex, e.g. uses other options that mentioned above, uses part    &#x2F;&#x2F;       &#x2F;&#x2F; of specific options or perhaps even a combination of several    &#x2F;&#x2F;       &#x2F;&#x2F; options and fields to uniquely identify a client. Those scenarios    &#x2F;&#x2F;       &#x2F;&#x2F; are addressed by the Flexible Identifiers hook application.    &#x2F;&#x2F;       &quot;library&quot;: &quot;&#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;kea&#x2F;hooks&#x2F;libdhcp_flex_id.so&quot;,    &#x2F;&#x2F;       &quot;parameters&quot;: &#123;    &#x2F;&#x2F;           &quot;identifier-expression&quot;: &quot;relay4[2].hex&quot;    &#x2F;&#x2F;       &#125;    &#x2F;&#x2F;   &#125;    &#x2F;&#x2F; ],&#x2F;&#x2F; ################################ 此处分割 #######################################    &quot;subnet4&quot;: [        &#123;            &quot;subnet&quot;: &quot;192.0.2.0&#x2F;24&quot;,            &quot;pools&quot;: [ &#123; &quot;pool&quot;: &quot;192.0.2.1 - 192.0.2.200&quot; &#125; ],            &quot;option-data&quot;: [                &#123;                    &quot;name&quot;: &quot;routers&quot;,                    &quot;data&quot;: &quot;192.0.2.1&quot;                &#125;            ],            &quot;reservations&quot;: [                &#123;                    &quot;hw-address&quot;: &quot;1a:1b:1c:1d:1e:1f&quot;,                    &quot;ip-address&quot;: &quot;192.0.2.201&quot;                &#125;            ]        &#125;    ],&#x2F;&#x2F; ################################ 此处分割 #######################################    &quot;loggers&quot;: [    &#123;        &quot;name&quot;: &quot;kea-dhcp4&quot;,        &quot;output_options&quot;: [            &#123;                &#x2F;&#x2F; Specifies the output file. There are several special values                &#x2F;&#x2F; supported:                &#x2F;&#x2F; - stdout (prints on standard output)                &#x2F;&#x2F; - stderr (prints on standard error)                &#x2F;&#x2F; - syslog (logs to syslog)                &#x2F;&#x2F; - syslog:name (logs to syslog using specified name)                &#x2F;&#x2F; Any other value is considered a name of the file                &quot;output&quot;: &quot;&#x2F;var&#x2F;log&#x2F;kea-dhcp4.log&quot;                &#x2F;&#x2F; Shorter log pattern suitable for use with systemd,                &#x2F;&#x2F; avoids redundant information                &#x2F;&#x2F; &quot;pattern&quot;: &quot;%-5p %m\n&quot;                &#x2F;&#x2F; This governs whether the log output is flushed to disk after                &#x2F;&#x2F; every write.                &#x2F;&#x2F; &quot;flush&quot;: false,                &#x2F;&#x2F; This specifies the maximum size of the file before it is                &#x2F;&#x2F; rotated.                &#x2F;&#x2F; &quot;maxsize&quot;: 1048576,                &#x2F;&#x2F; This specifies the maximum number of rotated files to keep.                &#x2F;&#x2F; &quot;maxver&quot;: 8            &#125;        ],        &quot;severity&quot;: &quot;INFO&quot;,        &quot;debuglevel&quot;: 0    &#125;  ]&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="监听网卡配置"><a href="#监听网卡配置" class="headerlink" title="监听网卡配置"></a>监听网卡配置</h4><p>配置文件中的<code>interfaces-config</code>配置用于告诉软件应该监听什么端口，例如我们的网口为<code>eth0</code>，就应该将此项配置的<code>&quot;interfaces&quot;: [ ]</code>改为如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-config" data-language="config"><code class="language-config">&quot;interfaces&quot;: [ &#39;eth0&#39; ]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h4><p>数据库配置有两种，一种为以本地文件为数据库的形式，即下面这段</p><figure><div class="code-wrapper"><pre class="line-numbers language-config" data-language="config"><code class="language-config">&quot;lease-database&quot;: &#123;    &#x2F;&#x2F; Memfile is the simplest and easiest backend to use. It&#39;s an in-memory    &#x2F;&#x2F; C++ database that stores its state in CSV file.    &quot;type&quot;: &quot;memfile&quot;,    &quot;lfc-interval&quot;: 3600&#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>还有一种是真数据库，即下面这段</p><figure><div class="code-wrapper"><pre class="line-numbers language-config" data-language="config"><code class="language-config">&quot;hosts-database&quot;: &#123;    &quot;type&quot;: &quot;mysql&quot;,    &quot;name&quot;: &quot;kea&quot;,    &quot;user&quot;: &quot;kea&quot;,    &quot;password&quot;: &quot;kea&quot;,    &quot;host&quot;: &quot;localhost&quot;,    &quot;port&quot;: 3306&#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>可以根据自己的实际情况选择使用哪一种</p><h4 id="全局的DHCP配置"><a href="#全局的DHCP配置" class="headerlink" title="全局的DHCP配置"></a>全局的DHCP配置</h4><figure><div class="code-wrapper"><pre class="line-numbers language-config" data-language="config"><code class="language-config">&quot;expired-leases-processing&quot;: &#123;    .......&#125;,&quot;renew-timer&quot;: 900,&quot;rebind-timer&quot;: 1800,&quot;valid-lifetime&quot;: 3600,&quot;option-data&quot;: [    .......],<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>上面这段为全局下的dhcp配置</p><ul><li><code>renew-timer</code>表示客户端在租约过期前需要发起续租（Renew）请求的时间间隔。在默认配置中，客户端应在租约过期前的<strong>几秒</strong>内发送续租请求。如果客户端成功续租，则租约会得到更新，继续使用同一IP地址</li><li><code>rebind-timer</code>表示在租约过期后，如果客户端无法与原DHCP服务器通信，客户端可以向任意可用的DHCP服务器发送绑定（Rebind）请求的时间间隔。在默认配置中，客户端可以在租约过期后的<strong>几秒</strong>内发送绑定请求，以尝试绑定到任意可用的DHCP服务器并获取新的租约</li><li><code>valid-lifetime</code>表示租约的有效期，即客户端可以使用分配的IP地址的时间长度。在默认配置中，客户端获得的租约将在<strong>几秒</strong>后过期，除非在此期间成功进行了续租。</li></ul><p><code>option-data</code>中所填入的为RFC2132定义的DHCP的各类功能相关的配置，基本格式如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-config" data-language="config"><code class="language-config">&#123;    &quot;code&quot;: 15,    &quot;data&quot;: &quot;example.org&quot;&#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>上面这段代码的含义是定义了DHCP服务器的域名（Domain Name，DHCP代码为15），下面是部分的DHCP代码表提供参考</p><table><thead><tr><th>DHCP代码</th><th>含义</th></tr></thead><tbody><tr><td>1</td><td>子网掩码（Subnet Mask）</td></tr><tr><td>2</td><td>时间偏移（Time Offset）</td></tr><tr><td>3</td><td>默认网关（Router）</td></tr><tr><td>4</td><td>时间服务器（Time Server）</td></tr><tr><td>5</td><td>名称服务器（Name Server）</td></tr><tr><td>6</td><td>DNS服务器（Domain Name Server）</td></tr><tr><td>7</td><td>日志服务器（Log Server）</td></tr><tr><td>8</td><td>Cookie服务器（Cookie Server）</td></tr><tr><td>9</td><td>LPR服务器（Line Printer Server）</td></tr><tr><td>12</td><td>主机名（Host Name）</td></tr><tr><td>15</td><td>域名（Domain Name）</td></tr><tr><td>17</td><td>根路径（Root Path）</td></tr><tr><td>18</td><td>扩展路径（Extensions Path）</td></tr><tr><td>19</td><td>IP层最大数据长度（IP Layer Maximum Datagram Size）</td></tr><tr><td>23</td><td>默认IP生存时间（Default IP Time-to-Live）</td></tr><tr><td>28</td><td>广播地址（Broadcast Address）</td></tr><tr><td>33</td><td>静态路由（Static Route）</td></tr><tr><td>43</td><td>供应商特定选项（Vendor Specific Information）</td></tr><tr><td>50</td><td>请求的IP地址（Requested IP Address）</td></tr><tr><td>51</td><td>租约时间（IP Address Lease Time）</td></tr><tr><td>53</td><td>DHCP消息类型（DHCP Message Type）</td></tr><tr><td>54</td><td>服务器标识（Server Identifier）</td></tr><tr><td>55</td><td>参数请求列表（Parameter Request List）</td></tr><tr><td>56</td><td>DHCP消息（Message）</td></tr><tr><td>57</td><td>最大DHCP消息大小（Maximum DHCP Message Size）</td></tr><tr><td>58</td><td>客户端唯一标识（Client Identifier）</td></tr><tr><td>59</td><td>客户端状态（Client System）</td></tr><tr><td>60</td><td>厂商类标识（Vendor class identifier）</td></tr><tr><td>61</td><td>客户机硬件地址（Client Identifier）</td></tr><tr><td>66</td><td>TFTP服务器名称（TFTP Server Name）</td></tr><tr><td>67</td><td>引导文件名称（Bootfile Name）</td></tr><tr><td>69</td><td>炸弹选项（DHCP Relay Agent Information）</td></tr><tr><td>150</td><td>TFTP服务器地址（TFTP Server Address）</td></tr></tbody></table><p>需要注意，这是标准的DHCP协议的定义，虽然kea的软件是遵照标准所设计的，但在实际填写各选项时，请务必还是看一眼kea的<a href="https://kea.readthedocs.io/en/kea-2.0.2/arm/dhcp4-srv.html#standard-dhcpv4-options">官方文档</a>，确定配置应如何编写</p><h4 id="kea扩展"><a href="#kea扩展" class="headerlink" title="kea扩展"></a>kea扩展</h4><p>在配置文件中为<code>hooks-libraries</code>段落，此为kea的高级应用，不说了（我懒）</p><h4 id="地址池配置"><a href="#地址池配置" class="headerlink" title="地址池配置"></a>地址池配置</h4><p>地址池配置为<code>subnet4</code>段落，下面是定义一个网段的配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-config" data-language="config"><code class="language-config">&#123;            &quot;subnet&quot;: &quot;192.0.2.0&#x2F;24&quot;,            &quot;pools&quot;: [ &#123; &quot;pool&quot;: &quot;192.0.2.1 - 192.0.2.200&quot; &#125; ],            &quot;option-data&quot;: [                &#123;                    &quot;name&quot;: &quot;routers&quot;,                    &quot;data&quot;: &quot;192.0.2.1&quot;                &#125;            ],            &quot;reservations&quot;: [                &#123;                    &quot;hw-address&quot;: &quot;1a:1b:1c:1d:1e:1f&quot;,                    &quot;ip-address&quot;: &quot;192.0.2.201&quot;                &#125;            ]        &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ul><li>subnet: 定义一个子网，此处为 <code>192.0.2.0/24</code>，表示一个以 <code>192.0.2.0</code> 作为网络地址的CIDR形式的子网，子网掩码为<code>255.255.255.0</code>。</li><li>pools: 定义了一个地址池，其中包含一个范围。此处的地址池为 “192.0.2.1 - 192.0.2.200”，表示可用于分配的IP地址范围从<code>192.0.2.1</code>到<code>192.0.2.200</code>。</li><li>option-data: 定义了DHCP选项的数据。在这里，指定了一个名为 “routers” 的选项，其值为 <code>192.0.2.1</code>。这表示在DHCP租约期间，客户端将收到一个名为 “routers” 的选项，并且该选项的值将设置为 “192.0.2.1”，指示客户端使用该IP地址作为默认网关。这个定义仅适用于此地址池，且其优先级高于全局的option-data。</li><li>reservations: 定义了一个预留（reservation），用于为特定的客户端设备分配特定的IP地址。在此配置中，指定了一个硬件地址（hw-address）为 <code>1a:1b:1c:1d:1e:1f</code> 的设备，将被分配IP地址 <code>192.0.2.201</code>。</li></ul><h2 id="为什么最后又不选择使用kea-DHCP？"><a href="#为什么最后又不选择使用kea-DHCP？" class="headerlink" title="为什么最后又不选择使用kea DHCP？"></a>为什么最后又不选择使用kea DHCP？</h2><ul><li><p>kea DHCP的模块化确实为部署提供了很多的选择，但这个模块化并不人性，并不是通过添加或删除可执行文件就可以增加或减少其功能的，而是需要进行编译。</p></li><li><p>stork为kea官方所推荐使用的监控平台，但功能过于鸡肋。</p></li><li><p>数据库方面没有很成熟的方式进行操作，交互上需要通过hook，并且如果要方便管理员使用则需要二次开发</p></li><li><p>json格式的配置文件过于反人类，看的眼睛疼</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Linux</tag>
      
      <tag>DHCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Openwrt使用wireguard实现异地组网</title>
    <link href="/2023/02/08/wireguard-connect/"/>
    <url>/2023/02/08/wireguard-connect/</url>
    
    <content type="html"><![CDATA[<blockquote><p>失踪几个月终于更新了</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>事情是这样的，早在2022年我换上了Pixe之后惊奇的发现android13默默移除了L2TP的支持，只能使用IPsec的VPN了，对于我这样的懒狗来说，配置IPsec是不可能的，这辈子都是不可能的</p><p>所以！我换掉了原先家中使用的某品牌成品AC，改用支持<code>wireguard</code>的Openwrt开发板来作为主路由使用。并开始了这一次的折腾</p><span id="more"></span><h2 id="设备及环境介绍"><a href="#设备及环境介绍" class="headerlink" title="设备及环境介绍"></a>设备及环境介绍</h2><p>在实作过程中，踩了不少坑，并且由于openwrt版本不同的情况下软件包会有一点区别，所以在此标注本次实操的系统版本等信息，<strong>需要注意：请保证两端LAN的网段不能有重合！</strong></p><table><thead><tr><th align="center">设备</th><th align="center">A地路由（拥有ipv4公网IP）</th><th align="center">B地路由（无ipv4公网IP）</th></tr></thead><tbody><tr><td align="center">系统版本</td><td align="center">openwrt-22.03</td><td align="center">openwrt-22.03</td></tr><tr><td align="center">LAN口IP</td><td align="center">192.168.10.1&#x2F;24</td><td align="center">192.168.20.1&#x2F;24</td></tr><tr><td align="center">wg网段IP</td><td align="center">10.0.0.1&#x2F;24</td><td align="center">10.0.0.2&#x2F;24</td></tr></tbody></table><h2 id="A地路由设置"><a href="#A地路由设置" class="headerlink" title="A地路由设置"></a>A地路由设置</h2><h3 id="添加防火墙"><a href="#添加防火墙" class="headerlink" title="添加防火墙"></a>添加防火墙</h3><p>首先需要添加一个<code>wireguard</code>的防火墙区域，依照下图设置即可</p><p><img src="https://pic.imgdb.cn/item/63e35bee4757feff331f20e7.jpg"></p><h3 id="添加wireguard虚拟接口"><a href="#添加wireguard虚拟接口" class="headerlink" title="添加wireguard虚拟接口"></a>添加wireguard虚拟接口</h3><p>在 <code>网络</code>-<code>接口</code> 页面新建一个接口，名字随意并选择协议为<code>Wireguard VPN</code></p><p><img src="https://pic.imgdb.cn/item/63e35ca54757feff33206d07.jpg"></p><h3 id="虚拟接口配置"><a href="#虚拟接口配置" class="headerlink" title="虚拟接口配置"></a>虚拟接口配置</h3><p>点击<code>生成新的密钥对</code>生成本机的公钥和私钥，并填写下方监听端口我们规划好的此设备在wireguard虚拟网络中的ip</p><p><img src="https://pic.imgdb.cn/item/63e35dec4757feff3322a2bb.jpg"></p><p>记得配置此接口所在的防火墙区域</p><p><img src="https://pic.imgdb.cn/item/63e35e1e4757feff3322f9de.jpg"></p><p>到这里，我们就可以暂时保存端口的设置了，等B设备配置好后我们再回来配置对端设置。（其实此处可以先在这台路由上将B端的公私钥生成好并填写对端配置）</p><h3 id="配置静态路由"><a href="#配置静态路由" class="headerlink" title="配置静态路由"></a>配置静态路由</h3><p>为了让局域网下的设备访问到对端网段下的设备，最好请添加以下静态路由（实测好像不加也没事）</p><p><img src="https://pic.imgdb.cn/item/63e35f024757feff3324aa94.jpg"></p><p>上图中的含义为：当接口区域<code>wg</code>有去往<code>192.168.20.0/24</code>网段的数据包时，将其网关设为本机在<code>wireguard</code>虚拟网络中的ip地址</p><h2 id="B地路由设置"><a href="#B地路由设置" class="headerlink" title="B地路由设置"></a>B地路由设置</h2><h3 id="添加防火墙-1"><a href="#添加防火墙-1" class="headerlink" title="添加防火墙"></a>添加防火墙</h3><p>首先需要添加一个<code>wireguard</code>的防火墙区域，依照下图设置即可</p><p><img src="https://pic.imgdb.cn/item/63e35bee4757feff331f20e7.jpg"></p><h3 id="添加wireguard虚拟接口-1"><a href="#添加wireguard虚拟接口-1" class="headerlink" title="添加wireguard虚拟接口"></a>添加wireguard虚拟接口</h3><p>在 <code>网络</code>-<code>接口</code> 页面新建一个接口，名字随意并选择协议为<code>Wireguard VPN</code></p><p><img src="https://pic.imgdb.cn/item/63e35ca54757feff33206d07.jpg"></p><h3 id="虚拟接口配置-1"><a href="#虚拟接口配置-1" class="headerlink" title="虚拟接口配置"></a>虚拟接口配置</h3><p>点击<code>生成新的密钥对</code>生成本机的公钥和私钥，并填写下方我们规划好的此设备在wireguard虚拟网络中的ip，由于此地无公网ip所以监听端口是否配置其实无所谓（默认其实会开一个）</p><p><img src="https://pic.imgdb.cn/item/63e360e14757feff3327f0fc.jpg"></p><p>记得配置此接口所在的防火墙区域</p><p><img src="https://pic.imgdb.cn/item/63e35e1e4757feff3322f9de.jpg"></p><h3 id="配置对端（A地路由信息）"><a href="#配置对端（A地路由信息）" class="headerlink" title="配置对端（A地路由信息）"></a>配置对端（A地路由信息）</h3><p>在对端选项卡中添加一个对端，并填入A路由的对应信息<br><img src="https://pic.imgdb.cn/item/63e361984757feff33294b6a.jpg"><br>在允许的ip选项中除了要填A端路由在虚拟网络中的ip（10.0.0.1&#x2F;24）外，要加A地LAN的网段（192.168.1.0&#x2F;24）</p><p>私钥和预共享密钥为可选项。</p><h3 id="配置静态路由-1"><a href="#配置静态路由-1" class="headerlink" title="配置静态路由"></a>配置静态路由</h3><p>为了让局域网下的设备访问到对端网段下的设备，最好请添加以下静态路由（实测好像不加也没事）</p><p><img src="https://pic.imgdb.cn/item/63e3628d4757feff332b1a01.jpg"></p><p>上图中的含义为：当接口区域<code>wg</code>有去往<code>192.168.10.0/24</code>网段的数据包时，将其网关设为本机在<code>wireguard</code>虚拟网络中的ip地址</p><h2 id="A地路由的对端设置"><a href="#A地路由的对端设置" class="headerlink" title="A地路由的对端设置"></a>A地路由的对端设置</h2><p>回到A地路由器的配置，我们将B端信息填入对端选项卡中并保存应用</p><p><img src="https://pic.imgdb.cn/item/63e3634a4757feff332c6b98.jpg"></p><h2 id="使配置生效"><a href="#使配置生效" class="headerlink" title="使配置生效"></a>使配置生效</h2><p>在保存并应用配置后就已完成所有配置项，但建议重启wg虚拟端口，最好直接重启路由器，以免系统抽风没有无法正常使用。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>openwrt</tag>
      
      <tag>VPN</tag>
      
      <tag>异地组网</tag>
      
      <tag>wireguard</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安全启动时在Linux下使用VMware</title>
    <link href="/2022/08/31/Linux/tutorial/vmware-on-ubuntu/"/>
    <url>/2022/08/31/Linux/tutorial/vmware-on-ubuntu/</url>
    
    <content type="html"><![CDATA[<p>由于莫名其妙的原因，在ubunut下使用VMware workstation需要手动编译<code>vmnet</code>和<code>vmmon</code>，而对于自己编译安装的内核组件来说，在bios启用安全启动选项的情况下是没法正常使用的，所以这时候我们就需要手工给内核签名了</p><h1 id="首次使用"><a href="#首次使用" class="headerlink" title="首次使用"></a>首次使用</h1><p>复制以下内容即可,请使用root用户</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /root/vmware<span class="token builtin class-name">cd</span> /root/vmware<span class="token function">git</span> clone https://github.com/mkubecek/vmware-host-modules<span class="token builtin class-name">cd</span> vmware-host-modules<span class="token function">git</span> checkout workstation-16.2.3<span class="token function">sudo</span> <span class="token function">make</span> <span class="token punctuation">;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-x509</span> <span class="token parameter variable">-newkey</span> rsa:2048 <span class="token parameter variable">-keyout</span> MOK.priv <span class="token parameter variable">-outform</span> DER <span class="token parameter variable">-out</span> MOK.der <span class="token parameter variable">-nodes</span> <span class="token parameter variable">-days</span> <span class="token number">36500</span> <span class="token parameter variable">-subj</span> <span class="token string">"/CN=VMware/"</span>/usr/src/linux-headers-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token variable">`</span></span>/scripts/sign-file sha256 ./MOK.priv ./MOK.der <span class="token variable"><span class="token variable">$(</span>modinfo <span class="token parameter variable">-n</span> vmmon<span class="token variable">)</span></span>/usr/src/linux-headers-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token variable">`</span></span>/scripts/sign-file sha256 ./MOK.priv ./MOK.der <span class="token variable"><span class="token variable">$(</span>modinfo <span class="token parameter variable">-n</span> vmnet<span class="token variable">)</span></span>mokutil <span class="token parameter variable">--import</span> MOK.der<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>重启一次，并根据向导接受签名</p><h1 id="后续使用"><a href="#后续使用" class="headerlink" title="后续使用"></a>后续使用</h1><p>每次更新系统内核后都需要重新签名，使用以下命令即可</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">rm</span> <span class="token parameter variable">-rf</span> /root/vmware/vmware-host-modules<span class="token builtin class-name">cd</span> /root/vmware<span class="token function">git</span> clone https://github.com/mkubecek/vmware-host-modules<span class="token builtin class-name">cd</span> vmware-host-modules<span class="token function">git</span> checkout workstation-16.2.3<span class="token function">sudo</span> <span class="token function">make</span> <span class="token punctuation">;</span> <span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span class="token builtin class-name">cd</span> /root/vmware<span class="token function">sudo</span> /usr/src/linux-headers-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token variable">`</span></span>/scripts/sign-file sha256 ./MOK.priv ./MOK.der <span class="token variable"><span class="token variable">$(</span>modinfo <span class="token parameter variable">-n</span> vmmon<span class="token variable">)</span></span><span class="token function">sudo</span> /usr/src/linux-headers-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token variable">`</span></span>/scripts/sign-file sha256 ./MOK.priv ./MOK.der <span class="token variable"><span class="token variable">$(</span>modinfo <span class="token parameter variable">-n</span> vmnet<span class="token variable">)</span></span>mokutil <span class="token parameter variable">--import</span> MOK.der<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>其实Linux下使用KVM跑虚拟机会比使用VMware的体验好太多，在没有特别要求使用VMware的情况下强烈建议使用KVM。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Linux</tag>
      
      <tag>VMware</tag>
      
      <tag>虚拟机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用docker部署onedrive容器</title>
    <link href="/2022/08/27/onedrive-on-docker/"/>
    <url>/2022/08/27/onedrive-on-docker/</url>
    
    <content type="html"><![CDATA[<p>好久不见，我终于更新了……<br>原本计划是要更新kubernetes相关文章的，但是：</p><blockquote><p>🕊️了</p></blockquote><p>今天来讲解onedrive的事</p><h1 id="为什么要用docker部署onedrive？"><a href="#为什么要用docker部署onedrive？" class="headerlink" title="为什么要用docker部署onedrive？"></a>为什么要用docker部署onedrive？</h1><p>众所周知我人是非常非常非常！！！讨厌Windows的，所以目前我已经全面转向使用Linux了。<br>虽然是已全面转向Windows，但Office365还续着费呢，并且由于<a href="https://share.xianyu.one/">分享站</a>，以及移动端的需求，我也不打算停止续费。<br>既然如此，那必定是需要把Onedrive利用起来的。</p><p>由于微软“强大的”开发实力，并没有为linux推出官方的onedrive客户端，所以我们就需要自己动手部署第三方的了</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>这里可以直接使用脚本安装</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://get.docker.com <span class="token operator">|</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span> <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>对于国内的小伙伴可以使用以下脚本</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://get.docker.com <span class="token operator">|</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span> <span class="token function">docker</span> <span class="token parameter variable">--mirror</span> Aliyun<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="确定文件夹位置"><a href="#确定文件夹位置" class="headerlink" title="确定文件夹位置"></a>确定文件夹位置</h2><p>这次我们使用的是来自<a href="https://github.com/abraunegg/onedrive">abraunegg&#x2F;onedrive</a>的第三方客户端，同时使用docker部署，以避免可能遇到的各种各样奇奇怪怪的问题。</p><p>对于docker部署来说，我们主要用到两个文件夹:</p><table><thead><tr><th align="center">容器路径</th><th align="center">说明</th><th align="center">主机路径推荐</th></tr></thead><tbody><tr><td align="center">&#x2F;onedrive&#x2F;conf</td><td align="center">用于放置数据库以及TOKEN</td><td align="center">~&#x2F;docker&#x2F;onedrive&#x2F;conf</td></tr><tr><td align="center">&#x2F;onedrive&#x2F;data</td><td align="center">onedrive的文件夹（默认为onedrive根目录）</td><td align="center">~&#x2F;OneDrive</td></tr></tbody></table><p>以上是我储存数据的位置</p><h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/docker/onedrive/conf<span class="token function">mkdir</span> ~/OneDrive <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h1 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h1><p><strong>注意：使用这个客户端双向同步的话将完全同步OneDrive下的所有文件，如果OneDrive中有巨量文件的话将占用大量本地磁盘空间！</strong></p><h2 id="首次运行"><a href="#首次运行" class="headerlink" title="首次运行"></a>首次运行</h2><p>首次运行请参照以下格式运行：</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--name</span> onedrive <span class="token parameter variable">-v</span> /home/<span class="token variable">$&#123;<span class="token environment constant">USER</span>&#125;</span>/docker/onedrive/conf:/onedrive/conf <span class="token punctuation">\</span>    <span class="token parameter variable">-v</span> <span class="token string">"/home/<span class="token variable">$&#123;<span class="token environment constant">USER</span>&#125;</span>/OneDrive:/onedrive/data"</span> <span class="token punctuation">\</span>    <span class="token parameter variable">-e</span> <span class="token string">"ONEDRIVE_UID=<span class="token variable">$&#123;<span class="token environment constant">UID</span>&#125;</span>"</span> <span class="token punctuation">\</span>    <span class="token parameter variable">-e</span> <span class="token string">"ONEDRIVE_GID=<span class="token variable">$&#123;GID&#125;</span>"</span> <span class="token punctuation">\</span>    driveone/onedrive:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>请将以上命令按照下方步骤填充好</p><h3 id="确定用户文件夹绝对路径"><a href="#确定用户文件夹绝对路径" class="headerlink" title="确定用户文件夹绝对路径"></a>确定用户文件夹绝对路径</h3><p>使用以下命令可以确定用户文件夹路径</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cd ~&#x2F;pwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>输出结果为用户文件夹路径，例如我的为： <code>/home/xianyu</code></p><h3 id="确定自己的用户ID以及组ID"><a href="#确定自己的用户ID以及组ID" class="headerlink" title="确定自己的用户ID以及组ID"></a>确定自己的用户ID以及组ID</h3><p>请务必确定好自己的用户ID以及组ID，如果不使用正确的用户ID以及组ID将有极大可能无法正常访问使用文件夹下的文件！</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">id</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>这里我的UID和GID均为<code>1000</code></p><h3 id="填充命令并执行"><a href="#填充命令并执行" class="headerlink" title="填充命令并执行"></a>填充命令并执行</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--name</span> onedrive <span class="token parameter variable">-v</span> /home/xianyu/docker/onedrive/conf:/onedrive/conf <span class="token punctuation">\</span>    <span class="token parameter variable">-v</span> <span class="token string">"/home/xianyu/OneDrive:/onedrive/data"</span> <span class="token punctuation">\</span>    <span class="token parameter variable">-e</span> <span class="token string">"ONEDRIVE_UID=1000"</span> <span class="token punctuation">\</span>    <span class="token parameter variable">-e</span> <span class="token string">"ONEDRIVE_GID=1000"</span> <span class="token punctuation">\</span>    driveone/onedrive:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="获取TOKEN"><a href="#获取TOKEN" class="headerlink" title="获取TOKEN"></a>获取TOKEN</h3><p>在执行完上方命令后，命令行会输出一个URL，复制到浏览器后打开，将会登录微软帐号。<br>按照指示操作完后页面会全白，此时不要担心，不是电脑网络不好，只需要将此时浏览器上的URL填入容器输出窗口并回车即可完成首次的设置。<br><img src="https://pic.imgdb.cn/item/6309d71416f2c2beb18a77e2.jpg"></p><h3 id="删除首次运行使用的容器"><a href="#删除首次运行使用的容器" class="headerlink" title="删除首次运行使用的容器"></a>删除首次运行使用的容器</h3><p>查找容器ID</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>将首次运行用的容器删除</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">rm</span> <span class="token operator">&lt;</span>ID<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h1 id="使用docker-compose运行"><a href="#使用docker-compose运行" class="headerlink" title="使用docker-compose运行"></a>使用docker-compose运行</h1><p><strong>注意：使用docker-compose运行也必须经过上方首次运行的步骤，先确保获取到TOKEN并填入容器！</strong></p><h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><p>下载二进制文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token string">"https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">)</span></span>"</span> <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>也可使用国内镜像</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-L</span> https://get.daocloud.io/docker/compose/releases/download/v2.4.1/docker-compose-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">`</span></span>-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">`</span></span> <span class="token operator">></span> /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="下载完成后赋予可执行权限"><a href="#下载完成后赋予可执行权限" class="headerlink" title="下载完成后赋予可执行权限"></a>下载完成后赋予可执行权限</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="编写docker-compose文件"><a href="#编写docker-compose文件" class="headerlink" title="编写docker-compose文件"></a>编写docker-compose文件</h2><p>我习惯将文件放在<code>~/docker/onedrive</code>文件夹下</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/docker/onedrive<span class="token function">vim</span> ~/docker/onedrive/docker-compose.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>文件内容就是将首次运行时的docker命令变为配置文件的形式</p><figure><div class="code-wrapper"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token key atrule">onedrive</span><span class="token punctuation">:</span>        <span class="token key atrule">image</span><span class="token punctuation">:</span> driveone/onedrive<span class="token punctuation">:</span>latest        <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped        <span class="token key atrule">environment</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> ONEDRIVE_UID=1000            <span class="token punctuation">-</span> ONEDRIVE_GID=1000        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>             <span class="token punctuation">-</span> /home/xianyu/docker/onedrive/conf<span class="token punctuation">:</span>/onedrive/conf            <span class="token punctuation">-</span> /home/xianyu/OneDrive<span class="token punctuation">:</span>/onedrive/data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/docker/onedrive<span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h1 id="当修改了微软账户密码"><a href="#当修改了微软账户密码" class="headerlink" title="当修改了微软账户密码"></a>当修改了微软账户密码</h1><p>在修改了微软账户密码后，容器就会无法使用TOKEN进行同步，此时需要重新部署容器，按照官方文档的操作方法，需要先停止并删除容器，再在启动时添加一条变量退出登录并清楚conf文件夹下内容。和我一样嫌麻烦的同学可以按照下方操作进行重新登录</p><h2 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/docker/onedrive<span class="token function">docker-compose</span> down<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="删除TOKEN文件"><a href="#删除TOKEN文件" class="headerlink" title="删除TOKEN文件"></a>删除TOKEN文件</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> /home/xianyu/docker/onedrive/conf/refresh_token<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="重复首次部署流程"><a href="#重复首次部署流程" class="headerlink" title="重复首次部署流程"></a>重复首次部署流程</h2><p>接下去的操作与首次部署时完全一致，使用docker命令部署容器，并输入URL即可重新登录</p><h1 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h1><p>除了必须全量同步这一点上非常蛋疼外什么都好<br><img src="https://pic.imgdb.cn/item/6309dc1116f2c2beb18ddd62.jpg"><br>你也可以像我一样将文件夹图标改成OneDrive的Logo，让它看起来更加没有违合感</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>docker</tag>
      
      <tag>容器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker配置TLS认证</title>
    <link href="/2022/05/07/docker/docker-daemon-tls/"/>
    <url>/2022/05/07/docker/docker-daemon-tls/</url>
    
    <content type="html"><![CDATA[<p>当拥有不只一台Linux服务器的时候就会想着把多台服务器的docker进行统一管理，而直接使用docker daemon socket是很不安全的，应为没有任何加密并且没有身份验证，任何人知道暴露的端口就可以操作本机的docker，而docker需要root权限运行，所以约等于让人得到了root权限。<br>为了解决这个问题，就需要启用证书的认证。</p><h1 id="使用的平台"><a href="#使用的平台" class="headerlink" title="使用的平台"></a>使用的平台</h1><p>注：服务器信息经过处理</p><ul><li>Portainer Web服务器 地址：192.168.1.1</li><li>须启用docker daemon socket的远程主机 地址：192.168.2.1<br>两台主机系统均为Debian，并已经安装好了Docker</li></ul><p>申请证书、修改配置这些操作均在<code>须启用docker daemon socket的远程主机</code>进行操作</p><h1 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h1><p>这里使用自签名证书<br>这里创建一个文件夹用于存放所有证书</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /home/ca<span class="token builtin class-name">cd</span> /home/ca<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="生成-CA-公钥和私钥"><a href="#生成-CA-公钥和私钥" class="headerlink" title="生成 CA 公钥和私钥"></a>生成 CA 公钥和私钥</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl genrsa <span class="token parameter variable">-aes256</span> <span class="token parameter variable">-out</span> ca-key.pem <span class="token number">4096</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-x509</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-key</span> ca-key.pem <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> ca.pem  <span class="token comment">#此处创建的证书为十年，绝对够用到换服务器了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="创建-Server-端证书"><a href="#创建-Server-端证书" class="headerlink" title="创建 Server 端证书"></a>创建 Server 端证书</h2><p>请自行替换<code>本机地址</code>与<code>本机域名</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl genrsa <span class="token parameter variable">-out</span> server-key.pem <span class="token number">4096</span>openssl req <span class="token parameter variable">-subj</span> <span class="token string">"/CN=本机地址"</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> server-key.pem <span class="token parameter variable">-out</span> server.csr<span class="token builtin class-name">echo</span> subjectAltName <span class="token operator">=</span> DNS:本机域名,IP:本机地址,IP:127.0.0.1 <span class="token operator">>></span> extfile.cnf<span class="token builtin class-name">echo</span> extendedKeyUsage <span class="token operator">=</span> serverAuth <span class="token operator">>></span> extfile.cnfopenssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-CA</span> ca.pem <span class="token parameter variable">-CAkey</span> ca-key.pem  <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-out</span> server-cert.pem <span class="token parameter variable">-extfile</span> extfile.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="创建-client-证书"><a href="#创建-client-证书" class="headerlink" title="创建 client 证书"></a>创建 client 证书</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl genrsa <span class="token parameter variable">-out</span> key.pem <span class="token number">4096</span>openssl req <span class="token parameter variable">-subj</span> <span class="token string">'/CN=此处填写对端主机地址'</span> <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> key.pem <span class="token parameter variable">-out</span> client.csr<span class="token builtin class-name">echo</span> extendedKeyUsage <span class="token operator">=</span> clientAuth <span class="token operator">></span> extfile-client.cnfopenssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-in</span> client.csr <span class="token parameter variable">-CA</span> ca.pem <span class="token parameter variable">-CAkey</span> ca-key.pem <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-out</span> cert.pem <span class="token parameter variable">-extfile</span> extfile-client.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h1 id="修改docker的配置"><a href="#修改docker的配置" class="headerlink" title="修改docker的配置"></a>修改docker的配置</h1><h2 id="修改-etc-default-docker文件"><a href="#修改-etc-default-docker文件" class="headerlink" title="修改&#x2F;etc&#x2F;default&#x2F;docker文件"></a>修改&#x2F;etc&#x2F;default&#x2F;docker文件</h2><p>这里需要向文件中写入以下内容</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">DOCKER_OPTS&#x3D;&quot; -H tcp:&#x2F;&#x2F;0.0.0.0:2375 -H unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock --tls  --tlscacert &#x2F;home&#x2F;ca&#x2F;ca.pem --tlscert &#x2F;home&#x2F;ca&#x2F;server-cert.pem  --tlskey &#x2F;home&#x2F;ca&#x2F;server-key.pem&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="修改-lib-systemd-system-docker-service文件"><a href="#修改-lib-systemd-system-docker-service文件" class="headerlink" title="修改&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service文件"></a>修改&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service文件</h2><p>修改或添加以下内容</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">EnvironmentFile&#x3D;&#x2F;etc&#x2F;default&#x2F;dockerExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; $DOCKER_OPTS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="重启docker"><a href="#重启docker" class="headerlink" title="重启docker"></a>重启docker</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl daemon-reload<span class="token function">service</span> <span class="token function">docker</span> restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h1 id="修改ufw"><a href="#修改ufw" class="headerlink" title="修改ufw"></a>修改ufw</h1><p>根据上方修改的配置，我们的docker会监听来自<code>2375</code>端口的请求，所以我们需要放行<code>2375</code>端口</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw allow <span class="token number">2375</span>ufw <span class="token builtin class-name">enable</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h1 id="连接远端的主机"><a href="#连接远端的主机" class="headerlink" title="连接远端的主机"></a>连接远端的主机</h1><p>现在我们回到<code>Portainer Web服务器</code>，可参考下图经行连接远程主机<br><img src="https://pic.imgdb.cn/item/6275f36d09475431290f93df.jpg"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><ul><li><a href="https://beixiu.net/dev/Docker%E9%85%8D%E7%BD%AETLS%E8%AE%A4%E8%AF%81%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/">Docker配置TLS认证开启远程访问</a></li></ul></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Linux</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决VMware在更新到Ubuntu22.04LTS后无法使用的问题</title>
    <link href="/2022/04/24/Linux/tutorial/vmware-work-on-Ubuntu2204/"/>
    <url>/2022/04/24/Linux/tutorial/vmware-work-on-Ubuntu2204/</url>
    
    <content type="html"><![CDATA[<p>在更新到Ubuntu22.04后，VMware会因为<code>vmnet</code>和<code>vmmon</code>安装失败而无法运行，解决方法很简单，手动编译安装即可。</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;usr&#x2F;lib&#x2F;vmware&#x2F;modules&#x2F;sourcegit clone https:&#x2F;&#x2F;github.com&#x2F;mkubecek&#x2F;vmware-host-modulescd vmware-host-modulesgit checkout workstation-16.2.3maketar -cf vmnet.tar vmnet-onlytar -cf vmmon.tar vmmon-onlymv vmnet.tar &#x2F;usr&#x2F;lib&#x2F;vmware&#x2F;modules&#x2F;source&#x2F;mv vmmon.tar &#x2F;usr&#x2F;lib&#x2F;vmware&#x2F;modules&#x2F;source&#x2F;vmware-modconfig --console --install-all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>执行完后重新启动VMware即可</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Linux</tag>
      
      <tag>VMware</tag>
      
      <tag>虚拟机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ufw简易使用教程</title>
    <link href="/2022/03/22/Linux/tutorial/ufw/"/>
    <url>/2022/03/22/Linux/tutorial/ufw/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是ufw"><a href="#什么是ufw" class="headerlink" title="什么是ufw"></a>什么是ufw</h1><p>全称<code>Uncomplicated Firewall</code>，是一个<code>iptables</code>的接口，可以简单理解为ufw是一个用于管理<code>iptables</code>的工具，由于其命令简洁便于使用、同时支持IPv4、IPv6而受到我本人的欢迎。</p><span id="more"></span><h1 id="为什么要用ufw"><a href="#为什么要用ufw" class="headerlink" title="为什么要用ufw"></a>为什么要用ufw</h1><p>来对比一下</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#iptables开放22端口</span>iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">22</span> <span class="token parameter variable">-j</span> ACCEPTiptables <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--sport</span> <span class="token number">22</span> <span class="token parameter variable">-j</span> ACCEPT<span class="token comment">#ufw开放22端口</span>ufw allow <span class="token number">22</span>/tcpufw <span class="token builtin class-name">enable</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>你说为什么要用ufw<br>当然是简单啊！</p><h1 id="安装ufw"><a href="#安装ufw" class="headerlink" title="安装ufw"></a>安装ufw</h1><h2 id="Ubuntu-Debian"><a href="#Ubuntu-Debian" class="headerlink" title="Ubuntu&#x2F;Debian"></a>Ubuntu&#x2F;Debian</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ufw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="CentOS-RHEL"><a href="#CentOS-RHEL" class="headerlink" title="CentOS&#x2F;RHEL"></a>CentOS&#x2F;RHEL</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo yum install ufw<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h1 id="设置默认规则"><a href="#设置默认规则" class="headerlink" title="设置默认规则"></a>设置默认规则</h1><p><strong>注意：从本章节开始所有命令都是在root权限下执行的，请提前切换到root用户！<del>我实在懒得把sudo打出来了</del></strong><br>虽然一般来说刚刚安装好的ufw本来就不包含规则，但最好还是先拒绝所有传入的连接再按照自己的需求配置比较好。（<strong>此处配置完后千万不要直接执行</strong><code>ufw enable</code><strong>对这两条命令进行应用</strong>）</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw default allow outgoing <span class="token comment">#默认允许所有数据出站</span>ufw default deny incoming <span class="token comment">#默认禁止所有数据入站</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><code>ufw default</code>命令意为：默认xxx<br><code>allow</code>和<code>deny</code>详见下图：<br><img src="https://pic.imgdb.cn/item/6239577c27f86abb2ae940c4.jpg" alt="没别的意思"><br><img src="https://pic.imgdb.cn/item/6239574e27f86abb2ae87277.jpg" alt="这两个单词不认识实在不应该"></p><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><h2 id="查看当前规则"><a href="#查看当前规则" class="headerlink" title="查看当前规则"></a>查看当前规则</h2><p>你可以使用以下命令查看已生效的规则</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw statusufw status numbered  <span class="token comment">#这条会让列出的规则前面加上数字编号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="允许或禁止某端口-某服务传入和传出流量"><a href="#允许或禁止某端口-某服务传入和传出流量" class="headerlink" title="允许或禁止某端口&#x2F;某服务传入和传出流量"></a>允许或禁止某端口&#x2F;某服务传入和传出流量</h2><p>以允许22端口为例</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw allow <span class="token number">22</span>ufw deny <span class="token number">22</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>真的超级简单。</p><h3 id="仅仅允许某端口的TCP-UDP的流量"><a href="#仅仅允许某端口的TCP-UDP的流量" class="headerlink" title="仅仅允许某端口的TCP&#x2F;UDP的流量"></a>仅仅允许某端口的TCP&#x2F;UDP的流量</h3><p>在端口号后加上<code>/tcp</code>或<code>/udp</code>即可</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw allow <span class="token number">22</span>/tcpufw allow <span class="token number">22</span>/udp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="通过应用名来允许或禁止某项服务的流量（默认的端口）"><a href="#通过应用名来允许或禁止某项服务的流量（默认的端口）" class="headerlink" title="通过应用名来允许或禁止某项服务的流量（默认的端口）"></a>通过应用名来允许或禁止某项服务的流量（默认的端口）</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw allow <span class="token function">ssh</span>ufw deny <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>上面两条命令等同于</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw allow <span class="token number">22</span>/tcpufw deny <span class="token number">22</span>/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>你也可以通过这个方法来禁用</p><h2 id="使配置生效"><a href="#使配置生效" class="headerlink" title="使配置生效"></a>使配置生效</h2><p>为了使我们输入的配置生效，请使用以下命令</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw <span class="token builtin class-name">enable</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw disable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="删除生效的规则"><a href="#删除生效的规则" class="headerlink" title="删除生效的规则"></a>删除生效的规则</h2><p>你可以通过以下格式删除规则</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw delete allow <span class="token function">ssh</span>ufw delete allow <span class="token number">22</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>或者根据<code>ufw status numbered</code>给出的列表前的数字编号删除</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw delete <span class="token number">1</span> <span class="token comment">#删除编号为1的规则</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h1 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h1><h2 id="允许某IP或IP地址段访问某端口"><a href="#允许某IP或IP地址段访问某端口" class="headerlink" title="允许某IP或IP地址段访问某端口"></a>允许某IP或IP地址段访问某端口</h2><h3 id="允许某IP或IP地址段访问本机所有端口"><a href="#允许某IP或IP地址段访问本机所有端口" class="headerlink" title="允许某IP或IP地址段访问本机所有端口"></a>允许某IP或IP地址段访问本机所有端口</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw allow from <span class="token number">192.168</span>.1.1  <span class="token comment">#允许某IP访问</span>ufw allow frome <span class="token number">192.168</span>.1.0/24  <span class="token comment">#允许某IP段访问</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h3 id="某IP或IP地址段访问本机某特定端口"><a href="#某IP或IP地址段访问本机某特定端口" class="headerlink" title="某IP或IP地址段访问本机某特定端口"></a>某IP或IP地址段访问本机某特定端口</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw allow from <span class="token number">192.168</span>.1.1 any port <span class="token number">22</span>  <span class="token comment">#允许某IP访问</span>ufw allow from <span class="token number">192.168</span>.1.0/24 any port <span class="token number">22</span>  <span class="token comment">#允许某IP段访问</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="禁ping，仅允许特定IP使用ping"><a href="#禁ping，仅允许特定IP使用ping" class="headerlink" title="禁ping，仅允许特定IP使用ping"></a>禁ping，仅允许特定IP使用ping</h2><h3 id="检查是否已经关闭了icmp服务"><a href="#检查是否已经关闭了icmp服务" class="headerlink" title="检查是否已经关闭了icmp服务"></a>检查是否已经关闭了icmp服务</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/ufw/sysctl.conf <span class="token operator">|</span> <span class="token function">grep</span> net/ipv4/icmp_echo_ignore_all<span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>如果输出结果为<code>net/ipv4/icmp_echo_ignore_all=1</code>则需要到文件里把它改为<code>net/ipv4/icmp_echo_ignore_all=0</code></p><h3 id="添加规则"><a href="#添加规则" class="headerlink" title="添加规则"></a>添加规则</h3><p>在<code>/etc/ufw/before.rules</code>中添加规则</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">-A ufw-before-input -p icmp --icmp-type echo-request -s 此处填写IPv4地址或地址段 -m state --state ESTABLISHED -j ACCEPT-A ufw6-before-input -p icmpv6 --icmpv6-type echo-request -s 此处填写IPv6地址或地址段 -m state --state ESTABLISHED -j ACCEPT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h3 id="重新加载配置"><a href="#重新加载配置" class="headerlink" title="重新加载配置"></a>重新加载配置</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ufw reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://tstrs.me/1480.html">非常简单的 UFW 防火墙使用教程</a></li><li><a href="https://zhuanlan.zhihu.com/p/98880088">简明教程｜Linux中UFW的使用</a></li><li><a href="https://stackoverflow.com/questions/16376101/ufw-allow-ping-requests-only-for-specific-host">UFW: Allow ping requests only for specific host</a></li><li><a href="https://www.cnblogs.com/zqifa/p/ubuntu-ufw-1.html">ubuntu防火墙ufw使用教程</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Linux</tag>
      
      <tag>ufw</tag>
      
      <tag>防火墙</tag>
      
      <tag>Debian</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux挂载非标准端口SMB</title>
    <link href="/2022/03/21/Linux/yes/SMB/"/>
    <url>/2022/03/21/Linux/yes/SMB/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>最近开始换用Linux作为主要系统了，打算写一个系列来介绍为什么Linux比Windows好用。这是第一篇。<br/>   <span id="more"></span><br>由于SMB服务的445端口会被用于传播例如永恒之蓝等的Windows病毒，所以一般国内的运营商会直接封锁445端口，这也就导致了我们无法直接在外网使用标准端口访问家中nas上的SMB服务。而Winodws又因为其非常弱智的设计——不允许用户使用非标准端口挂载SMB，所以在Windows的公网环境下无法愉快的使用网络硬盘。当然，你也可以用端口转发的方式实现Windows挂载非标准端口的SMB（反正我没有成功过）。<br/><br>总之，我不喜欢使用Windows，也的确不熟悉这个系统的一些原理，所以我也不打算在Windows环境下折腾了。来玩Linux吧！<br/></p><!--more--><h1 id="挂载SMB的前置准备"><a href="#挂载SMB的前置准备" class="headerlink" title="挂载SMB的前置准备"></a>挂载SMB的前置准备</h1><h2 id="在挂载网络硬盘前首先要下载相关的软件包"><a href="#在挂载网络硬盘前首先要下载相关的软件包" class="headerlink" title="在挂载网络硬盘前首先要下载相关的软件包"></a>在挂载网络硬盘前首先要下载相关的软件包</h2><p>Debian&#x2F;Ubuntu下</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> cifs-utils<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>CentOS&#x2F;RHEL</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> cifs-utils<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="创建要挂载的目录"><a href="#创建要挂载的目录" class="headerlink" title="创建要挂载的目录"></a>创建要挂载的目录</h2><p>由于正常情况下我们都不会使用root用户进行日常的生产生活，所以我们把网络硬盘挂载到目前使用用户的家目录下的文件夹中才行，这里以挂载到<code>/home/xianyu/mnt/nas/disk</code>为例</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;home&#x2F;xianyu&#x2F;mnt&#x2F;nas&#x2F;disk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h1 id="如何挂载SMB"><a href="#如何挂载SMB" class="headerlink" title="如何挂载SMB"></a>如何挂载SMB</h1><p>先看我的范例</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mount</span> <span class="token parameter variable">-t</span> cifs <span class="token parameter variable">-o</span> <span class="token assign-left variable">username</span><span class="token operator">=</span>user_name,password<span class="token operator">=</span>your_password,uid<span class="token operator">=</span>xianyu,gid<span class="token operator">=</span>xianyu,port<span class="token operator">=</span><span class="token number">10086</span> //example.com/disk /home/xianyu/mnt/nas/disk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>首先来看<code>-t cifs</code>，这条指定了使用的档案系统的形态，也就是上一节安装的那个。  <br/><br>后面的<code>-o</code>参数只有root用户可以使用，所以前面要加上<code>sudo</code><br/><br>在来到<code>-o</code>后方跟着的一长串：<code>username=user_name,password=your_password,uid=xianyu,gid=xianyu,port=10086</code>，他们的含义如下：</p><table><thead><tr><th align="center">username</th><th align="center">password</th><th align="center">uid</th><th align="center">gid</th><th align="center">port</th></tr></thead><tbody><tr><td align="center">SMB服务器上登陆用的用户名</td><td align="center">SMB服务器上登陆的用户密码</td><td align="center">挂载到本地后指定的用户</td><td align="center">挂载到本地后指定的用户组</td><td align="center">SMB的端口</td></tr></tbody></table><p>这里尤其要说明一下<code>uid</code>和<code>gid</code>，由于在Linux中root用户责任重大，在正常的生产环境及个人使用时都不建议直接使用root用户进行操作，所以我们需要在挂载时指定使用普通用户、用户组进行挂载。如果不添加<code>uid</code>和<code>gid</code>参数的话，网络硬盘挂载到本地之后文件加的若属用户和用户组就是root，对于普通用户来说会没有权限对文件夹的内容进行操作。   <br/><br>最后的<code>//example.com/disk /home/xianyu/mnt/nas/disk</code>，前面的指的是SMB服务器的地址及路径，后面的就是挂载到本地的哪个位置。<br>了解完命令的意义，就可以根据自己的情况进行挂载了</p><h1 id="如何卸载SMB"><a href="#如何卸载SMB" class="headerlink" title="如何卸载SMB"></a>如何卸载SMB</h1><p>很简单，如下：</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">umount &#x2F;home&#x2F;xianyu&#x2F;mnt&#x2F;nas&#x2F;disk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux yes</tag>
      
      <tag>Linux香疯了</tag>
      
      <tag>SMB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sudo使用小技巧</title>
    <link href="/2022/03/20/Linux/tutorial/sudoers/"/>
    <url>/2022/03/20/Linux/tutorial/sudoers/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>有时好久没更新。日常摆烂。本来想这个月更新（<del>反正我已经默认月更了</del>）一篇 Xbox Series S 的评测的，但是由于种种原因，还没受到货，所以就写点别的吧。<br><br/><span id="more"></span><br>前天开始我把自己的两台电脑都刷成了Linux系统，开始正式以Linux作为主要的操作系统使用了。<br><br/><br>作为一个Linux小白，同时由于我手头上设备都比较奇葩（一台陈年Macbook Air，一台用AMD <strong>APU</strong>的惠普笔电）所以我选择了兼容性好且对于普通用户而言相对友好的Ubuntu作为电脑的操作系统。同时，在惠普的笔电上，我还保留了（其实是重新刷入了）Windows系统，以备不时之需。<br><br/><br>作为一个懒狗，不能接受普通用户在使用例如<code>apt</code>、<code>docker</code>等命令前需要加<code>sudo</code>并且输入密码，所以就有了这次小小的折腾。</p><h1 id="sudo的简单介绍"><a href="#sudo的简单介绍" class="headerlink" title="sudo的简单介绍"></a>sudo的简单介绍</h1><p><code>sudo</code>命令的含义其实就是<code>superuser do</code>，从字面意思上看我们就能知道，它的作用是通过安全的方式让用户提权使用特殊的权限执行程序。  <br/><br>而就像我上面提到的，如果想要使用<code>sudo</code>（Ubuntu）默认创建的用户，那么需要输入自己的密码才能提权，这还挺麻烦的。  <br/><br>此时我们就可以通过修改配置文件，让用户免密使用sudo，具体的配置文件以及配置文件夹有二：配置文件<code>sudoers</code>（位置在<code>/etc/sudoers</code>）和配置文件夹<code>sudoers.d</code>(位置在<code>/etc/sudoers.d/</code>)<br>通过修改或者添加自定义的配置就可以实现免密登陆。</p><h1 id="sudoers配置应该怎么写"><a href="#sudoers配置应该怎么写" class="headerlink" title="sudoers配置应该怎么写"></a>sudoers配置应该怎么写</h1><p>先来看看两个范例：<br><br/></p><figure><div class="code-wrapper"><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">xianyu ALL&#x3D;(root:root) NOPASSWD: &#x2F;usr&#x2F;bin&#x2F;apt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>以上配置的含义为：授权用户<code>xianyu</code>在<strong>所有</strong>主机上，以用户<code>root</code>、组<code>root</code>的身份不需要密码直接执行<code>/usr/bin/apt</code><br><br/></p><figure><div class="code-wrapper"><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">%admin ALL&#x3D;(ALL:admin) NOPASSWD: &#x2F;usr&#x2F;bin&#x2F;docker,&#x2F;usr&#x2F;bin&#x2F;tree<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>以上配置的含义为：授权用户组<code>xianyu</code>的用户在<strong>所有</strong>主机上，以所有用户身份，以组<code>admin</code>的身份不需要密码直接执行<code>/usr/bin/docker</code>或<code>/usr/bin/tree</code></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>从上面的例子我们就可以知道格式为：</p><figure><div class="code-wrapper"><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">#用户的格式：用户名 主机名或组&#x3D;(提权后的用户名:提权后的用户组) NOPASSWD: 命令用户名 主机名或组&#x3D;(提权后的用户名:提权后的用户组) 命令#用户组的格式：%用户组 主机名或组&#x3D;(提权后的用户名:提权后的用户组) NOPASSWD: 命令%用户组 主机名或组&#x3D;(提权后的用户名:提权后的用户组) 命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>命令可以在同一行写很多个。<br>可以在配置文件中写好主机列表、命令列表、用户列表、身份列表方便使用。<br>例如：</p><figure><div class="code-wrapper"><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">#主机列表Host_Alias HOST_LIST&#x3D;hostname1,hostname2,hostname3#命令列表Cmnd_Alias COMMAND_LIST&#x3D;&#x2F;usr&#x2F;bin&#x2F;apt,&#x2F;usr&#x2F;bin&#x2F;docker#用户列表User_Alias USER_LIST&#x3D;xianyu,yuxian,admin#以什么身份运行Runas_Alias RUNAS_LIST&#x3D;root,adm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>接着就可以直接引用了，比如</p><figure><div class="code-wrapper"><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">USER_LIST HOST_LIST&#x3D;(RUNAS_LIST) COMMAND_LISTUSER_LIST HOST_LIST&#x3D;(RUNAS_LIST) NOPASSWD: COMMAND_LIST<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h1 id="我将怎么用"><a href="#我将怎么用" class="headerlink" title="我将怎么用"></a>我将怎么用</h1><p>首先当然是写sudoers配置文件。<strong>但是！</strong>由于Linux发行版的差异，需要修改的地方不一样，例如，Debian可以直接在配置文件<code>sudoers</code>中添加配置，而Ubuntu发行版需要进入<code>sudoer.d</code>文件夹中，新建一个文件，并将配置写入其中。我平时常用的有四个命令：<code>apt</code>、<code>apt-get</code>、<code>docker</code>、<code>snap</code>，所以我需要让普通用户免密使用以上命令，以下是我的配置文件内容：</p><figure><div class="code-wrapper"><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">#配置文件路径为&#x2F;etc&#x2F;sudoers.d&#x2F;xianyuxianyu ALL&#x3D;(ALL:ALL) NOPASSWD: &#x2F;usr&#x2F;bin&#x2F;apt,&#x2F;usr&#x2F;bin&#x2F;apt-get,&#x2F;usr&#x2F;bin&#x2F;docker,&#x2F;usr&#x2F;bin&#x2F;snap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>然后，我除了嫌输密码麻烦外，多打一个<code>sudo</code>也挺麻烦的。所以为了进一步减少工作量，接下去需要修改用户主目录下的<code>.bashrc</code>。</p><h2 id="什么是bashrc"><a href="#什么是bashrc" class="headerlink" title="什么是bashrc"></a>什么是bashrc</h2><p>Linux下默认使用的shell程序是<code>bash</code>，<code>.bashrc</code>是用户登陆时会首先运行的文件（其实就是个shell脚本），所以我们只需要用<code>alias</code>命令将相关的规则写进<code>.bashrc</code>就可以一劳永逸了。</p><h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><p>上面我提到了四个命令，所以要在文件中添加四条</p><figure><div class="code-wrapper"><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">alias apt&#x3D;&#39;sudo apt&#39;alias apt-get&#x3D;&#39;sudo apt&#39;alias docker&#x3D;&#39;sudo docker&#39;alias snap&#x3D;&#39;sudo snap&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>保存并退出文件，注销用户后重新登陆就能使用了。<br><code>alias</code>命令的含义就是让等号前的等同于等号后的命令，所以在之后我以普通用户执行这些命令，不再需要加sudo输密码了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Linux</tag>
      
      <tag>sudo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>联想小新Pad Pro 2020 刷机笔记</title>
    <link href="/2022/02/11/Android/Lenovo-p11-pro/"/>
    <url>/2022/02/11/Android/Lenovo-p11-pro/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>我的PixelBook去年年底突然暴毙，我带着一台Windows笔记本度过了一段非常痛苦的时期，由于起其耗电量实在过于惊人（不是游戏本！！！），我不得不在上课的时候蹲到教室的最后面的插座边上给笔记本供电。<br>一个偶然的机会，我发现了联想小新Pad的这个系列产品，思来想去选择了联想小新Pad Pro 2020</p><span id="more"></span><h2 id="为什么选择它？"><a href="#为什么选择它？" class="headerlink" title="为什么选择它？"></a>为什么选择它？</h2><p>原先考虑的机器有三款：<code>Pro 2020</code>、<code>Plus</code>、<code>Pro 2021</code><br>性能及屏幕最为优秀的肯定是<code>Pro 2021</code> ，CP值最高的肯定是<code>Plus</code><br>但它们都有个各自对我来说不能忍受的缺点：<br><code>Pro 2021</code>缺少GPS支持，并且无对应的海外版本固件，虽然性能要比上一代强上太多，但6GB的运行内存加上大陆系统的搭配让我觉得不是很妙，应该说100％会卡出天际。<br><code>Plus</code>硬伤是屏幕非OLED，对于观影体验来说会大打折扣（正所谓买前生产力，买后迪士尼）  </p><br><p>最终我选择了<code>Pro 2020</code>，首先是我最关心的系统部分，**<code>Pro 2020</code>可以在不解锁BootLoader的情况下（当然是有先决条件的）直接刷入海外版固件**，同时网上已经存在大量的刷机教学（由于此机型的大陆版本相较于海外发行的版本来说价格过于香，所以有不少的台湾同胞以及海外的搞机玩家购入此款机型）<br>其次，硬件方面，730G的SoC功耗足够低，为长续航提供了保障（再也不用蹲到教室后面充电了）；同时OLED屏幕＋JBL认证的四颗喇叭＋杜比认证为良好的观影体验的提供的了强有力的保障。<br>综上所述：<br><code>Pro 2020</code> YES！</p><p>在长期的心理斗争及查询相当多资料后，我选择了购入这台Pad。</p><h1 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h1><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><ul><li><strong>机器拿到手之后不要升级！！！</strong></li><li><strong>机器拿到手之后不要升级！！！</strong></li><li><strong>机器拿到手之后不要升级！！！</strong><br>本篇文章中涉及到的刷机方法仅限于<strong>没有</strong>升级到<code>ZUI12.5</code>及以上版本的<code>Pro 2020</code>，如果你已经升级了，那么恭喜你，需要先行解锁BootLoader再进行刷机的动作</li></ul><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li><p>Windows系统的电脑</p></li><li><p>一根数据线</p></li></ul><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p>所有使用的软件已经全部备份到了我的分享站，点击<a href="https://share.xianyu.one/od/%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F/Android/%E8%81%94%E6%83%B3%E5%B0%8F%E6%96%B0pad%20pro%202020">这里</a>前往镜像站，所涉及的刷机工具全部都包含在内</p><h2 id="Windows-上的准备"><a href="#Windows-上的准备" class="headerlink" title="Windows 上的准备"></a>Windows 上的准备</h2><p>首先要在Windows 上安装好所需要的软件，以确保后面的流程能够正常进行</p><h3 id="安装QFIL"><a href="#安装QFIL" class="headerlink" title="安装QFIL"></a>安装QFIL</h3><p>先下载好<code>QPST.WIN.2.7.451.2.zip</code>这个文件并解压，在文件夹下有一个名为<code>setup.exe</code>的可执行文件点击安装，同意其条款后一路默认点<code>NEXT</code>就可以</p><h4 id="配置QFIL"><a href="#配置QFIL" class="headerlink" title="配置QFIL"></a>配置QFIL</h4><p>打开QFIL软件，将<code>Select BUild Type</code>中的<code>Meta Build</code>选中<br>点击上方<code>Configuratiion</code>中的<code>FireHoseConfiguration</code>并将<code>device type</code>设置为<code>UFS</code>，点击<code>OK</code>确认保存<br><img src="https://pic.imgdb.cn/item/62089cb02ab3f51d916472d2.jpg" alt="如图所示（原图来自https://club.lenovo.com.cn/thread-7805907-1-1.html）"></p><h3 id="安装HxD"><a href="#安装HxD" class="headerlink" title="安装HxD"></a>安装HxD</h3><p>下载<code>HxD安装包.zip</code>这个文件解压并安装，一样无脑<code>NEXT</code>就可以</p><h3 id="安装高通驱动"><a href="#安装高通驱动" class="headerlink" title="安装高通驱动"></a>安装高通驱动</h3><p>下载<code>高通驱动.zip</code>这个文件解压并安装，一样无脑<code>NEXT</code>就可以。<br><strong>注意：此处windows的安全软件会显示有病毒，请忽略并运行解压</strong></p><h2 id="刷入低版本海外版固件"><a href="#刷入低版本海外版固件" class="headerlink" title="刷入低版本海外版固件"></a>刷入低版本海外版固件</h2><p><strong>注意：这一步是中间步骤，请按照这个教程做完！如果你认为这样刷入海外版就可以的话升级后会变砖！升级后会变砖！升级后会变砖！</strong><br>点击<a href="https://share.xianyu.one/directlink/od/%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F/Android/%E8%81%94%E6%83%B3%E5%B0%8F%E6%96%B0pad%20pro%202020/TB-J706F_S241015_210326_ROW.zip">此处</a>下载低版本的海外版固件(<code>TB-J706F_S241015_210326_ROW.zip</code>) ，并将其解压缩（<strong>注意：解压的路径中不可以包含任何中文字符！</strong>）<br>平板关机并按住<code>音量键+</code>，用数据线将Pad连接至电脑，并打开QFIL，如果一切顺利，上方会显示出<code>Qualcomm HS-USB QDLoader 9008</code>的字样，说明Pad已经入9008工程模式<br>接下去点击<code>Load Content</code>并进入前面解压的ROM包的文件夹中，点击<code>contents.xml</code>文件，并点击打开<br>最后点击<code>Download Content</code>进行安装即可。安装好后即为海外版的ROM，可以开机进行确认，<strong>但非常不建议直接使用！请按照本文将所有的步骤做完！</strong></p><h2 id="修改QCN"><a href="#修改QCN" class="headerlink" title="修改QCN"></a>修改QCN</h2><p>原先最早的时候刷机并没有这一步，但后来Lenovo往固件包里加了防降级、防刷海外版本的补丁，所以为了顺利刷入，无论如何要修改QCN。<br>机器关机状态下按住<code>电源键</code>及<code>音量键+</code>进入FFBM Mode，并将Pad连接至电脑<br>打开QFIL，此时如果一切顺利，上方将会显示<code>Qualcomm HS-USB Android DIAG 901D</code>的字样<br>此时选择上方<code>Tools</code>中的<code>QCN Backup Restore</code>，点击<code>Backup QCN</code>，之后等进度条读完，会有一个文件出现在选框中显示的文件夹中，例如下图所示，这个文件就保存在C盘下的<code>Temp</code>文件夹中<br><img src="https://pic.imgdb.cn/item/6208a02e2ab3f51d9167ca4f.png"></p><p><strong>警告⚠️：在编辑文档之前请务必备份此文件！</strong></p><p>接着使用HxD打开此文件，使用<code>ctrl</code>+<code>f</code>快捷键，或点击上方的<code>Seach</code>中的<code>find</code>查找字符<br>查找选框打开后选择<code>Hex-values</code>，搜索框中填入<code>88 00 01 00 CA 1A 00 00 02</code>点击<code>OK</code>进行查找（注意，此处如果你省略了上方的先刷入海外版ROM的步骤的话，请将末尾的<code>02</code>改为<code>01</code>尝试搜索）<br><strong>此处需要注意：HxD有个莫名其妙的bug，如果你第一次查找的字符并没有找到，在不关闭这个文件的情况下再次搜索，无论这个文件中包不包含匹配的字符，都会显示找不到！如果第一次没找到，请将文件关闭后重新打开再进行搜索！</strong></p><p>找到后，将末尾<code>02</code>选中，输入<code>00</code>完成修改（<code>00</code>代表不限制刷机<code>01</code>代表限制只能刷中国大陆版<code>02</code>代表限制只能刷国际版）并保存文件。</p><p>回到QFIL，还是<code>QCN Backup Restore</code>选框，点击<code>Restore QCN</code>，将文件刷入设备，在刷入过程中会提示报错，这是正常的，看到报错后不用等进度条走完（因为报错了进度条就不走了）<br>按住<code>电源键</code>+<code>音量键-</code>将Pad关机</p><h2 id="最终刷入海外版固件"><a href="#最终刷入海外版固件" class="headerlink" title="最终刷入海外版固件"></a>最终刷入海外版固件</h2><p>完成修改QCN的步骤后就可以正式刷入海外版固件了<br>点击<a href="https://share.xianyu.one/directlink/od/%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F/Android/%E8%81%94%E6%83%B3%E5%B0%8F%E6%96%B0pad%20pro%202020/TB-J706F_S620150_211226_ROW.zip">此处</a>下载海外版固件（这个是Android11的）并解压<strong>注意：解压的路径中不可以包含任何中文字符！</strong>）<br>打开QFIL，平板关机并按住<code>音量键+</code>，用数据线将Pad连接至电脑，并打开QFIL，如果一切顺利，上方会显示出<code>Qualcomm HS-USB QDLoader 9008</code>的字样，说明Pad已经入9008工程模式<br>接下去点击<code>Load Content</code>并进入前面解压的ROM包的文件夹中，点击<code>contents.xml</code>文件，并点击打开<br>最后点击<code>Download Content</code>进行安装即可。<br>接着打开就是海外版系统了。</p><h1 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h1><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>海外版的系统着实比国内版看着顺眼的多，而且相对干净。由于系统预装软件的减少，一定程度上缓解了运行内存不足的问题<br><img src="https://pic.imgdb.cn/item/6208a4182ab3f51d916b78cb.jpg"><br>个人对于这块屏幕的显示素质以及影音表现都非常的认可，可以说惊艳到我了，没想到一千多人民币的设备能够做到这个程度。CP值超高<br>耗电量方面也还可以，如果持续看Disney+的影片的话，高亮度能坚持7-9个小时左右，非常够用</p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><h3 id="工作模式非常烂！"><a href="#工作模式非常烂！" class="headerlink" title="工作模式非常烂！"></a>工作模式非常烂！</h3><p>工作模式让我觉得非常鸡肋，首先，切换到工作模式没有过渡动画，整体显得非常生硬，同时，工作模式下，除了界面使用逻辑上会更贴近Windows这个缺点外，使用体验也很差，打开应用会有一定卡顿，小窗口加上Android的UI设计看着也非常别扭底部导航栏也过于鸡肋</p><h3 id="触摸板非常难用"><a href="#触摸板非常难用" class="headerlink" title="触摸板非常难用"></a>触摸板非常难用</h3><p>由于这款机器的原装触摸板<strong>并非是模拟鼠标，或是有专门的触摸板驱动，而是直接模拟手指触控操作，所以触摸板操作逻辑非常别扭，没有鼠标右键，且选中文字的操作也很别扭</strong></p><h3 id="实体键盘搭配使用有莫名其妙的bug"><a href="#实体键盘搭配使用有莫名其妙的bug" class="headerlink" title="实体键盘搭配使用有莫名其妙的bug"></a>实体键盘搭配使用有莫名其妙的bug</h3><p>在我的测试下，在自建的code-server的web界面下使用实体键盘并搭配中文输入法编辑文件会无法正常拼写<br><img src="https://pic.imgdb.cn/item/620669dc2ab3f51d91a40906.jpg"><br>以及Google Keep下写笔记，如果打开勾选框也会出现一模一样的问题。<br>缓解的办法就是使用实体键盘的同时将虚拟键盘也打开，但在保正中文输入的同时还会出现新的问题：</p><ul><li>如果此时切换到英文输入法，则会导致直接无法输入</li><li>大概会有一半的屏幕直接被虚拟键盘挡掉，大大减少了屏幕查看其他内容的面积</li></ul><h3 id="面部识别鸡肋"><a href="#面部识别鸡肋" class="headerlink" title="面部识别鸡肋"></a>面部识别鸡肋</h3><p>说真的，识别率很差，且打开面部识别并打开“抬起唤醒”的功能后，关闭屏幕的情况下会被莫名其妙唤醒，很弱智（不知道联想工程师是怎么想的，明明键盘都合上了，霍尔元件也能够感应到，但为什么还能被唤醒）</p><h3 id="合上键盘后莫名奇妙的唤醒"><a href="#合上键盘后莫名奇妙的唤醒" class="headerlink" title="合上键盘后莫名奇妙的唤醒"></a>合上键盘后莫名奇妙的唤醒</h3><p>上一条提到了，但不完全是人脸识别到问题，因为开启“显示”设置下的“轻触即可唤醒”和“拿起平板电脑即可查看”的功能后也会出现合上键盘后莫名其妙唤醒的问题</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>抛开这些“影响生产力”但莫名其妙的bug，这台平板依旧是我认为值得的，一千多人民币的价格可以购买如此优秀的屏幕及喇叭就已经值回票价，同时其便携性以及长续航可以让我不用再带充电线去上课了，总体来说，虽然有很多不足，但瑕不掩瑜，这个价格非常值得购买，也基本满足了我的需求。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://club.lenovo.com.cn/thread-7805907-1-1.html">ZUI系统小新&amp;YOGA平板线刷教程和国行底包及root（资源合集）</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>刷机</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>UNraid折腾笔记——鸟枪换炮，我的第二台NAS</title>
    <link href="/2022/01/20/nas-unraid/"/>
    <url>/2022/01/20/nas-unraid/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><h2 id="买NAS的缘由"><a href="#买NAS的缘由" class="headerlink" title="买NAS的缘由"></a>买NAS的缘由</h2><p>去年的时候由于实在是忍受不了B站对于番剧的阉割，所以入手了一台矿渣蜗牛星级作为个人的第一台NAS，开始搞自己的影音服务器<br><img src="https://pic.imgdb.cn/item/61e9368f2ab3f51d91670de9.jpg"><br>这台矿渣的配置及价格如下</p><table><thead><tr><th>设备</th><th>数量</th><th>价格</th></tr></thead><tbody><tr><td>J1900</td><td>1</td><td>&#x2F;</td></tr><tr><td>4G DDR3内存</td><td>1</td><td>&#x2F;</td></tr><tr><td>以上配置的蜗牛星际整机</td><td>1</td><td>368¥</td></tr><tr><td>3T日立翻新盘</td><td>2</td><td>536¥</td></tr><tr><td>500G西数二手盘</td><td>1</td><td>49.5¥</td></tr><tr><td>256G七彩虹SATA固态</td><td>1</td><td>179¥</td></tr><tr><td>闪迪32G U盘</td><td>1</td><td>29.9¥</td></tr><tr><td>合计</td><td>&#x2F;</td><td>1162.4¥</td></tr></tbody></table><p>用很少的钱装黑群晖组了人生第一台NAS。</p><h2 id="为什么才一年就换"><a href="#为什么才一年就换" class="headerlink" title="为什么才一年就换"></a>为什么才一年就换</h2><p>J1900的性能过于羸弱，导致我只能下载1080p的且是h264的资源，外挂字幕只能使用<code>srt</code>格式的（因为如果是特效字幕的话J1900就扛不住转码了）。<br>同时，由于找资源的速度过于快了，1年内nas的储存就即将告罄，为了未来3-5年左右能有充足的槽位进行扩展，同时也为了解决一下性能拉垮的问题，就踏上了本次捡垃圾之旅。</p><h1 id="购买人生的第二台NAS"><a href="#购买人生的第二台NAS" class="headerlink" title="购买人生的第二台NAS"></a>购买人生的第二台NAS</h1><h2 id="选购思路"><a href="#选购思路" class="headerlink" title="选购思路"></a>选购思路</h2><p>在挑选硬件的时候主要分为CPU性能、主板扩展性、储存扩展性、所使用操作系统这几个方向。<br>作为一个穷逼，长这么大到现在我连4k屏幕都没见过，所以对我而言CPU性能、主板扩展性是次要的，最主要的就是储存扩展性，也就是盘位的多少，其次是选择使用说明系统。<br>为了满足未来3-5年的储存需求，我就需要至少8盘位的机器保证有足够的盘位对储存进行扩容。<br>系统方面，不愿意继续使用黑群晖，所以选择了UNraid，至于为什么后面会说到</p><h2 id="确定硬件"><a href="#确定硬件" class="headerlink" title="确定硬件"></a>确定硬件</h2><p>为考虑的机器范围分为两个大方向：<code>DIY成品NAS</code>和<code>二手服务器</code><br>DIY成品NAS要满足我的需求价格其实就和二手服务器差不多，但同价位二手服务器比DIY成品NAS性能要高（虽然耗电量也高），所以果断选择了塔式服务器。从性能、扩展性、噪音各方面来说都很合适。<br>经过几天筛选，最后我买了一台DELL的塔式服务器，选定好了各种配件下单。以下是我选择并购入的物品清单</p><table><thead><tr><th>设备</th><th>数量</th><th>价格</th></tr></thead><tbody><tr><td>E5-2420v2</td><td>1</td><td>&#x2F;</td></tr><tr><td>8G DDR3 ECC 内存</td><td>2</td><td>&#x2F;</td></tr><tr><td>H310阵列卡</td><td>1</td><td>&#x2F;</td></tr><tr><td>服务器电源</td><td>1</td><td>&#x2F;</td></tr><tr><td>以上配置的T320</td><td>1</td><td>1800¥</td></tr><tr><td>3T 戴尔SAS服务器拆机盘</td><td>4</td><td>588¥</td></tr><tr><td>Unraid OS Plus 授权</td><td>1</td><td>89$（折合人民币570.35¥）</td></tr><tr><td>闪迪32G U盘</td><td>1</td><td>29.9¥</td></tr><tr><td>合计</td><td>&#x2F;</td><td>2988.25¥</td></tr></tbody></table><h2 id="意外的惊喜"><a href="#意外的惊喜" class="headerlink" title="意外的惊喜"></a>意外的惊喜</h2><p>在我拿到服务器之后，发现店家给我发了T420，也就是T320的双路版本！！！虽然不合适但还是不厚道的笑开了花 XD<br>实际我拿到的机器配置如下</p><table><thead><tr><th>设备</th><th>数量</th></tr></thead><tbody><tr><td>E5-2420v2</td><td>1</td></tr><tr><td>8G DDR3 ECC 内存</td><td>2</td></tr><tr><td>495W热插拔电源</td><td>2</td></tr><tr><td>H310阵列卡</td><td>1</td></tr></tbody></table><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://pic.imgdb.cn/item/61e943ea2ab3f51d9175dcaf.jpg"></div><div class="group-image-wrap"><img src="https://pic.imgdb.cn/item/61e943ea2ab3f51d9175dcb4.jpg"></div></div></div><p>可以说是血赚</p><h1 id="组装NAS"><a href="#组装NAS" class="headerlink" title="组装NAS"></a>组装NAS</h1><p>由于买的是成品，所谓硬件组装也就只是把硬盘塞好，插上UNraid的U盘</p><h2 id="U盘刷入UNraid"><a href="#U盘刷入UNraid" class="headerlink" title="U盘刷入UNraid"></a>U盘刷入UNraid</h2><p>UNraid的特性之一就是其系统是储存在U盘上的，U盘仅作为引导，开机后会将系统放入内存中运行。这一点上，由于服务器支持ECC内存的缘故，NAS运行起来会更加的可靠。<br>通过UNraid官网下载<a href="https://unraid.net/download">USB Flash Creator</a>,并按提示刷入U盘即可。<br><img src="https://pic.imgdb.cn/item/61e9462f2ab3f51d91781c27.png" alt="建议在刷入时就固定好IP"></p><h2 id="初始设置"><a href="#初始设置" class="headerlink" title="初始设置"></a>初始设置</h2><p>在把U盘和硬盘装好后，插电～开机～，进入bios设置，选择从U盘启动（UNraid不能使用UEFI启动，不然会有莫名其妙的问题）<br>当机器开机后就可以从浏览器登录web管理页面：<code>http://NAS-IP</code>,默认<code>root</code>用户无密码（登录后请设置好密码）</p><h3 id="设置好硬盘阵列"><a href="#设置好硬盘阵列" class="headerlink" title="设置好硬盘阵列"></a>设置好硬盘阵列</h3><p>我的设置思路是阵列中全为机械硬盘，并将SSD放在缓存池中，UNraid的缓存和群晖不太一样，其实缓存也是普通的硬盘，只是不受数据校验保护而已。之后会解释为什么。选择好硬盘后启动阵列。</p><h3 id="安装基本的插件"><a href="#安装基本的插件" class="headerlink" title="安装基本的插件"></a>安装基本的插件</h3><p>虽然UNraid于<code>6.9.2</code>版本已支持官方中文，但是需要通过插件安装。<br>找到导航栏中的<code>PLUGINS</code>，点击二级菜单中的<code>Install plugin</code>,并将以下链接复制到文本框中进行安装</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Squidly271&#x2F;community.applications&#x2F;master&#x2F;plugins&#x2F;community.applications.plg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><img src="https://pic.imgdb.cn/item/61e949262ab3f51d917ac6d0.png"><br>之后导航栏会多出一个<code>APPS</code>，点击后进入界面（由于众所周知的原因加载会比较慢），搜索并安装中文语言包，之后就可以切换为中文了</p><h3 id="设置共享文件夹"><a href="#设置共享文件夹" class="headerlink" title="设置共享文件夹"></a>设置共享文件夹</h3><p>我的NAS主要是围绕影音中心为目的而搭建的，所以这里以我的设置为例进行介绍。<br>UNraid的文件管理和群晖完全不一样，<strong>用户不需要关心自己的文件到底储存在哪个硬盘上，只需要注意由于文件的用途不同需要选择怎么样的储存策略</strong>，我的储存思路见下表</p><table><thead><tr><th>文件类型</th><th>特性</th><th>储存方案</th></tr></thead><tbody><tr><td>影音文件</td><td>量大，读取率相对低</td><td>不使用缓存盘，仅存储于阵列中，通过手工移动的方式将缓存盘或外部存储的数据写入共享文件夹</td></tr><tr><td>系统&#x2F;应用相关文件</td><td>体积小但需要经常读写</td><td>仅使用缓存，避免机械硬盘的经常读写</td></tr></tbody></table><p>由此简单的分为这两大类进行存储。</p><h4 id="我的设置"><a href="#我的设置" class="headerlink" title="我的设置"></a>我的设置</h4><p>新建一个媒体文件夹用于存放视频、音乐文件，设置参考下图<br><img src="https://pic.imgdb.cn/item/61e94d442ab3f51d917ea9d9.png"><br>将末认新建好的<code>appdata</code>、<code>domains</code>、<code>system</code>设置为仅缓存，即在这些文件夹中的数据仅会储存在缓存盘中。<br>新建一个<code>download</code>文件夹设为仅缓存，用于充当bt、pt或其他服务器的下载文件夹。</p><h4 id="SMB文件共享设置"><a href="#SMB文件共享设置" class="headerlink" title="SMB文件共享设置"></a>SMB文件共享设置</h4><p>如果你不希望公开共享文件夹，则需要在<code>user</code>设置中添加一个用户，并在共享文件夹设置中给予用户访问的权限！<strong>UNraid的root用户是不能用于登陆SMB服务的！</strong></p><h3 id="安装常用应用"><a href="#安装常用应用" class="headerlink" title="安装常用应用"></a>安装常用应用</h3><p>与群晖不同，绝大多数UNraid的应用都是通过docker安装的</p><h4 id="安装PLEX"><a href="#安装PLEX" class="headerlink" title="安装PLEX"></a>安装PLEX</h4><p><code>APPS</code>选项卡中搜索<code>Plex-Media-Server</code>，找到官方的那个点击安装。各项配置如下  </p><ul><li><code>Host Path 2</code>填写PLEX应用的数据储存位置，我选择储存在<code>appdata/</code>共享文件夹中，文件路径为<code>/mnt/user/appdata/</code></li><li><code>Host Path 3</code>填写媒体文件所在的文件夹，即前面创建的媒体文件夹，路径为<code>/mnt/user/media/</code></li><li><code>Key 1</code>需要填入神秘代码，请前往<a href="https://plex.tv/claim">PLEX官网</a>获取</li><li><code>Key 2</code>为容器的UID，默认填写<code>99</code></li><li><code>Key 3</code>为容器的GID，默认填写<code>100</code></li><li><code>Key 4</code>为容器版本，默认填写<code>latest</code></li></ul><p>填写好之后点击完成，等到容器上线即可</p><h4 id="FileBrowser文件管理安装"><a href="#FileBrowser文件管理安装" class="headerlink" title="FileBrowser文件管理安装"></a>FileBrowser文件管理安装</h4><p>由于UNraid作为NAS系统居然没有官方自带的web文件管理功能，所以这里需要自己安装一个。<br>安装的应用为荒野无灯大佬的魔改版（<a href="https://hub.docker.com/r/80x86/filebrowser">项目地址</a>），按照项目的说明安装即可</p><h4 id="安装aria2"><a href="#安装aria2" class="headerlink" title="安装aria2"></a>安装aria2</h4><p>这里使用P3TERX大佬的镜像，如果没有特殊需求，按照下面给出的配置进行安装即可</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker run -d \    --name aria2-pro \    --restart unless-stopped \    --log-opt max-size&#x3D;1m \    --network host \    -e PUID&#x3D;$UID \    -e PGID&#x3D;$GID \    -e RPC_SECRET&#x3D;此处填写RPC的密码 \    -e RPC_PORT&#x3D;6800 \    -e LISTEN_PORT&#x3D;6888 \    -v $PWD&#x2F;aria2-config:&#x2F;config \    -v $PWD&#x2F;aria2-downloads:&#x2F;downloads \    p3terx&#x2F;aria2-pro<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="安装ariaNG"><a href="#安装ariaNG" class="headerlink" title="安装ariaNG"></a>安装ariaNG</h4><p>由于aria2-pro并不自带webUI，所以需要自己安装一个。设置参考下图<br><img src="https://pic.imgdb.cn/item/61e953762ab3f51d91850ae8.png"></p><h1 id="几天的使用体验"><a href="#几天的使用体验" class="headerlink" title="几天的使用体验"></a>几天的使用体验</h1><p>由于主要作为影音服务器使用，所以挺在意这颗U的性能如何的，刚开始我的要求仅是h264能正常使用即可，但没想到这颗U的性能超出预期，能解码H265 4K的影片！为我省了买显卡的钱。<br>同时，这台服务器有着极强的扩展性，巨量PCIe插槽，可以方便的扩展各种设备。比如未来可以加显卡搞Mac虚拟机；加装万兆网卡；加装阵列卡扩展存储等。几乎可以说，这台机器可以满足我未来5-10年的需求。<br>总之非常满意就是了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>NAS</tag>
      
      <tag>UNraid</tag>
      
      <tag>垃圾佬</tag>
      
      <tag>服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计网专业学习笔记——认识IPv4地址的发展史</title>
    <link href="/2021/12/17/ip-address/"/>
    <url>/2021/12/17/ip-address/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>属实无聊，就当考前复习。</p><h1 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h1><p>初接触网络层的东西，相信不少人会有很多的疑惑，毕竟相较于物理层和数据链路层而言，网络层的东西会比较抽象。<br>在大学开设的这门课里我并没有遇到什么特别大的瓶颈和不理解的地方，这得益于多年来瞎折腾所学习到的知识。从身边遇到的问题入手，通过解决问题的方式学习知识，可以说是我本人最爱的学习方法。<br>所以，我想结合实例来讲解IPv4的相关知识，希望能对正在学习相关专业的学生以及爱好者有所帮助。  </p><h1 id="IPv4地址的结构"><a href="#IPv4地址的结构" class="headerlink" title="IPv4地址的结构"></a>IPv4地址的结构</h1><p>大家应该都知道，IPv4的地址写出来长这样：<code>192.168.1.1</code><br>我们为了阅读的方便，将十进制格式的IP地址用.分成了四个部分。<br>看，只是人类为了阅读方便而设置的。对于计算机而言IPv4地址长这样<code>11000000101010000000000100000001</code><br>其实就是二进制形式的地址。<br>我们也可以把二进制形式的地址拆成四份：<code>11000000</code> <code>10101000</code> <code>00000001</code> <code>00000001</code>  </p><table><thead><tr><th></th><th>第一段</th><th>第二段</th><th>第三段</th><th>第四段</th></tr></thead><tbody><tr><td>十进制格式</td><td>192</td><td>168</td><td>1</td><td>1</td></tr><tr><td>二进制格式</td><td>11000000</td><td>10101000</td><td>00000001</td><td>00000001</td></tr></tbody></table><p>简单看了一下格式，就可以继续往下说了。<br>别急，其他的诸如<code>子网掩码</code>、<code>网络号</code>、<code>主机号</code>的概念后面会慢慢讲。</p><h1 id="IPv4的发展历史"><a href="#IPv4的发展历史" class="headerlink" title="IPv4的发展历史"></a>IPv4的发展历史</h1><p>开始讲解IPv4地址，绕不开的话题就是要讲一讲IP发展的历史，看看IPv4是怎么样发展到现在这样的</p><h2 id="分类编址时代"><a href="#分类编址时代" class="headerlink" title="分类编址时代"></a>分类编址时代</h2><p>很久很久以前，IP地址被分成了五种地址类型，分别是<code>A</code>、<code>B</code>、<code>C</code>、<code>D</code>、<code>E</code>五类。<br>他们的区分方式很简单，<strong>二进制形式的IP地址从左往右数，开头的几位数字的不同决定这个IP的分类。</strong><br>在判断属于一个IP属于哪一个类别时其实不需要把它变成二进制的形式，<strong>因为区分类别的位数只占4位，也就是说只要判断第一段的十进制数是在哪个区间即可知道这个IP的类别。</strong><br>可以参照以下表格进行判断：</p><table><thead><tr><th></th><th>A类地址</th><th>B类地址</th><th>C类地址</th><th>D类地址</th><th>E类地址</th></tr></thead><tbody><tr><td>二进制下的开头</td><td>0</td><td>10</td><td>110</td><td>1110</td><td>1111</td></tr><tr><td>二进制下的地址区间</td><td>00000001 - 01111110</td><td>10000000 - 10111111</td><td>11000000 - 11011111</td><td>11100000 - 11101111</td><td>11110000 - 11111111</td></tr><tr><td>十进制下的地址区间</td><td>1 - 126</td><td>128 - 191</td><td>192 - 223</td><td>224 - 239</td><td>240 - 255</td></tr></tbody></table><p><strong>注：A类地址中0和127两个段为保留地址，用于特殊目的。</strong>  </p><blockquote><p>对照这个表，就很容易分辨IP地址的分类了。以下给出几个IP地址，大家可以对照表格判断一下：</p><ul><li>192.168.66.12</li><li>11.43.192.30</li><li>11.43.192.30</li></ul></blockquote><h3 id="网络号-主机号"><a href="#网络号-主机号" class="headerlink" title="网络号 &amp; 主机号"></a>网络号 &amp; 主机号</h3><p>上文我们知道了，IP地址被划分成了五个类别<br>A、B、C类为单播地址，是我们平时接触最多，也是正在使用的地址。D是多播地址，E是保留地址。<br>对于A、B、C类的地址来说，它们除了开头不一样外，网络号和主机号的长度也是不一样的。<br>一个IPv4地址的二进制形式有32位，在分类编址时代，IP的组成形式为&lt;网络号&gt; + &lt;主机号&gt;。</p><ul><li>A类地址的网络号为前8位，后面24位为主机号。也就是十进制形式的 第一段 为网络号， 第二段+第三段+第四段 为主机号</li><li>B类地址的网络号为前16位，后面16位为主机号，也就是十进制形式的 第一段+第二段 为网络号， 第三段+第四段 为主机号</li><li>C类地址的网络号为前24位，后面8位为主机号，也就是十进制形式的 第一段+第二段+第三段 为网络号， 第四段 为主机号<br><strong>那么同为单播地址，为什么还要分成A、B、C三类呢？</strong><br>前面我们知道了，IP的组成形式为&lt;网络号&gt; + &lt;主机号&gt;，<strong>这当中的网络号代表的是这个IP所在的网段，而主机号则定义了这个IP在这一个网段中的编号。</strong><blockquote><p>打个比方：一个小区（整个IP地址库）里有很多栋居民楼（网络号），居民楼里很很多户人家（主机号）。<br>对于网络服务商来说，一般购买的都是一整个IP地址块，而不会购买单个IP地址。不同大小的运营商需求不同，需要的IP地址量不同，所以会需要选择购买合适数量的IP地址块。将单播地址分为三类的意义就在于，现在客户可以根据自己的需求选择IP地址块的大小了。<br>那么A、B、C类地址是如何做到区分地址块大小的呢？这就是&lt;网络号&gt; + &lt;主机号&gt;模式的作用了。</p></blockquote></li></ul><h4 id="计算地址块容量"><a href="#计算地址块容量" class="headerlink" title="计算地址块容量"></a>计算地址块容量</h4><blockquote><p>假设现在有八个空格，可以往里填入数字将其变为一个二进制的数，请问可以有多少个不同的数字？</p></blockquote><p>其实这个问题很容易算出来，方法很简单：<br>这里我们可以知道最高能写8位，那么能写出的数字量就是 $2^8&#x3D;256$ 个<br>同理，因为IPv4地址事实上是一串32位的二进制数字，所以就可以使用同样的方法计算出地址块的容量<br>从上面的内容中已经知道了，IP地址的组成形式为&lt;网络号&gt; + &lt;主机号&gt;，购买IP使用权的时候，<strong>购买的地址块其实是购买了&lt;网络号&gt;下包含的所有IP，就像网络服务商作为“包租婆”，购买了开发商的整栋楼（网络号）一样。</strong><br><strong>因为IP的长度固定，所以网络号越短，主机号越长，主机号越长，所包含的IP就越多！</strong></p><blockquote><p>再来简单做个题：黄先生购买了一个C类地址块，请问这相当于他买了多少个IP地址？<br>一个C类地址的前24位是网络号，后8位是主机号，主机号长度决定其拥有多少个IP。<br>所以黄先生拥有的IP地址块包含了 $2^8&#x3D;256$ 个地址。</p></blockquote><h2 id="划分子网时代"><a href="#划分子网时代" class="headerlink" title="划分子网时代"></a>划分子网时代</h2><blockquote><p>原先的分类编址时代，我们把实际用来分配使用的IP地址分成A、B、C类。也就是说网络服务商在购买IP地址的时候可以选择三种大小：</p><ul><li>A类地址块：包含  个地址</li><li>B类地址块：包含  个地址</li><li>C类地址块：包含  个地址<br>但这时候问题来了，比如我现在想购入4000个地址，这个数量大于C类的同时又远远小于B类所含的数量，想要买4000个地址要不就是买16个C类地址，或者出手极其阔绰直接购买B类地址块。<br>这就不可避免的造成了地址的浪费。</li></ul></blockquote><p>划分子网时代，将IP变成了&lt;网络号&gt; + &lt;子网号&gt; + &lt;主机号&gt;的形式，以满足这样的需求。<br>买4000个地址，就可以选择购买 B类地址中的一个子网 来实现最大程度的不浪费。</p><blockquote><p>B类地址网络号占了16位，此时我们只需要把主机号的一部分变为子网号，让主机号的位数所包含的IP地址块最接近4000个就可以最大程度避免浪费<br>通过计算可知：<br>$2^{12}&#x3D;4096$<br>所以，我们需要12位的主机号。在网络号固定为16位的B类地址中，将主机号部分的4位占用为子网号，再购买B类地址中的这个子网就可以了。</p><table><thead><tr><th>买包含4096个地址的B类子网</th><th>网络号</th><th>子网号</th><th>主机号</th></tr></thead><tbody><tr><td>二进制格式</td><td>10xx xxxx xxxx xxxx</td><td>xxxx</td><td>xxxx xxxx xxxx</td></tr><tr><td>对应位数</td><td>16位</td><td>4位</td><td>12位</td></tr></tbody></table></blockquote><h2 id="无分类编址时代"><a href="#无分类编址时代" class="headerlink" title="无分类编址时代"></a>无分类编址时代</h2><p>随着时间的推进，计算机网络变得越来越庞大，本就不富裕的IPv4地址需求越来越大，过去的划分子网方式已经不足以满足人们的需求了。<br>公网IP对于一般民众而言其实不会专门进行购买，而对于网络服务商来说，其购买的需求量就挺大的。也正因为此，C类地址仅有256个IP的超小容量极易不受人待见。对于互联网而言，急需更灵活的IP分配方式。1993年，无分类域间路由选择（Classless Inter-Domain Routing， CIDR）应运而生。<br>在划分子网时代，IP变成了&lt;网络号&gt; + &lt;子网号&gt; + &lt;主机号&gt;的形式，而到了无分类编址的时代，又把这个子网号去掉了，取而代之的是子网掩码的概念。<br>过去网络号长度是固定的，并且被固定了长度。而到了无分类编址时代，网络号的长度不固定了，可以根据需求指定任意长度的网络号。</p><h3 id="那如何指定网络号长度呢？"><a href="#那如何指定网络号长度呢？" class="headerlink" title="那如何指定网络号长度呢？"></a>那如何指定网络号长度呢？</h3><p>还是买4000个地址，按之前划分子网的办法，就是购买一个&lt;网络号16位&gt; + &lt;子网号4位&gt; + &lt;主机号12位&gt;的地址块。既然无分类编址去除了子网号，同时不限制网络号长度，那么直接把子网号的4位合并进网络号里就可以达到相同效果了<br>&lt;网络号20位&gt; + &lt;主机号12位&gt;<br>也就是说，我们买的地址块的网络号变成了20位。<br>因为无分类编址不依靠、也无法依靠网络类型来确定网络号长度，所以引入了子网掩码的概念。其实子网掩码的作用很简单，就是告诉我们网络号的长度。<br>上面我们买了一个网络号长度为20位的地址块，那么它的子网掩码长度就是20位，同时，子网掩码长度通过写1来表示，剩余位置以0填充</p><table><thead><tr><th>二进制IP地址</th><th>11001100 10001111 0011xxxx xxxxxxxx</th></tr></thead><tbody><tr><td>二进制子网掩码</td><td>11111111 11111111 11110000 00000000</td></tr></tbody></table><h3 id="这一串子网掩码看着像不像IP地址？"><a href="#这一串子网掩码看着像不像IP地址？" class="headerlink" title="这一串子网掩码看着像不像IP地址？"></a>这一串子网掩码看着像不像IP地址？</h3><p>对的，它也能变成十进制的形式：<code>255.255.240.0</code></p><h3 id="是不是还是很眼熟？"><a href="#是不是还是很眼熟？" class="headerlink" title="是不是还是很眼熟？"></a>是不是还是很眼熟？</h3><p>没错，在你的电脑&#x2F;手机的网络设置里就有它。<br>一般家庭的路由器会将局域网默认设置为<code>192.168.x.x/24</code>的形式，所以我们见到的地址比如<code>192.168.1.1/24</code>或<code>192.168.1.1</code> 子网掩码：<code>255.255.255.0</code>，对应的意思就是：IP地址为<code>192.168.1.1</code>，同时其子网掩码长度是<code>24</code>，或写作<code>255.255.255.0</code>。同一地址块下能够容纳的主机数为 $2^8&#x3D;256$ 台（其中包含两个特殊地址）</p>]]></content>
    
    
    
    <tags>
      
      <tag>网络</tag>
      
      <tag>教程</tag>
      
      <tag>IP地址</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>k8s折腾笔记——树莓派集群安装k3s</title>
    <link href="/2021/11/16/Linux/tutorial/k8s-install/"/>
    <url>/2021/11/16/Linux/tutorial/k8s-install/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>上个月和班主任聊天，知道了k8s（Kubernetes），瞬间来了折腾的兴趣。脑子一热买了三台树莓派4B。<br>由于其对初心者及其不友善的特点，断断续续拖了一个月，昨天刚弄好。<br>想到博客万年没更新了，来写一下。</p><blockquote><p>封面图来自：<a href="https://www.pixiv.net/artworks/76372910">画师JW —— 人总分不清梦境与现实。</a></p></blockquote><h1 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h1><h2 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h2><ul><li>电脑一台(系统随意)</li><li>树莓派4B*3（我的是4GB的版本）</li><li>交换机</li><li>网线*4（树莓派连交换机3根，交换机连路由器1根）</li><li>SD卡*3（我是64GB的闪迪）</li><li><del>鞋盒*1</del></li></ul><p>此处树莓派供电我用的是绿联的三个快充头，以保证充足的供电。<br>有买亚克力的架子，组装后大概如下<br><img src="https://pic.imgdb.cn/item/619324ab2ab3f51d916aee7b.jpg"></p><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li>各系统自带终端（用于ssh连接树莓派）</li><li>Debian-Pi-Aarch64 ★ 全新树莓派64位系统 <a href="https://github.com/openfans-community-offical/Debian-Pi-Aarch64">项目地址</a></li><li>balenaEtcher – 一个跨平台镜像烧录工具（Mac、Windows、Linux）<a href="https://www.balena.io/etcher/">官方网址</a></li><li>各种k8s相关的软件</li></ul><p><strong>注意：接下去的内容能够正常使用的前提是要有“良好的网络环境”，例如要能顺畅地pull到dockerHub上的镜像，否则将有极大概率无法完成安装！</strong></p><h1 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h1><p>这里使用的是<a href="https://github.com/openfans-community-offical/Debian-Pi-Aarch64">Debian-Pi-Aarch64 ★ 全新树莓派64位系统</a>的基础版无桌面镜像，烧录进SD卡后插电开机<br>默认账户：<code>pi</code>，默认密码：<code>raspberry</code><br>首先需要找到树莓派的IP地址，可以登录路由器后台查看。建议知道地址后将其固定下来，不固定也没事，之后会将其设置为静态IP。<br>以我的为例，我将三台树莓派分别命名为<code>rpi1</code>、<code>rpi2</code>、<code>rpi3</code>，其IP固定为如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">rpi1    192.168.6.91    #节点类型：Masterrpi2    192.168.6.92    #节点类型：noderpi3    192.168.6.93    #节点类型：node<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>在k8s集群中，节点分为<code>Master</code>和<code>node</code>两种，<code>Master</code>节点是集群中负责调度任务等工作的控制面节点，<code>node</code>是工作节点。后续向集群中添加应用程序时，会由<code>Master</code>将任务指派给<code>node</code>。<br>接下去的内容默认是在root用户下执行，请使用<code>sudo -i</code>将用户变更为root并设置root用户密码</p><h2 id="更改主机名"><a href="#更改主机名" class="headerlink" title="更改主机名"></a>更改主机名</h2><p>首先要把三台主机的主机名更改回来（此处仅以rpi1为例）<br>ssh连接rpi1这里有两个文件内容要更改，第一个是<code>/etc/hosts</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>将文件中的</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">127.0.0.1   raspberry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>更改为</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">127.0.0.1   rpi1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>第二个文件是<code>/etc/hostname</code><br>将内容改为<code>rpi1</code>即可。其他两台操作相同</p><h2 id="更改网络设置"><a href="#更改网络设置" class="headerlink" title="更改网络设置"></a>更改网络设置</h2><p>打开配置文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;network&#x2F;interfaces<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>将文件内容修改为如下（此处依旧以rpi1为例，如果你的网段与我不同，请更改为自己的网段！请勿照抄）</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">auto eth0allow-htoplug eth0iface eth0 inet staticaddress 192.168.6.91netmask 255.255.255.0gateway 192.168.6.1dns-nameservers 114.114.114.114<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>接着将三台机器的IP地址添加到<code>/etc/hosts</code>文件中，并重启网络</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo cat &gt;&gt; &#x2F;etc&#x2F;hosts &lt;&lt; EOF192.168.6.91 rpi1192.168.6.92 rpi2192.168.6.93 rpi3EOFservice networking restart <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="修改ssh设置"><a href="#修改ssh设置" class="headerlink" title="修改ssh设置"></a>修改ssh设置</h2><p>默认情况下，这个镜像是不允许直接使用root账号连接的，为了方便省事，需要允许直接使用root账号进行ssh连接</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>进入配置文件，将</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">#PermitRootLogin prohibit-password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>修改为</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">PermitRootLogin yes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>并重启服务</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">service sshd restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="打开IPv4转发"><a href="#打开IPv4转发" class="headerlink" title="打开IPv4转发"></a>打开IPv4转发</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;sysctl.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>将文件中的这行注释去掉</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">net.ipv4.ip_forward &#x3D; 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo &#x2F;usr&#x2F;sbin&#x2F;iptables -P FORWARD ACCEPT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="关闭一些服务"><a href="#关闭一些服务" class="headerlink" title="关闭一些服务"></a>关闭一些服务</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">systemctl stop NetworkManager.servicesystemctl disable NetworkManager.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install -y net-tools lrzsz tree screen lsof tcpdump<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="启用docker"><a href="#启用docker" class="headerlink" title="启用docker"></a>启用docker</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">systemctl enable docker.service #开机自动启动Docker服务systemctl start docker.service #启动Docker服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="关闭Swap"><a href="#关闭Swap" class="headerlink" title="关闭Swap"></a>关闭Swap</h2><p>直接注释掉，简单粗暴</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sed -ri &#39;s&#x2F;.swap.&#x2F;#&amp;&#x2F;&#39; &#x2F;etc&#x2F;fstab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>至此，系统配置已全部完成<br>重启一遍系统后，正式开始集群的部署</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo reboot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h1 id="集群部署"><a href="#集群部署" class="headerlink" title="集群部署"></a>集群部署</h1><p>从这里开始，才算进入正片。由于k8s对于树莓派而言有点过于臃肿了（主要部署起来太折腾了），所以我使用的是<a href="https://k3s.io/">k3s</a>。</p><h2 id="k3s脚本安装"><a href="#k3s脚本安装" class="headerlink" title="k3s脚本安装"></a>k3s脚本安装</h2><p>对于没有网络问题的同学可以直接使用官方脚本进行安装，（请注意不要直接复制下面这行命令，我们需要加上相关参数执行！）</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">curl -sfL https:&#x2F;&#x2F;get.k3s.io | sh -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>同时，如果网络有问题，可以参考<a href="https://docs.rancher.cn/docs/k3s/installation/install-options/_index/">官方文档</a>使用国内镜像。<br>此处不直接使用这个脚本，而是预先添加参数，分别在<code>Master</code>和<code>node</code>执行</p><h3 id="Master机执行"><a href="#Master机执行" class="headerlink" title="Master机执行"></a>Master机执行</h3><p><code>Master</code>机脚本如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">curl -sfL https:&#x2F;&#x2F;get.k3s.io |  K3S_NODE_NAME&#x3D;rpi1 sh -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>如果网络有问题请在命令中添加参数<code>INSTALL_K3S_MIRROR=cn</code>，以使用国内镜像<br>此处<code>K3S_NODE_NAME</code>为指定此机器在集群中的名字，为方便识别这里设置为和主机名<code>rpi1</code>一样的名字。<br>等待执行完后，需要获取<code>Token</code>，给后续添加进集群的机器使用。请保存好这个<code>Token</code>，接下去要用到。</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cat &#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;server&#x2F;node-token #获取rpi1的Token<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="node机执行"><a href="#node机执行" class="headerlink" title="node机执行"></a>node机执行</h3><p>前面我们在<code>Master</code>机获取到了<code>Token</code>，假设它为</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">K107dfc82a8d9453e538b26dd3250757827356a276ae509c3158b60ec3238e7929f::server:bac90b26fc5t6b2c76a8ee1bc22291cc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>那么在<code>rpi2</code>、<code>rpi3</code>这两个<code>node</code>节点上的执行命令为</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">curl -sfL https:&#x2F;&#x2F;get.k3s.io |  K3S_NODE_NAME&#x3D;rpi2 K3S_URL&#x3D;https:&#x2F;&#x2F;192.168.6.91:6443 K3S_TOKEN&#x3D;K107dfc82a8d9453e538b26dd3250757827356a276ae509c3158b60ec3238e7929f::server:bac90b26fc5t6b2c76a8ee1bc22291cc sh - #这个命令在rpi2上执行curl -sfL https:&#x2F;&#x2F;get.k3s.io |  K3S_NODE_NAME&#x3D;rpi3 K3S_URL&#x3D;https:&#x2F;&#x2F;192.168.6.91:6443 K3S_TOKEN&#x3D;K107dfc82a8d9453e538b26dd3250757827356a276ae509c3158b60ec3238e7929f::server:bac90b26fc5t6b2c76a8ee1bc22291cc sh - #这个命令在rpi3上执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>参数<code>K3S_URL</code>为<code>Master</code>结点（即这里的<code>rpi1</code>结点），参数<code>K3S_TOKEN</code>填入上面的<code>Token</code><br>如果网络有问题请在命令中添加参数<code>INSTALL_K3S_MIRROR=cn</code>，以使用国内镜像</p><h3 id="回到Master机查看集群状态"><a href="#回到Master机查看集群状态" class="headerlink" title="回到Master机查看集群状态"></a>回到Master机查看集群状态</h3><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">kubectl get nodes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>如果没有问题将会看到如下显示，三个结点都已在集群中，并已<code>ready</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">NAME   STATUS   ROLES                  AGE   VERSIONrpi2   Ready    &lt;none&gt;                 32h   v1.21.5+k3s2rpi3   Ready    &lt;none&gt;                 32h   v1.21.5+k3s2rpi1   Ready    control-plane,master   32h   v1.21.5+k3s2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>使用以下命令查看<code>pods</code>是否已正常运行</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">kubectl get pods -A <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>基本如下所示就是正常的</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">NAMESPACE              NAME                                         READY   STATUS      RESTARTS   AGEkube-system            local-path-provisioner-5ff76fc89d-pd7rd      1&#x2F;1     Running     0          32hkube-system            coredns-7448499f4d-dlwqx                     1&#x2F;1     Running     0          32hkube-system            helm-install-traefik-crd-lpgwj               0&#x2F;1     Completed   0          32hkube-system            helm-install-traefik-gqrr9                   0&#x2F;1     Completed   1          32hkube-system            svclb-traefik-rrwqk                          2&#x2F;2     Running     0          32hkube-system            traefik-97b44b794-h2rqp                      1&#x2F;1     Running     0          32hkube-system            svclb-traefik-49gc9                          2&#x2F;2     Running     0          32hkube-system            svclb-traefik-nltmk                          2&#x2F;2     Running     0          32h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>至此k3s的安装也就告一段落了。</p><h1 id="安装一些管理应用"><a href="#安装一些管理应用" class="headerlink" title="安装一些管理应用"></a>安装一些管理应用</h1><p>到目前为止，<code>k3s</code>还只能在命令行使用，由于其复杂程度非常不利于初心者的使用，对于学习来说，快速开始使用是挺重要的，这里介绍<code>Kubernetes Dashboard</code>和<code>Kuboard</code>的部署。对于k8s集群来说，部署任务只需要在<code>Master</code>机上执行即可，<code>Master</code>节点会向<code>node</code>节点指派任务。所以以下操作均是在<code>Master</code>机上执行的（在我的集群中是<code>rpi1</code>）</p><h2 id="安装Kubernetes-Dashboard"><a href="#安装Kubernetes-Dashboard" class="headerlink" title="安装Kubernetes Dashboard"></a>安装Kubernetes Dashboard</h2><p>执行以下命令</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.2.0&#x2F;aio&#x2F;deploy&#x2F;recommended.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>执行完后需要等待一段时间，集群拉取镜像和指派任务需要一点时间<br>可以通过以下命令查看部署情况</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">watch kubectl get pods -n kuboard<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>如果为<code>ready</code>则说明已经部署完成了</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">NAME                                         READY   STATUS    RESTARTS   AGEkubernetes-dashboard-78c79f97b4-v9565        1&#x2F;1     Running   0          32hdashboard-metrics-scraper-856586f554-z8nz5   1&#x2F;1     Running   0          32h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="使Kubernetes-Dashboard在集群外部可用"><a href="#使Kubernetes-Dashboard在集群外部可用" class="headerlink" title="使Kubernetes Dashboard在集群外部可用"></a>使Kubernetes Dashboard在集群外部可用</h3><p>在部署完成后，在<code>Master</code>机上执行<code>kubectl proxy</code>可以使其在<code>Master</code>机上访问（<a href="http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/%EF%BC%89%EF%BC%8C%E4%BD%86%E8%BF%99%E5%AF%B9%E4%BA%8E%E6%88%91%E4%BB%AC%E6%9D%A5%E8%AF%B4%E6%98%AF%E4%B8%8D%E5%A4%9F%E7%9A%84%E3%80%82%E5%A4%A7%E5%85%AC%E5%8F%B8%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%B8%A6%E6%A1%8C%E9%9D%A2%E7%9A%84%E7%B3%BB%E7%BB%9F%EF%BC%8C%E5%9C%A8%E6%9C%BA%E6%88%BF%E4%B8%AD%E7%9B%B4%E6%8E%A5%E6%93%8D%E4%BD%9C%60Master%60%E6%9C%BA%EF%BC%8C%E4%BD%86%E5%B9%B3%E7%A9%B7%E5%A6%82%E6%88%91%E5%8F%AA%E8%83%BD%E4%BD%BF%E7%94%A8%E6%97%A0%E6%A1%8C%E9%9D%A2%E9%95%9C%E5%83%8F%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E7%BB%84%E9%9B%86%E7%BE%A4%EF%BC%8C%E6%89%80%E4%BB%A5%E6%88%91%E4%BB%AC%E8%87%B3%E5%B0%91%E8%A6%81%E8%AE%A9%E5%AE%83%E6%9A%B4%E9%9C%B2%E5%9C%A8%E9%9B%86%E7%BE%A4%E5%A4%96%EF%BC%8C%E8%87%B3%E5%B0%91%E5%9C%A8%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%8B%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E3%80%82">地址</a>） ，但这对于我们来说是不够的。大公司可以用带桌面的系统，在机房中直接操作<code>Master</code>机，但平穷如我只能使用无桌面镜像的树莓派组集群，所以我们至少要让它暴露在集群外，至少在局域网下可以使用。<br>此时就需要对其配置进行修改。执行以下命令</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">kubectl patch svc kubernetes-dashboard -n kubernetes-dashboard -p &#39;&#123;&quot;spec&quot;:&#123;&quot;type&quot;:&quot;NodePort&quot;,&quot;ports&quot;:[&#123;&quot;port&quot;:443,&quot;targetPort&quot;:8443,&quot;nodePort&quot;:30443&#125;]&#125;&#125;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>这个命令的意义在于让<code>Kubernetes Dashboard</code>的端口暴露在<code>nodePort</code>（节点端口）<code>30443</code>上，是我们可以通过访问<code>rpi1</code>（<code>192.168.6.91</code>）的<code>30443</code>端口，执行完后，就可以通过访问 <a href="https://192.168.6.91:30443/">https://192.168.6.91:30443</a> 使用<code>Kubernetes Dashboard</code>了。<br><br><br>但是！<br>但是由于目前集群使用的是自签名的ssl证书，对于浏览器而言是不受信任的，还无法直接访问。对于Firefox浏览器而言可以配置例外情况进行访问，而Google Chrome呢，它没给我们选项怎么办？<br>不用怕，其实Google Chrome有留“秘籍”！<br>点击以下页面的空白处，然后在键盘上敲thisisunsafe并回车就可以访问！非常有Google的风格。<br><br></p><h3 id="登录使用Kubernetes-Dashboard"><a href="#登录使用Kubernetes-Dashboard" class="headerlink" title="登录使用Kubernetes Dashboard"></a>登录使用Kubernetes Dashboard</h3><p><code>Kubernetes Dashboard</code>提供了两种登录方式，一种是<code>Token</code>，另一种是<code>Kubeconfig</code>。这里我只说<code>Token</code>的方法。<br>执行以下命令</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;server&#x2F;manifests&#x2F; #进入&#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;server&#x2F;manifests&#x2F;目录#创建并向dashboard-adminuser.yaml写入内容cat &gt; dashboard-adminuser.yaml &lt;&lt; EOFapiVersion: v1kind: ServiceAccountmetadata:  name: admin-user  namespace: kubernetes-dashboard---apiVersion: rbac.authorization.k8s.io&#x2F;v1kind: ClusterRoleBindingmetadata:  name: admin-userroleRef:  apiGroup: rbac.authorization.k8s.io  kind: ClusterRole  name: cluster-adminsubjects:- kind: ServiceAccount  name: admin-user  namespace: kubernetes-dashboard  EOF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>然后通过以下命令获取到<code>Token</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk &#39;&#123;print $1&#125;&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>将输出的<code>Token</code>填写在网页中即可。接下去就可以开始使用了</p><h2 id="安装Kuboard"><a href="#安装Kuboard" class="headerlink" title="安装Kuboard"></a>安装Kuboard</h2><p>看了<code>Kubernetes Dashboard</code>的安装以及进入<code>Kubernetes Dashboard</code>的页面后是不是感觉还是很麻烦？是不是觉得看到一大堆各种各样的洋文无从下手？没错，我也这么觉得。所以这里我们安装<code>Kuboard</code>方<code>便我们之后的使用。 不过这里就不在k8s中部署了，而是直接在</code>rpi1<code>上使用</code>docker<code>部署。这里只介绍</code>docker&#96;上的部署，其他的方式请参阅<a href="https://kuboard.cn/install/v3/install.html#kuboard-v3-x-%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E">官方文档</a>。</p><h3 id="部署Kuboard镜像"><a href="#部署Kuboard镜像" class="headerlink" title="部署Kuboard镜像"></a>部署Kuboard镜像</h3><p>在rpi1上执行以下命令</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker run -d \  --restart&#x3D;unless-stopped \  --name&#x3D;kuboard \  -p 60080:80&#x2F;tcp \  -p 60081:10081&#x2F;tcp \  -e KUBOARD_ENDPOINT&#x3D;&quot;http:&#x2F;&#x2F;192.168.6.91:60080&quot; \  -e KUBOARD_AGENT_SERVER_TCP_PORT&#x3D;&quot;60081&quot; \  -v &#x2F;root&#x2F;kuboard-data:&#x2F;data \  eipwork&#x2F;kuboard:v3.3.0.0-arm64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>参数<code>KUBOARD_ENDPOINT</code>中的地址为之后Web界面的访问地址，命令中的各部分可根据实际需求自由替换，详情参阅官方文档<br>部署完成之后直接访问 <a href="http://192.168.6.91:60080/">http://192.168.6.91:60080</a> 即可开始使用。比官方的<code>Kubernetes Dashboard</code>属实方便多了。<br><code>Kuboard</code>的默认用户名：<code>admin</code>，默认密码：<code>Kuboard123</code><br>现在开始，你也可以使用反向代理、内网穿透、端口映射等手段让管理界面在公网上可用。</p><h3 id="添加集群"><a href="#添加集群" class="headerlink" title="添加集群"></a>添加集群</h3><p>当我们完成了上面的设置，并不代表我们可以直接使用<code>Kuboard</code>对集群进行管理，还需要在设置中添加集群。<br><code>Kuboard</code>提供了两种方法<br><img src="https://pic.imgdb.cn/item/619399f72ab3f51d91a2697b.png"><br>这里我们选择<code>agent</code>的方式<br>填写名称和描述，其他默认，直接点确定，然后根据提示在<code>Master</code>机执行命令即可，基本无脑点确定就行，非常方便。<br>集群导入成功后即可开始使用<br><img src="https://pic.imgdb.cn/item/61939af62ab3f51d91a2f076.png"></p><h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>为了玩这个真的投入了不少时间和金钱，确实折腾人。目前还没搞懂k8s的很多概念，有非常多不理解的地方，对于任务的部署其实还完全不了解，回头理解了再发新的文章介绍。<del>估计要明年发了</del></p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://zhuanlan.zhihu.com/p/384328373">Raspberry Pi4b 集群基于Raspbian Buster搭建K3S集群</a></li><li><a href="https://zhuanlan.zhihu.com/p/390805379">手把手教大家使用树莓派4B搭建K8s集群</a></li><li><a href="https://github.com/openfans-community-offical/Debian-Pi-Aarch64/blob/master/README_zh.md">Debian-Pi-Aarch64 ★ 全新树莓派64位系统 2.0正式版 - 说明文档</a></li><li><a href="https://docs.rancher.cn/docs/k3s/installation/install-options/_index/">k3s —— 安装选项介绍</a></li><li><a href="https://kuboard.cn/install/v3/install.html">Kuboard —— 安装Kubernetes 多集群管理工具 - Kuboard v3</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>k8s</tag>
      
      <tag>Kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OnePlus 8T 刷机笔记</title>
    <link href="/2021/10/20/Android/onepe/"/>
    <url>/2021/10/20/Android/onepe/</url>
    
    <content type="html"><![CDATA[<p>很早就刷了，只不过一直懒的写。</p><span id="more"></span><h1 id="所需设备"><a href="#所需设备" class="headerlink" title="所需设备"></a>所需设备</h1><ul><li>电脑一台（配置好adb）</li><li>数据线一根</li><li>手机一只</li><li>人脑一个</li></ul><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="刷入氧OS"><a href="#刷入氧OS" class="headerlink" title="刷入氧OS"></a>刷入氧OS</h2><p><a href="https://www.oneplusbbs.com/thread-5689136-1.html">此处</a>下载9008救砖包，请注意：不要省略刷欧版的这一步！按照帖子用救砖包刷入欧版即可。</p><h2 id="解锁"><a href="#解锁" class="headerlink" title="解锁"></a>解锁</h2><p>进入设置，找到版本号狂点，开启开发者选项。<br>在开发者选项中打开<code>oem解锁</code>和<code>usb调试</code><br>手机连电脑后显示usb调试时选择<code>全部允许</code><br>电脑命令行下输入</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">adb reboot fastboot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>进入<code>fastboot</code>模式，开始解锁<code>oem</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">fastboot oem unlock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>此时需要在手机上操作，按手机音量键将光标以至<code>unlock</code></p><h2 id="解包"><a href="#解包" class="headerlink" title="解包"></a>解包</h2><p>从<a href="https://download.pixelexperience.org/kebab">官网</a>下载PE ROM<br>使用<code>payload_dumper</code>解包<br>解包后文件夹<code>output</code>中的内容物就是我们需要用到的东西</p><h2 id="刷入"><a href="#刷入" class="headerlink" title="刷入"></a>刷入</h2><p>一样需要重新打开开发者模式，打开USB调试<br>然后按以下顺序刷入即可</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">adb reboot bootloaderfastboot flash recovery D:\ payload_dumper-win64\ payload_output\recovery.imgfastboot flash boot D:\ payload_dumper-win64\ payload_output\boot.imgfastboot flash dtbo D:\ payload_dumper-win64\ payload_output\dtbo.imgfastboot flash vbmeta D:\ payload_dumper-win64\ payload_output\vbmeta.imgfastboot flash vbmeta_system D:\ payload_dumper-win64\payload_output\vbmeta_system.imgfastboot reboot fastbootfastboot flash system D:\ payload_dumper-win64\ payload_output\system.imgfastboot flash product D:\ payload_dumper-win64\ payload_output\product.imgfastboot flash system_ext D:\ payload_dumper-win64\ payload_output\system_ext.imgfastboot reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>刷机</tag>
      
      <tag>安卓</tag>
      
      <tag>PEROM</tag>
      
      <tag>PixelExperience</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows下安装gcc的小教程</title>
    <link href="/2021/10/08/win-inst-gcc/"/>
    <url>/2021/10/08/win-inst-gcc/</url>
    
    <content type="html"><![CDATA[<h1 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h1><p>正式开学了，第一天直入主题，学c。<br>学校电脑很垃圾<br>用的软件更垃圾<br>总之就是很难用</p><p>本文献给我的同学们。</p><p>旨在帮助不想使用学校电脑的同学们使用自己的笔电更好地学习c语言</p><span id="more"></span><h1 id="所需物品"><a href="#所需物品" class="headerlink" title="所需物品"></a>所需物品</h1><ul><li>Windows系统的电脑一台</li><li>一个良好的网络环境（最好能正常访问海外网站）</li></ul><h1 id="实做过程"><a href="#实做过程" class="headerlink" title="实做过程"></a>实做过程</h1><p>强烈推荐使用<a href="https://code.visualstudio.com/">VScode</a>写代码！！！</p><h2 id="安装MinGW"><a href="#安装MinGW" class="headerlink" title="安装MinGW"></a>安装MinGW</h2><p>Linux有自带的GNU，Mac自带clang，都可以不需要额外操作就正常使用gcc对代码进行编译<br>而Windows没有！没有！！！<br><img src="https://pic.imgdb.cn/item/616001712ab3f51d91b8c979.jpg"><br>所以这时候我们就需要安装MinGW来解决这个问题。</p><h3 id="下载MinGW"><a href="#下载MinGW" class="headerlink" title="下载MinGW"></a>下载MinGW</h3><p>网好的同学可以直接在<a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/">下载</a>。进入网页后向下找到x86_64-posix-seh点击即可下载。</p><h3 id="解压压缩包"><a href="#解压压缩包" class="headerlink" title="解压压缩包"></a>解压压缩包</h3><p>下载后会得到名字为<code>x</code>86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z<code>的压缩包。 默认情况下Windows是不能解压的，这里可以下载[Bandizip](https://www.bandisoft.com/)来解压缩。 解压位置随意，但记得记下来之后要用。 比如文件夹解压到了C盘根目录，那么文件夹路径即为</code>C:\mingw64<code> 文件夹路径加上bin后就是之后要用的文件夹路径（</code>C:\mingw64\bin&#96;)</p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>右键点击<code>此电脑</code>，在侧边栏找到<code>高级设置</code><br>在高级设置的界面里点击<code>环境变量</code>的选项，此时会看到<code>PATH</code>变量<br>点击<code>PATH</code>，将文件夹路径(<code>C:\mingw64\bin</code>)添加到里面即可</p><h3 id="如何验证是否成功安装"><a href="#如何验证是否成功安装" class="headerlink" title="如何验证是否成功安装"></a>如何验证是否成功安装</h3><p>在Windows菜单栏搜索cmd，打开命令行操作界面输入以下命令</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">gcc -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>如果跳出一大堆看不懂的英文或者中文就说明安装成功了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Windows</tag>
      
      <tag>开发</tag>
      
      <tag>c语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>业余无线电台通联日志</title>
    <link href="/2021/08/28/logbook/"/>
    <url>/2021/08/28/logbook/</url>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js" type="fd238605830abab8b7dec9fe-text/javascript"> </script><iframe align="top" frameborder="0" height="800" scrolling="yes" src="https://logbook.qrz.com/lbstat/BG5DMN/" width=100%></iframe>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>安利《八十亀ちゃんかんさつにっき》</title>
    <link href="/2021/07/29/yatogame/"/>
    <url>/2021/07/29/yatogame/</url>
    
    <content type="html"><![CDATA[<p>这是一部极其小众的作品，小众到电视动画开始时都没有在日本全国播放，但是机缘巧合下，让我接触到了这部作品。</p><p>这部作品围绕着八十龟最中等高中生的日常介绍了名古屋当地的人文风俗，日常番+超有意思的地方特色是在是太对我胃口了。</p><p>总之很爱就是了，顺便，前两季电视动画的音乐专辑以及漫画原著我也购入收藏了<br><img src="https://pic.imgdb.cn/item/610236685132923bf8f7ecc0.jpg" alt="题外话：还买了喷射战士2的设定集，Nintendo ruled the f*ck of the world！！！"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>岩田先生的演讲 -- 2005 GDC 存档</title>
    <link href="/2021/07/19/iwata-san-2005GDC/"/>
    <url>/2021/07/19/iwata-san-2005GDC/</url>
    
    <content type="html"><![CDATA[<blockquote><p>“On my business card,I am a corporate president.<br>In my mind,I am a game developer.<br>But in my heart,I am a gamer.”</p></blockquote><h2 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/RMrj8gdUfCU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>体育运动中的功能性训练</title>
    <link href="/2021/07/14/sports-/"/>
    <url>/2021/07/14/sports-/</url>
    
    <content type="html"><![CDATA[<p>本文内容摘抄于《体育运动中的功能性训练》（Michael Boyle著），同时视频演示以及步骤来自于<a href="https://www.gotokeep.com/">Keep健身</a>。    </p><span id="more"></span><br/><p>文中个人的一些观点以及注解会以MarkDown中的<code>引用</code>的形式出现，这一部分内容遵循 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh-Hans">署名-非商业性使用-相同方式共享 4.0 国际 (CC BY-NC-SA 4.0)</a> 协议。<br>个人精力有限，内容会缓慢更新。</p><h1 id="拉伸与动态热身"><a href="#拉伸与动态热身" class="headerlink" title="拉伸与动态热身"></a>拉伸与动态热身</h1><blockquote><p>运动前后热身有助于防止受伤</p></blockquote><h2 id="泡沫轴"><a href="#泡沫轴" class="headerlink" title="泡沫轴"></a>泡沫轴</h2><blockquote><p>泡沫轴是一种廉价且方便的热身、放松工具。<br>根据我有限的知识解释，泡沫轴的原理可以简单理解为通过对特定肌肉群的挤压，在运动前&#x2F;运动后使肌肉舒张，从而起到保护肌肉不会在过于猛烈的运动中撕裂，或是让运动后紧绷的肌肉放松。<br><strong>注意⚠️：泡沫轴购买圆桶表面平整的即可</strong><br>唯一缺点：用起来比较累</p></blockquote><h3 id="泡沫滚轴滚动臀大肌和髋部旋转肌"><a href="#泡沫滚轴滚动臀大肌和髋部旋转肌" class="headerlink" title="泡沫滚轴滚动臀大肌和髋部旋转肌"></a>泡沫滚轴滚动臀大肌和髋部旋转肌</h3><div data-src="https://static1.keepcdn.com/chaos/0728/B067C011_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1500870704159.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/B067C011_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div><h4 id="步骤（以左侧为例）"><a href="#步骤（以左侧为例）" class="headerlink" title="步骤（以左侧为例）"></a>步骤（以左侧为例）</h4><ul><li>左手撑地，右腿屈曲踩实地面，左腿搭在右膝上，上身稍微转向左侧，将重量压在左侧臀部</li><li>泡沫轴置于臀中部两块突起的骨头中间</li><li>右腿发力带动身体前后滚动</li></ul><h3 id="泡沫轴滚动下背部"><a href="#泡沫轴滚动下背部" class="headerlink" title="泡沫轴滚动下背部"></a>泡沫轴滚动下背部</h3><div data-src="https://static1.keepcdn.com/online/exercise/video/5afbabb3a29e345385f5e039/1526443122951/B003C020-girl.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.keepcdn.com/5afbb15bd734a2431135e348_cover_1920_1080_1526444383425.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/online/exercise/video/5afbabb3a29e345385f5e039/1526443122951/B003C020-girl.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ul><li>双臂支撑，将泡沫轴垫在下背部下方</li><li>臀部抬离地面，上身往后靠，将身体重量集中压在泡沫轴上</li><li>下背部在泡沫轴上缓缓的前后滚动</li></ul><h3 id="泡沫轴上背部放松"><a href="#泡沫轴上背部放松" class="headerlink" title="泡沫轴上背部放松"></a>泡沫轴上背部放松</h3><div data-src="https://static1.keepcdn.com/chaos/0728/A056C045_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1501056939959.jpg')" class="video-cover"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/A056C045_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div><h4 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h4><ul><li>仰卧在瑜伽垫上，屈膝，双脚与肩同宽踩实地面；双手抱住对侧肩膀，双肩充分展开</li><li>泡沫轴置于上背部下方，来回滚动</li><li>下颚后缩收紧，减少颈部受力</li></ul><h3 id="泡沫轴滚动阔筋膜张肌和臀中肌"><a href="#泡沫轴滚动阔筋膜张肌和臀中肌" class="headerlink" title="泡沫轴滚动阔筋膜张肌和臀中肌"></a>泡沫轴滚动阔筋膜张肌和臀中肌</h3><div data-src="https://static1.keepcdn.com/chaos/0728/B067C003_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1501153551580.jpg')" class="video-cover"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/B067C003_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div><h4 id="步骤（以左侧为例）-1"><a href="#步骤（以左侧为例）-1" class="headerlink" title="步骤（以左侧为例）"></a>步骤（以左侧为例）</h4><ul><li>45度左侧卧，左腿伸直，让大腿前外侧与泡沫轴接触，右腿屈曲置于左腿前；左肘撑地，右手扶地</li><li>左脚脚尖带动身体在泡沫轴上前后滚动，全程保持大腿放松</li></ul><h1 id="下肢练习"><a href="#下肢练习" class="headerlink" title="下肢练习"></a>下肢练习</h1><blockquote><p>下肢练习在竞技游泳中主要锻炼的部位为臀部、大腿的肌群</p></blockquote><h2 id="深蹲类"><a href="#深蹲类" class="headerlink" title="深蹲类"></a>深蹲类</h2><blockquote><p>深蹲类的动作主要锻炼的部分为臀大肌、缝匠肌、股四头肌、阔筋膜张肌（即臀部以及大腿前侧肌群）</p></blockquote><h3 id="深蹲"><a href="#深蹲" class="headerlink" title="深蹲"></a>深蹲</h3><ul><li>强度类型：基准<div data-src="https://static1.keepcdn.com/chaos/0728/B014C048_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1500955794373.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/B014C048_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div></li></ul><h4 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤"></a>步骤</h4><ul><li>腰背挺直，脚跟与肩同宽，膝盖与脚尖方向一致，不要内扣，掌心相对，手臂前平举</li><li>下蹲动作自然流畅，臀部向后移动，至最低点时大腿与地面近似平行，然后起身还原，全程保持腰背挺直</li></ul><h3 id="高脚杯深蹲"><a href="#高脚杯深蹲" class="headerlink" title="高脚杯深蹲"></a>高脚杯深蹲</h3><ul><li>强度类型：退阶（小重量哑铃下）&#x2F;进阶（大重量哑铃下）<div data-src="https://static1.keepcdn.com/chaos/0728/B035C056_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1501225028599.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/B035C056_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div></li></ul><h4 id="步骤-3"><a href="#步骤-3" class="headerlink" title="步骤"></a>步骤</h4><ul><li>双脚分开与肩同宽，收紧腹部核心，肩膀后缩下沉</li><li>双手握着一只哑铃的一端，放于胸口，不要离身体太远</li><li>臀部缓慢向后推并向下蹲，蹲至大腿与地面平行；稍作停顿</li><li>臀部收缩发力站起；站起后，肩胛骨后缩，夹紧臀部</li><li>保持腰背挺直，动作过程中膝盖朝向脚尖方向，同时膝盖不主动前伸</li></ul><h3 id="半蹲"><a href="#半蹲" class="headerlink" title="半蹲"></a>半蹲</h3><ul><li>强度类型：退阶<div data-src="https://static1.keepcdn.com/chaos/0728/B014C041_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1500956278902.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/B014C041_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div></li></ul><h4 id="步骤-4"><a href="#步骤-4" class="headerlink" title="步骤"></a>步骤</h4><ul><li>脚跟与肩同宽，挺直腰背，掌心相对，手臂前平举</li><li>臀部向后坐，膝盖与脚尖方向一致，下蹲至大腿与地面呈45°，臀部位置高于大腿，即可还原起身，动作尽* 可能流畅、连贯</li></ul><h3 id="分腿蹲"><a href="#分腿蹲" class="headerlink" title="分腿蹲"></a>分腿蹲</h3><ul><li>强度类型：基准</li></ul><h4 id="步骤-5"><a href="#步骤-5" class="headerlink" title="步骤"></a>步骤</h4><ul><li>分腿站姿，双脚与肩同宽，前后分开（类似弓步的站姿）</li><li>双手叉腰，后膝缓慢下降触碰地板</li></ul><h1 id="核心练习"><a href="#核心练习" class="headerlink" title="核心练习"></a>核心练习</h1><p>核心肌群包含以下肌肉</p><ul><li>腹直肌（腹部肌肉）</li><li>腹横肌（腹部肌肉）</li><li>多裂肌（背部肌肉）</li><li>腹内斜肌和腹外斜肌（腹部肌肉）</li><li>腰方肌（下背部肌肉）</li><li>竖脊肌（背部肌肉）</li><li>部分髋处肌肉（例如臀肌、髋部旋转肌群）<blockquote><p>核心肌群的力量关系到身体的稳定系，例如竞技游泳中需要在游进过程中长时间保持核心紧绷，从而稳定身体，或是配合身体绕纵轴转动</p></blockquote></li></ul><h2 id="平板支撑类"><a href="#平板支撑类" class="headerlink" title="平板支撑类"></a>平板支撑类</h2><h3 id="平板支撑"><a href="#平板支撑" class="headerlink" title="平板支撑"></a>平板支撑</h3><ul><li>强度类型：基准<div data-src="https://static1.keepcdn.com/chaos/0728/A031C068_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1500881848788.jpg')" class="video-cover"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/A031C068_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div></li></ul><h4 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h4><ul><li>屈肘，小臂与前脚掌撑地，耳、肩、髋、膝、踝呈一条直线</li><li>手肘朝脚的方向用力， 脚尖用力向前勾起，与地面摩擦力对抗，小臂按紧地面</li></ul><h3 id="侧支撑"><a href="#侧支撑" class="headerlink" title="侧支撑"></a>侧支撑</h3><ul><li>强度类型：基准<div data-src="https://static1.keepcdn.com/chaos/0728/B044C010_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1500886283568.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/B044C010_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div></li></ul><h4 id="步骤（以左侧为例）-2"><a href="#步骤（以左侧为例）-2" class="headerlink" title="步骤（以左侧为例）"></a>步骤（以左侧为例）</h4><ul><li>左手肘支撑在瑜伽垫上，左侧大臂垂直于地面，右臂向上伸展并垂直于地面；双脚并拢</li><li>全身收紧，保持身体呈一条直线</li></ul><h3 id="屈膝侧支撑"><a href="#屈膝侧支撑" class="headerlink" title="屈膝侧支撑"></a>屈膝侧支撑</h3><ul><li>强度类型：退阶<div data-src="https://static1.keepcdn.com/chaos/0728/B049C097_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1501223662687.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/B049C097_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div></li></ul><h4 id="要点-1"><a href="#要点-1" class="headerlink" title="要点"></a>要点</h4><ul><li>身体侧对地面，不能前后倾倒，左臂屈臂，小臂撑地，右臂向上伸直</li><li>双腿曲膝，左小腿外侧着地，绷紧侧腹部，从头到膝盖呈一条直线</li></ul><h2 id="其他类"><a href="#其他类" class="headerlink" title="其他类"></a>其他类</h2><h3 id="俄罗斯转体"><a href="#俄罗斯转体" class="headerlink" title="俄罗斯转体"></a>俄罗斯转体</h3><ul><li>强度类型：基准<div data-src="https://static1.keepcdn.com/cms_static/video/2020/12/17/1608174696134_MTYwMjU3Njc4MDY0.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1501211030892.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/cms_static/video/2020/12/17/1608174696134_MTYwMjU3Njc4MDY0.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div></li></ul><h4 id="步骤-6"><a href="#步骤-6" class="headerlink" title="步骤"></a>步骤</h4><ul><li>坐于垫上，双腿曲膝抬起，脚离地，下背挺直，上背略微弓起</li><li>转动双肩来带动手臂的移动</li><li>手接触身体两侧地面，目光跟随双手移动</li></ul><h1 id="上肢练习"><a href="#上肢练习" class="headerlink" title="上肢练习"></a>上肢练习</h1><h2 id="俯卧撑类"><a href="#俯卧撑类" class="headerlink" title="俯卧撑类"></a>俯卧撑类</h2><h3 id="俯卧撑"><a href="#俯卧撑" class="headerlink" title="俯卧撑"></a>俯卧撑</h3><ul><li>强度类型：基准<div data-src="https://static1.keepcdn.com/chaos/0728/A076C011_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1500863455624.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/A076C011_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div></li></ul><h4 id="要领"><a href="#要领" class="headerlink" title="要领"></a>要领</h4><ul><li>俯卧撑于垫上，腰背挺直，从侧面看身体成一条直线，双手撑于胸部两侧，间距比肩略宽</li><li>屈臂俯身至肘关节略高于躯干，然后伸臂起身还原</li></ul><h3 id="简易俯卧撑"><a href="#简易俯卧撑" class="headerlink" title="简易俯卧撑"></a>简易俯卧撑</h3><ul><li>强度类型：退阶<div data-src="https://static1.keepcdn.com/chaos/0728/A079C074_main_s.mp4" class="video-wrapper square-wrapper"><div style="background-image:url('https://static1.gotokeep.com/picture/frame/1500972903437.jpg')" class="video-cover hide"></div><img src="https://staticweb.keepcdn.com/staticShow/images/homepage/play-1a7aadd99d.png" class="play-btn" style="display: none;"><video autoplay="autoplay" id="exercise-video" x-webkit-airplay="true" webkit-playsinline="" playsinline="true" class="video-video" loop="loop" src="https://static1.keepcdn.com/chaos/0728/A079C074_main_s.mp4" style="width: 100%; height: 100%;margin: 0 auto;"></video></div></li></ul><h4 id="步骤-7"><a href="#步骤-7" class="headerlink" title="步骤"></a>步骤</h4><ul><li>俯卧撑于垫上，腰背挺直，从侧面看身体成一条直线，双手撑于胸部两侧，间距比肩略宽</li><li>屈臂俯身至身体贴于地面上，屈腿使膝盖着地，然后伸臂起身还原</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>自用软件/项目/网站推荐</title>
    <link href="/2021/06/03/URL/"/>
    <url>/2021/06/03/URL/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>由于自己的爱折腾，所以经常各种作死刷系统和重装。在经历了痛苦的抢救之后往往会忘记自己以前安装过什么奇奇怪怪的东西，所以想记录下来，并安利给看到这篇文章的人。</p><span id="more"></span><h3 id="分类方法及相关事项介绍"><a href="#分类方法及相关事项介绍" class="headerlink" title="分类方法及相关事项介绍"></a>分类方法及相关事项介绍</h3><p>我会根据应用的功能进行分类，并在应用的后面标注可以使用的平台或是使用的编程语言，同时我也会贴上获取的链接。</p><br/><h2 id="学习相关"><a href="#学习相关" class="headerlink" title="学习相关"></a>学习相关</h2><ul><li>Qwerty Learner –为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件 <a href="https://github.com/Kaiyiwing/qwerty-learner">项目地址</a></li><li>時雨の町 –日语学习网站 <a href="https://www.sigure.tw/">官方网址</a></li><li>Python –100天从新手到大师 <a href="https://github.com/jackfrued/Python-100-Days">项目地址</a></li></ul><h2 id="办公相关"><a href="#办公相关" class="headerlink" title="办公相关"></a>办公相关</h2><ul><li>Slidev –用MarkDown制作PPT <a href="https://github.com/slidevjs/slidev">项目地址</a></li><li>Google文档 –Google推出的办公套件 <a href="https://www.google.com/intl/zh-CN/docs/about/">官方网址</a></li></ul><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><ul><li>Hexo –强大的静态博客框架（Mac、Windows、Linux） <a href="https://hexo.io/">官方网址</a></li><li>Gridea –易用的静态博客写作客户端（Mac、Windows、Linux） <a href="https://github.com/getgridea/gridea">官方网址</a></li></ul><h2 id="站长工具"><a href="#站长工具" class="headerlink" title="站长工具"></a>站长工具</h2><ul><li>Google站长 <a href="https://search.google.com/">官方网址</a></li><li>Google分析 <a href="https://analytics.google.com/">官方网址</a></li><li>Super Tiny Icons –小体积SVG图像项目 <a href="https://github.com/edent/SuperTinyIcons">项目地址</a></li><li>聚合图床 –高速稳定的图片上传和外链服务 <a href="https://www.superbed.cn/">官方网址</a></li><li>阿里巴巴矢量图库 <a href="https://www.iconfont.cn/collections?personal=1">官方网址</a></li></ul><h2 id="开发相关"><a href="#开发相关" class="headerlink" title="开发相关"></a>开发相关</h2><ul><li>VSCode –极其好用的IDE <a href="https://code.visualstudio.com/">官方网址</a></li><li>Android Studio –Android开发必备IDE <a href="https://developer.android.com/studio">官方网址</a></li><li>吾爱破解论坛 <a href="https://www.52pojie.cn/">论坛地址</a></li><li>Homebrew –Mac必备包管理软件 <a href="https://brew.sh/">官方网址</a></li></ul><h3 id="VSCode插件专区"><a href="#VSCode插件专区" class="headerlink" title="VSCode插件专区"></a>VSCode插件专区</h3><ul><li>vscode-icons – 在文件列表的文件名边加上图标 <a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons">链接</a></li><li>Kite AutoComplete AI Code – 智能代码补全工具 <a href="https://marketplace.visualstudio.com/items?itemName=kiteco.kite">链接</a></li><li>Chinese (Traditional) Language Pack for Visual Studio Code – 中文插件 <a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hant">链接</a></li><li>Bracket Pair Colorizer – 代码对着色器 <a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer">链接</a></li></ul><h2 id="信息获取"><a href="#信息获取" class="headerlink" title="信息获取"></a>信息获取</h2><ul><li>🐋 Awesome TTRSS –方便部署的Tiny Tiny RSS Docker项目 <a href="https://ttrss.henry.wang/zh/#%E5%85%B3%E4%BA%8E">官方网址</a></li><li>FeedMe –Android RSS订阅客户端 （<a href="https://play.google.com/store/apps/details?id=com.seazon.feedme&hl=zh&gl=US">Android</a>） <a href="https://github.com/seazon/FeedMe">官方网址</a> </li><li>RSSHub –开源、简单易用、易于扩展的 RSS 生成器 <a href="https://docs.rsshub.app/">官方网址</a></li><li>Newlearnerの自留地 –Telegram资讯频道 <a href="https://t.me/NewlearnerChannel">频道链接</a></li></ul><h2 id="多媒体-音乐相关"><a href="#多媒体-音乐相关" class="headerlink" title="多媒体&#x2F;音乐相关"></a>多媒体&#x2F;音乐相关</h2><ul><li>YouTube Music –来自Google的音乐串流服务 （Web、Android、iOS）<a href="https://music.youtube.com/">官方网址</a></li><li>Netflix –优质的影视流媒体平台 <a href="https://www.netflix.com/">官方网址</a></li><li>巴哈姆特動畫瘋 –巴哈姆特电玩资讯站于台湾运营的OTT动画播放平台 <a href="https://ani.gamer.com.tw/">官方网址</a> </li><li>IINA –干净的MacOS多媒体播放器 （Mac）<a href="https://iina.io/">官方网址</a></li><li>VLC –跨平台的多媒体播放器（Mac、Windows、Linux、Android、iOS）<a href="https://www.videolan.org/">官方网址</a></li><li>poweramp –强大的Android音乐播放器 <a href="https://powerampapp.com/">官方网址</a></li><li>Plex –跨平台的家庭影音中心（Mac、Windows、Linux、Android、iOS）<a href="https://www.plex.tv/">官方网址</a></li><li>Disney+ – 迪士尼本家的流媒体平台 <a href="https://disneyplus.com/">官方网址</a></li></ul><h2 id="通讯"><a href="#通讯" class="headerlink" title="通讯"></a>通讯</h2><ul><li>Telegram （Mac、Windows、Linux、Android、iOS、Web）<a href="https://telegram.org/">官方网址</a></li></ul><h2 id="网络穿透工具"><a href="#网络穿透工具" class="headerlink" title="网络穿透工具"></a>网络穿透工具</h2><ul><li><a href="https://github.com/Dreamacro/clash">Clash</a> （<a href="https://github.com/yichengchen/clashX">Mac</a>、<a href="https://github.com/Fndroid/clash_for_windows_pkg">Windows</a>、<a href="https://github.com/Kr328/ClashForAndroid">Android</a>、<a href="https://github.com/vernesong/OpenClash">OpenWrt</a>）  </li><li>v2Ray –网络穿透工具箱  <a href="https://www.v2ray.com/">官方网址</a></li></ul><h2 id="电子书-漫画相关"><a href="#电子书-漫画相关" class="headerlink" title="电子书&#x2F;漫画相关"></a>电子书&#x2F;漫画相关</h2><ul><li>Tachiyomi –开源的Android漫画客户端 （Android) <a href="https://github.com/tachiyomiorg/tachiyomi">项目地址</a></li><li>Calibre –跨平台的电子书管理软件（Mac、Windows、Linux）<a href="https://calibre-ebook.com/">官方网址</a></li></ul><h2 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h2><ul><li>tgbot-collection&#x2F;YYeTsBot –开源的人人影视数据库 <a href="https://github.com/tgbot-collection/YYeTsBot">项目地址</a></li><li>Mox.moe –Kindle漫画下载站<a href="https://vol.moe/">官方网址</a></li><li>RARBG –影视磁力下载站 <a href="https://rarbg.to/">官方网址</a></li><li>日剧跑 –日剧资源分享站 <a href="https://www.rijupao.com/">官方网址</a></li><li>蜜柑计划 –番剧磁力下载站 <a href="https://mikanani.me/">官方网址</a></li><li>AGE动漫 –番剧网盘下载站 <a href="https://www.age.tv/">官方网址</a></li><li>次元狗动漫 –番剧网盘下载站 <a href="https://www.acgndog.com/">官方网址</a></li><li>二次元虫洞 –ACG资源论坛 <a href="http://www.2cycd.com/">论坛地址</a></li><li>ACG爱动漫 –ACG资源论坛 <a href="https://www.aidm12.com/">论坛地址</a></li><li>星空论坛 –ACG资源论坛 <a href="https://bbs.seikuu.com/forum.php">论坛地址</a></li><li>Hires后花园 –无损音乐论坛 <a href="https://dsdlove.com/forum.php">论坛地址</a> </li><li>漫音社 –无损ACG音乐下载站 <a href="http://www.acgjc.com/">官方网址</a></li><li>sukidesuost –无损ACG音乐下载站 <a href="https://sukidesuost.info/">官方网址</a></li><li>点点字幕 –好用的字幕下载站 <a href="http://www.ddzimu.com/">官方网址</a></li><li>A4K字幕 –好用的字幕下载站 <a href="https://www.a4k.net/">官方网址</a></li><li>Xclient下载站 –MacOS软件下载站 <a href="https://xclient.info/?t=22dcd3c249bc291a24ef20acc97a97f9947a0846">xclient</a>  </li><li>pc6下载站 –MacOS软件下载站 <a href="http://www.pc6.com/mac/soft/">官方网址</a></li></ul><h2 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h2><ul><li>Downie 4 –万用的Mac视频下载器（Mac）<a href="https://software.charliemonroe.net/downie/">官方网址</a></li><li>BitComet(比特彗星) –一款免费的BT&#x2F;HTTP&#x2F;FTP下载软件（Mac、Windows、Android）<a href="http://www.bitcomet.com/cn">官方网址</a></li><li>aria2 –跨平台下载工具（Mac、Windows、Linux）<a href="https://aria2.github.io/">官方网址</a></li><li>Motrix –跨平台下载工具（Mac、Windows、Linux）<a href="https://motrix.app/">官方网址</a></li></ul><h2 id="系统镜像"><a href="#系统镜像" class="headerlink" title="系统镜像"></a>系统镜像</h2><ul><li>Ubuntu <a href="https://ubuntu.com/">官方网址</a></li><li>Windows10 <a href="https://www.microsoft.com/zh-tw/software-download/windows10ISO">官方网址</a></li><li>OpenWrt <a href="https://mlapp.cn/369.html">第三方项目地址</a></li><li>MacOS <a href="https://www.applex.net/pages/macos/">第三方论坛地址</a></li><li>Cros Updates Serving –ChromeOS镜像站 <a href="https://cros-updates-serving.appspot.com/">官方网址</a></li><li>Debian-Pi-Aarch64 ★ 全新树莓派64位系统 <a href="https://github.com/openfans-community-offical/Debian-Pi-Aarch64">项目地址</a></li><li>pixelexperience –好用的类原生Android ROM <a href="https://download.pixelexperience.org/">官方网址</a></li></ul><h2 id="私有云-分享站"><a href="#私有云-分享站" class="headerlink" title="私有云&#x2F;分享站"></a>私有云&#x2F;分享站</h2><ul><li>OLAINDEX –一款OneDrive目录文件索引应用 <a href="https://github.com/WangNingkai/OLAINDEX">项目地址</a></li><li>Cloudreve –以最低的成本快速搭建公私兼备的网盘系统 <a href="https://cloudreve.org/">官方网址</a></li></ul><h2 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h2><h3 id="API调试"><a href="#API调试" class="headerlink" title="API调试"></a>API调试</h3><ul><li>bruno –简单好用的跨平台API调试工具 <a href="https://github.com/usebruno/bruno">项目地址</a></li></ul><h2 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a>实用工具</h2><h3 id="广播"><a href="#广播" class="headerlink" title="广播"></a>广播</h3><ul><li>Radio Garden –收听全世界的广播 <a href="http://radio.garden/">官方网址</a></li></ul><h3 id="系统镜像烧录"><a href="#系统镜像烧录" class="headerlink" title="系统镜像烧录"></a>系统镜像烧录</h3><ul><li>balenaEtcher –跨平台镜像烧录工具（Mac、Windows、Linux）<a href="https://www.balena.io/etcher/">官方网址</a></li><li>ventoy <a href="https://www.ventoy.net/en/index.html">官方网址</a></li></ul><h3 id="MarkDown工具"><a href="#MarkDown工具" class="headerlink" title="MarkDown工具"></a>MarkDown工具</h3><ul><li>obsidian –跨平台的MarkDown写作工具（Mac、Windows、Linux、Android、iOS） <a href="https://obsidian.md/">官方网址</a></li></ul><h3 id="traceroute请求可视化"><a href="#traceroute请求可视化" class="headerlink" title="traceroute请求可视化"></a>traceroute请求可视化</h3><ul><li>BestTrace –一款优秀的traceroute请求可视化工具 <a href="https://www.ipip.net/product/client.html">官方网址</a></li></ul><h3 id="图像压缩"><a href="#图像压缩" class="headerlink" title="图像压缩"></a>图像压缩</h3><ul><li>tinypng –在线压缩图像的网站 <a href="https://tinypng.com/">官方网址</a></li><li>PP鸭 –图片压缩神器 <a href="https://ppduck.com/">官方网址</a></li><li>Imagine –跨平台图片压缩 <a href="https://github.com/meowtec/Imagine">项目地址</a></li></ul><h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><ul><li>MacZip –一款干净的Mac解压缩工具（Mac）<a href="https://ezip.awehunt.com/">官方网址</a></li><li>Bandizip –一款跨平台解压缩工具（Mac、Windows）<a href="https://www.bandisoft.com/">官方网址</a></li><li>ZArchiver –一款Android平台好用的解压缩、文件管理工具<a href="https://play.google.com/store/apps/details?id=ru.zdevs.zarchiver&hl=zh&gl=US">Google Play</a></li></ul><h3 id="音频提取"><a href="#音频提取" class="headerlink" title="音频提取"></a>音频提取</h3><ul><li>XLD –Mac音频提取工具（Mac） <a href="https://sourceforge.net/projects/xld/">下载地址</a></li></ul><h3 id="音乐信息修改"><a href="#音乐信息修改" class="headerlink" title="音乐信息修改"></a>音乐信息修改</h3><ul><li>Music Tag Editor –一款Mac下音乐信息修改工具（Mac）<a href="http://www.yumysoft.com/">官方网址</a></li></ul><h3 id="视频-音频压制"><a href="#视频-音频压制" class="headerlink" title="视频&#x2F;音频压制"></a>视频&#x2F;音频压制</h3><ul><li>HandBrake –跨平台视频压制工具（Mac、Windows、Linux）<a href="https://handbrake.fr/">官方网址</a></li><li>Adapter –音视频压缩工具（Mac、Windows）<a href="https://macroplant.com/adapter">官方网址</a></li></ul><h3 id="配色工具"><a href="#配色工具" class="headerlink" title="配色工具"></a>配色工具</h3><ul><li>色采 –一款优秀的移动端配色应用（<a href="https://colorcollect.cn/apk/ColorCapture.apk">Android</a>、<a href="https://apps.apple.com/cn/app/id1439521846">iOS</a>）<a href="https://colorcollect.cc/"></a></li></ul><h3 id="网络抓包"><a href="#网络抓包" class="headerlink" title="网络抓包"></a>网络抓包</h3><ul><li>Fiddler –一款优秀的跨平台抓包工具（Mac、Windows、Linux）<a href="https://www.telerik.com/fiddler">官方网址</a></li></ul><h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><ul><li>Termius –跨平台SSH工具 （Mac、Windows、Linux、Android、iOS）<a href="https://termius.com/">官方网址</a></li></ul><h3 id="局域网文件传输"><a href="#局域网文件传输" class="headerlink" title="局域网文件传输"></a>局域网文件传输</h3><ul><li>snapdrop –好用的局域网跨平台传输工具 <a href="https://snapdrop.net/">官方网址</a></li></ul><h3 id="Android-ROM解包工具"><a href="#Android-ROM解包工具" class="headerlink" title="Android ROM解包工具"></a>Android ROM解包工具</h3><ul><li>unpackandroidrom –基于Python的Android解包工具 <a href="https://github.com/AEnjoy/unpackandroidrom">项目地址</a></li></ul><h3 id="编码转换"><a href="#编码转换" class="headerlink" title="编码转换"></a>编码转换</h3><p>CodeTransmit –基于python的编码转换工具 （Mac、Windows、Linux）<a href="https://github.com/clorymmk/CodeTransmit">项目地址</a></p><h3 id="订阅转换"><a href="#订阅转换" class="headerlink" title="订阅转换"></a>订阅转换</h3><ul><li>subconverter –网络穿透订阅链接转换服务项目 （Mac、Windows、Linux）<a href="https://github.com/tindy2013/subconverter">项目地址</a></li><li>sub-web –subconverter的Web前端 <a href="https://github.com/CareyWang/sub-web">项目地址</a></li><li>Clash rules –适用于 Clash Premium 内核的规则集（RULE-SET）<a href="https://github.com/Loyalsoldier/clash-rules">项目地址</a></li><li>subconverteriniexample –适用于 Clash Premium 内核的规则集 <a href="https://github.com/lzdnico/subconverteriniexample">项目地址</a></li></ul><h3 id="OCR"><a href="#OCR" class="headerlink" title="OCR"></a>OCR</h3><ul><li>pot-desktop <a href="https://github.com/pot-app/pot-desktop">项目地址</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>推荐</tag>
      
      <tag>安利</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Anker Liberty Air 2 Pro 非客观评测</title>
    <link href="/2021/05/17/liberty-air-2-pro/"/>
    <url>/2021/05/17/liberty-air-2-pro/</url>
    
    <content type="html"><![CDATA[<p>前几天开始，我所在的城市算是准备开始入夏，只要不下雨，基本30度以上了。<br>这对于长头发的人来说属实不是什么好事，同时对于一个平时戴耳罩式耳机又长头发的人来说简直是“火上加碳”。<br>剪头发是不可能的，这辈子都不可能的，所以只能从耳机入手了。</p><span id="more"></span><h2 id="先给结论"><a href="#先给结论" class="headerlink" title="先给结论"></a>先给结论</h2><p>可以说这部耳机从入手打开的那一刻就惊艳到我了，音质、降噪都没话说，独家的 HearID 2.0 可以很方便的针对不同人的听力进行优化，同时价格只需要999（某宝上店铺卖的更便宜，我入手的价格大概是750）<br><strong>如果你不是对音频格式、比特率、采样等数据有着无与伦比的执念的发烧友，以及追求超低延迟的FPS、音乐游戏还非要戴无线蓝牙耳机的玩家，那么这款耳机就非常适合你。无论你用的是iPhone还是Android。</strong></p><blockquote><ul><li>推荐指数  ⭐⭐⭐⭐⭐</li><li>佩戴舒适度  ⭐⭐⭐⭐⭐</li><li>兼容性     ⭐⭐⭐⭐⭐</li><li>CP值       ⭐⭐⭐⭐⭐</li><li>音质水平  ⭐⭐⭐⭐</li><li>降噪水平  ⭐⭐⭐⭐</li><li>易用性     ⭐⭐⭐⭐</li></ul></blockquote><h2 id="开箱"><a href="#开箱" class="headerlink" title="开箱"></a>开箱</h2><p>我买耳机，尤其是无线耳机这种可以进行固件升级的耳机非常讨厌购买国行，原因<a href="https://blog.xianyu.one/post/sony-wh-h900n/">详见</a>。<br>但我这次买了国行。</p><p>Anker 这个品牌其实之前长期运营海外市场，近些年才慢慢开始顾上大陆市场，从包装上来说，其实和海外版差别不大，除了中文多了点然后把android下载应用的Google Play标志拿掉然后告诉你从各大应用市场下载外与海外版包装基本一致<br><img src="https://pic.imgdb.cn/item/60a205056ae4f77d35ffc523.png"><br>内部第一层非常简洁，就是耳机本体加上充电仓<br><img src="https://pic.imgdb.cn/item/60a2060d6ae4f77d350a2759.png"><br>第二层就是充电线和说明书以及替换用的耳塞，<strong>这款耳机非常夸张的附赠了8组（加耳机上那一副共九组）不同型号的硅胶耳塞供用户选择！</strong><br>妈妈再也不用担心耳塞型号不合适了！<br><img src="https://pic.imgdb.cn/item/60a206f76ae4f77d35136e49.png" alt="耳塞在说明书底下"><br><img src="https://pic.imgdb.cn/item/60a2071d6ae4f77d35151519.png" alt="有够夸张！"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>讲实话，我纸质说明书根本没打开看</p><h3 id="首次配对"><a href="#首次配对" class="headerlink" title="首次配对"></a>首次配对</h3><p>首次配对只需要把耳机放入充电仓，同时看到右耳耳机上面的指示灯在闪烁就说明耳机正在等待配对了，这时候只需到手机设置里的蓝牙设置把耳机连上就能开始用了</p><h3 id="APP使用"><a href="#APP使用" class="headerlink" title="APP使用"></a>APP使用</h3><p>只是通过蓝牙链接这款耳机并不能发挥它全部的效能，这时我们需要通过它的APP对设置进行客制化<br>下载地址：<a href="https://apps.apple.com/us/app/soundcore/id1331876603">App Store</a> <a href="https://play.google.com/store/apps/details?id=com.oceanwing.soundcore&hl=en_US&gl=US">Google Play</a></p><h4 id="HearID设置"><a href="#HearID设置" class="headerlink" title="HearID设置"></a>HearID设置</h4><p>每个人的耳朵对声音的灵敏度都不一样，通过HearID的测试，耳机可以自动根据你对声音的敏感度调整等化器<br><strong>HearID设置真的非常非常重要，它能让你听到的音乐变得更加好听！</strong><br>在app左下角你可以看到<code>HearID及等化器</code>的选项，点进去之后就可以看到HearID设置，按照提示花几分钟即可。</p><h4 id="降噪"><a href="#降噪" class="headerlink" title="降噪"></a>降噪</h4><p>这个真的好评，降噪模式分为<code>交通</code>、<code>室内</code>、<code>户外</code>、<code>自订</code>四种，每个模式的侧重都不同</p><ul><li>交通：会集中降低汽车发动机等交通工具的噪音，实测下来能听得见发动机的声音但已经非常微弱了，开音乐的话不注意听也根本不会注意到汽车的声音了</li><li>室内：注重人声等声音的降噪，是三个预设中降噪强度最大的，除了人声，电脑等电器发出的早上也能被很好地消除，世界瞬间安静</li><li>户外：这个我决定主要是用于跑步、骑行等容易产生风噪的场景下，户外模式下不会有任何因风击打拾音麦克风而导致的风切声（风刮到耳朵上的声音还是会有的，就是你平时跑步时风刮来你听到那种声音，但是非常轻）。</li><li>自定义模式：讲实话我没有用过，实在不知道自定义模式怎么用，APP里没说明自定义模式下调节各档有哪些不同，这点差评<br>降噪来说稍微会比AirPods Pro差一点点（吊打WH-H900n），但正因为降噪强度没有那么高，所以耳压感几乎没有，佩戴非常舒适</li></ul><h4 id="小组件"><a href="#小组件" class="headerlink" title="小组件"></a>小组件</h4><p>小组件可以很方便地根据个人需求选择使用不同的降噪模式抑或是也换到降噪关闭或通透模式。Android下的小组件我个人觉得甚至比Google自家的要好看<br><img src="https://pic.imgdb.cn/item/60a2175a6ae4f77d35bd79fe.png"></p><h3 id="音质"><a href="#音质" class="headerlink" title="音质"></a>音质</h3><p><strong>这里讲的是经过HearID设置后听到的声音，由于每个人的耳朵对声音的敏感程度不同，我仅代表我个人的感受，不能代表任何组织以及任何科学严谨的结论。</strong></p><h4 id="传输格式"><a href="#传输格式" class="headerlink" title="传输格式"></a>传输格式</h4><p>这款耳机的音频协议仅支持<a href="https://en.wikipedia.org/wiki/SBC_(codec)">SBC</a>&#x2F;<a href="https://zh.wikipedia.org/wiki/%E9%80%B2%E9%9A%8E%E9%9F%B3%E8%A8%8A%E7%B7%A8%E7%A2%BC">AAC</a><br>但这不能代表什么。<br>音频协议只决定了音乐能达到的上限，简单来讲协议所决定的是单位时间内手机传输到耳机的数据量有多大，比如大多数音乐软件给的<code>低、中、高品质</code>的歌曲都是能使用AAC协议正常使用的，而如果你使用的音源达到了<code>无损</code>例如使用<code>FLAC</code>、<code>WAV</code>格式的音乐，其数据量大到无法AAC协议无法胜任，那么就要使用单位时间内可以传输更大数据量的<a href="https://en.wikipedia.org/wiki/LDAC_(codec)">LDAC</a>、<a href="https://en.wikipedia.org/wiki/AptX">aptX</a>协议。<br>对于普通人来说，其实AAC很够用了。在HearID的加持下，你可以获得不错的体验。</p><h4 id="主观听感"><a href="#主观听感" class="headerlink" title="主观听感"></a>主观听感</h4><p>我本人不懂音乐，说不出什么专有名词和解释，只能很主观给出如下感受：</p><blockquote><ul><li>低音非常棒，控制的恰到好处，同时不至于特别轰头</li><li>和Sony的<code>WH-H900n</code>相比人声稍微有所欠缺（只是稍微），不过不影响。整体来说人声是非常清晰的，但我就是觉得人声稍微有一点点欠缺，文化水平不高实在表达不出来。</li><li>总体来说非常优秀，声音干净、清晰</li></ul></blockquote><p>个人使用下来与家里的音箱、耳机相比的听觉感受排名如下<br><code>Sony SRS-HG2 音箱</code>&gt;<code>Sony WH-H900n 头戴式耳机</code>&gt;<code>SIMGOT em2 洛神 入耳式有线耳机</code>&gt;<code>Anker Liberty Air 2 Pro</code>&gt;<code>Google Next Mini 智能音箱</code>&gt;<code>Apple AirPods Pro</code>&gt;<code>Sony NW-WS413</code>&gt;<code>Sony WF-SP800N</code></p><h3 id="佩戴"><a href="#佩戴" class="headerlink" title="佩戴"></a>佩戴</h3><h4 id="舒适性"><a href="#舒适性" class="headerlink" title="舒适性"></a>舒适性</h4><p>这副耳机是我除了Apple的<code>AirPods</code>系列外唯一戴着很舒服的入耳式耳机，舒服到甚至可能会忘了有它的存在。<br>而且运动时也非常稳固，不容易被甩掉。</p><h4 id="耳塞型号选择"><a href="#耳塞型号选择" class="headerlink" title="耳塞型号选择"></a>耳塞型号选择</h4><p>由于附赠了非常非常多的硅胶耳塞，所以不用担心耳塞不合适，如果你不知道怎么用算是戴好耳塞或者应该戴什么型号的耳塞，可以戴上耳机使用APP中的<code>Tip Fit Test</code>功能检测耳机是否戴好，并给出佩戴建议。<br><img src="https://pic.imgdb.cn/item/60a218a96ae4f77d35ca5d5f.png"></p><h3 id="续航"><a href="#续航" class="headerlink" title="续航"></a>续航</h3><p>续航根本不用担心，官方标称降噪模式下耳机续航6小时，带充电仓甚至能高达26小时的续航，你甚至可以不带充电仓完成一场全马。<br>我个人的使用来说四五天充一次电就绰绰有余了。</p><h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><h4 id="触摸操作判定有点迷"><a href="#触摸操作判定有点迷" class="headerlink" title="触摸操作判定有点迷"></a>触摸操作判定有点迷</h4><p>由于不是压感操作而是采用触控，所以操作比较迷，刚开始可能会因为不熟悉触控的位置而点下去后没什么反应，同时也做不到点按和操作同步，切歌什么的操作会有一定延迟，这一点不如<code>AirPods Pro</code></p><h4 id="耳机莫名其妙没声音"><a href="#耳机莫名其妙没声音" class="headerlink" title="耳机莫名其妙没声音"></a>耳机莫名其妙没声音</h4><p>有时候（极小几率）不知道为什么刚刚把耳机从充电盒里拿出来戴上然后开音乐会没声音，而且手机显示已连接。但只要重新放回充电盒再拿出来就没问题，也不知道为什么。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>Anker Liberty Air 2 Pro</code>这款耳机CP值非常高，用料扎实、价格实惠。它的素质吊打一千元以下所有耳机，音质方面有HearID的加持下能赶上大法的<code>WH-H900n</code>，这方面吊锤<code>AirPods Pro</code>。<br>还是那句话：<strong>如果你不是对音频格式、比特率、采样等数据有着无与伦比的执念的发烧友，以及追求超低延迟的FPS、音乐游戏还非要戴无线蓝牙耳机的玩家，那么这款耳机就非常适合你。无论你用的是iPhone还是Android。</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>推荐</tag>
      
      <tag>耳机</tag>
      
      <tag>评测</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>subconverter 订阅转换及搭配 clash 使用教程</title>
    <link href="/2021/05/12/Linux/tutorial/subconverter/"/>
    <url>/2021/05/12/Linux/tutorial/subconverter/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>其实subconverter我已经用了一年多了，最近考完单招考试（由于今年压力很大所以其实爹妈还是强烈要求我准备高考），同时对自己的订阅做了优化，所以就趁这个机会记录下我的使用心得。<br><strong>注意：由于平时并不使用windows系统的电脑所以这里只介绍subconverter在Linux下的部署方法</strong></p><span id="more"></span><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h4 id="硬件部分"><a href="#硬件部分" class="headerlink" title="硬件部分"></a>硬件部分</h4><ul><li>电脑一台（啥都行，Linux、Mac、Windows都可以），手机也行。</li></ul><h4 id="软件部分"><a href="#软件部分" class="headerlink" title="软件部分"></a>软件部分</h4><ul><li><a href="https://github.com/tindy2013/subconverter">subconverter</a></li><li><a href="https://github.com/lzdnico/subconverteriniexample">subconverteriniexample</a></li><li><a href="https://github.com/Loyalsoldier/clash-rules">clash-rules</a></li><li><a href="https://github.com/Dreamacro/clash">Clash</a>&#x2F;<a href="https://github.com/yichengchen/clashX">ClashX</a>（MacOS使用）&#x2F;<a href="https://github.com/Fndroid/clash_for_windows_pkg">Clash for Windows</a>&#x2F;<a href="https://github.com/Kr328/ClashForAndroid">Clash for Android</a></li><li><a href="https://www.urlencoder.org/">URLEncode</a></li></ul><h2 id="subconverter搭建"><a href="#subconverter搭建" class="headerlink" title="subconverter搭建"></a>subconverter搭建</h2><p>由于本人不使用<a href="https://github.com/CareyWang/sub-web">subweb</a>，所以这里只介绍无可视化界面的subconverter如何搭建，如果你希望使用<a href="https://github.com/CareyWang/sub-web">subweb</a>，可以移步其<a href="https://github.com/CareyWang/sub-web">项目地址</a>参照官方文档操作。</p><h3 id="下载subconverter压缩包"><a href="#下载subconverter压缩包" class="headerlink" title="下载subconverter压缩包"></a>下载subconverter压缩包</h3><p>首先使用ssh连接Linux服务器或在本地打开终端<br>从subconverter项目的<a href="https://github.com/tindy2013/subconverter/releases/tag/v0.6.4">Releases</a>找到自己机器适用的压缩包（这里以<code>subconverter_linux64.tar.gz </code>为例）<br>如果你使用的是Linux64位的操作系统那么可以完全照抄以下操作</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir &#x2F;home&#x2F;sub     # 创建一个文件夹cd &#x2F;home&#x2F;sub   # 进入#&#x2F;home&#x2F;sub文件夹wget https:&#x2F;&#x2F;github.com&#x2F;tindy2013&#x2F;subconverter&#x2F;releases&#x2F;download&#x2F;v0.6.4&#x2F;subconverter_linux64.tar.gz     # 下载压缩包tar -xvf subconverter_linux64.tar.gz    # 解压压缩包cd subconverter     #进入项目文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>在项目文件夹下会有一个叫<code>pref.ini</code>文件，如果你有特殊需求的话，请按文件中的注释自行修改，我是直接使用默认的设置的。</p><h3 id="后台运行及管理"><a href="#后台运行及管理" class="headerlink" title="后台运行及管理"></a>后台运行及管理</h3><p>这里使用<code>pm2</code>来管理和后台运行</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">wget -qO- https:&#x2F;&#x2F;getpm2.com&#x2F;install.sh | bash     # 安装pm2pm2 start subconverter   # 启动subconverterpm2 startup  # 生成启动脚本pm2 save    # 生成启动脚本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>到此，部署就全部完成了，现在你可以通过访问<code>http://主机名:25500</code>来使用。你也可以搭配nginx反向代理上证书使用。</p><h2 id="subconverter使用"><a href="#subconverter使用" class="headerlink" title="subconverter使用"></a>subconverter使用</h2><p>如果你没有别的特殊要求，到这里就可以直接使用了<br>这里以本地搭建并使用为例，IP&#x2F;域名请自行根据实际情况进行替换   </p><h3 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h3><p>基础使用的话我们按照官方的最基本的来就行了，具体支持哪些类型的转换可以参考官方文档的<a href="https://github.com/tindy2013/subconverter/blob/master/README-cn.md#%E6%94%AF%E6%8C%81%E7%B1%BB%E5%9E%8B">支持列表</a><br>这里我给出基础使用方式的链接格式，按实际情况照抄就行<code>http://主机名:25500/sub?target=输出格式&amp;url=机场订阅链接或节点链接</code><br>输出格式的话请参照官方文档<a href="https://github.com/tindy2013/subconverter/blob/master/README-cn.md#%E6%94%AF%E6%8C%81%E7%B1%BB%E5%9E%8B">支持列表</a>中的参数填入,例如要使用clash，那么<code>target=</code>后面的参数就要填入<code>clash</code>；而如果你要使用的是ios上的Surge 4，那么就填入<code>surge&amp;ver=4</code><br><strong>同时要注意，机场订阅链接需经过<a href="https://www.urlencoder.org/">URLEncode</a>转换才能使用，例如订阅链接为<code>https://abc.xyz/efg=1</code>那么就要通过<a href="https://www.urlencoder.org/">URLEncode</a>转换为<code>https%3A%2F%2Fabc.xyz%2Fefg%3D1</code>才能使用</strong><br><img src="https://pic.imgdb.cn/item/609bca75d1a9ae528ff3337d.png"><br>所以，当我们使用的代理软件是<code>clash</code>，订阅链接为<code>https://abc.xyz/efg=1</code>，subconverter部署在本机（127.0.0.1)，同时不需要其他自定义设置的时候订阅链接就为<code>http://127.0.0.1:25500/sub?target=clash&amp;url=https%3A%2F%2Fabc.xyz%2Fefg%3D1</code><br>如果有多个机场的节点要整合在一起怎么办？很简单，用<code>|</code>将两个机场的链接隔开即可，例如要新增一个机场的订阅节点为<code>https://xianyu.one/233</code>那么链接就变成了<code>http://127.0.0.1:25500/sub?target=clash&amp;url=https%3A%2F%2Fabc.xyz%2Fefg%3D1|https%3A%2F%2Fxianyu.one%2F233</code></p><h3 id="进阶使用"><a href="#进阶使用" class="headerlink" title="进阶使用"></a>进阶使用</h3><p>学会了简单的使用，对于爱折腾，同时对节点有要求的朋友来说还是不够的，比如有些机场提供高倍率节点而我们希望把这些节点排除不用怎么办，在本节中会讲到。<br>首先我们要理解以下用于订阅转换的这个链接的结构，还是以上面提到的<code>http://127.0.0.1:25500/sub?target=clash&amp;url=https%3A%2F%2Fabc.xyz%2Fefg%3D1</code>为例，我们将其拆分为以下几个部分<br><code>http://127.0.0.1:25500/sub?</code>   <code>target=clash</code>  <code>&amp;</code>  <code>url=https%3A%2F%2Fabc.xyz%2Fefg%3D1</code><br>现在是不是一目了然？<br><strong><code>http://127.0.0.1:25500/sub?</code>是我们要访问的地址，而后面如<code>target=clash</code>（即调用值为<code>clash</code>的参数<code>target</code>)、<code>url=https%3A%2F%2Fabc.xyz%2Fefg%3D1</code>（即调用值为<code>https%3A%2F%2Fabc.xyz%2Fefg%3D1</code>的参数<code>url</code>），而<code>&amp;</code>为各参数间使用的连接符号</strong><br>理解了订阅转换链接的结构，解决上面提到的问题的思路就很明朗了。我们只需要在后面加入相应参数并使用<code>&amp;</code>连接即可。</p><h4 id="参数exclude-–-节点排除"><a href="#参数exclude-–-节点排除" class="headerlink" title="参数exclude – 节点排除"></a>参数exclude – 节点排除</h4><p>当我们想排除某一些节点时，就需要在转换链接上加入参数<code>exclude</code>,同样的，我们筛选使用的关键词也需要经过<a href="https://www.urlencoder.org/">URLEncode</a>转换<br>例如我们不想使用节点名称中带有<code>高倍率</code>的节点，那么我们只需要将<code>高倍率</code>通过<a href="https://www.urlencoder.org/">URLEncode</a>转化为<code>%E9%AB%98%E5%80%8D%E7%8E%87</code>再将此字符串填在参数<code>exclude</code>后即可<br>放入转换链接就变成了<code>http://127.0.0.1:25500/sub?target=clash&amp;exclude=%E9%AB%98%E5%80%8D%E7%8E%87&amp;url=https%3A%2F%2Fabc.xyz%2Fefg%3D1</code><br>为了方便查看和理解，我再将此链接拆开，变成以下形式方便大家查看<br><code>http://127.0.0.1:25500/sub?</code>  <code>target=clash</code>  <code>&amp;</code>  <code>exclude=%E9%AB%98%E5%80%8D%E7%8E%87</code>   <code>&amp;</code>  <code>url=https%3A%2F%2Fabc.xyz%2Fefg%3D1</code><br>那么如果我们需要筛选多个关键词怎么办呢？其实也很简单，在关键词之间加上<code>|</code>隔开即可，比如要筛选掉<code>高倍率</code>、<code>新加坡</code>的节点，那么就把<code>高倍率</code>、<code>新加坡</code>放入<a href="https://www.urlencoder.org/">URLEncode</a>转换为<code>%E9%AB%98%E5%80%8D%E7%8E%87</code>和<code>%E6%96%B0%E5%8A%A0%E5%9D%A1</code>之后，再用<code>|</code>隔开放到<code>exclude</code>参数后面就行了<br>其他参数可以依照官方文档中的<a href="https://github.com/tindy2013/subconverter/blob/master/README-cn.md#%E8%B0%83%E7%94%A8%E8%AF%B4%E6%98%8E-%E8%BF%9B%E9%98%B6">调用说明</a>自行添加即可</p><h2 id="subconverter程序自定义"><a href="#subconverter程序自定义" class="headerlink" title="subconverter程序自定义"></a>subconverter程序自定义</h2><p>有些时候，我们可能想换换emoji（有够无聊）或者自定义config文件进行分流或节点分组时我们就需要对subconverter进行一些修改了</p><h3 id="修改emoji"><a href="#修改emoji" class="headerlink" title="修改emoji"></a>修改emoji</h3><p>存放国旗emoji的文件在<code>subconverter/snippets/emoji.txt</code>，如果你完全参照我的部署过程，那么绝对路径为<code>/home/sub/subconverter/snippets/emoji.txt</code>，如果有地方需要修改那么可以直接打开这个文件进行修改。<br>其他比如节点分组之类的emoji会在下一节讲的config文件中出现，可以通过改config文件中的emoji修改节点分组的emoji</p><h3 id="自定义config"><a href="#自定义config" class="headerlink" title="自定义config"></a>自定义config</h3><p>如果我们对默认的节点组不满意，或是对分流效果不满意，那么我们可以通过调用其他config文件优化我们得到的配置文件，在<code>subconverter</code>根目录下的<code>config</code>文件夹里有预置的一些config文件，通过在链接中添加<code>config</code>参数，并指定需要使用的config文件名即可，例如使用名为<code>ACL4SSR_Online_NoReject.ini</code>的config文件，即将<code>config=ACL4SSR_Online_NoReject.ini</code>添加到转换链接中</p><h4 id="创建并使用属于自己的config文件"><a href="#创建并使用属于自己的config文件" class="headerlink" title="创建并使用属于自己的config文件"></a>创建并使用属于自己的config文件</h4><p>下面我们先来看一个配置文件的内容</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">;不要随意改变关键字，否则会导致出错;设置规则标志位surge_ruleset&#x3D;DIRECT,rules&#x2F;LocalAreaNetwork.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Unbreak.listsurge_ruleset&#x3D;🛑 全球拦截,rules&#x2F;NobyDa&#x2F;Surge&#x2F;AdRule.listsurge_ruleset&#x3D;🛑 全球拦截,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Hijacking.listsurge_ruleset&#x3D;📹 YouTube,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Media&#x2F;YouTube.listsurge_ruleset&#x3D;🎥 NETFLIX,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Media&#x2F;Netflix.listsurge_ruleset&#x3D;📺 巴哈姆特,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Media&#x2F;Bahamut.listsurge_ruleset&#x3D;🌍 国外媒体,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ConnersHua&#x2F;Profiles&#x2F;master&#x2F;Surge&#x2F;Ruleset&#x2F;GlobalMedia.listsurge_ruleset&#x3D;🌏 国内媒体,rules&#x2F;lhie1&#x2F;Surge3&#x2F;Domestic.listsurge_ruleset&#x3D;📲 电报吹水,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Telegram.listsurge_ruleset&#x3D;🔰 节点选择,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Global.listsurge_ruleset&#x3D;🍎 苹果服务,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Apple.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;China.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;NobyDa&#x2F;Surge&#x2F;Download.listsurge_ruleset&#x3D;DIRECT,[]GEOIP,CNsurge_ruleset&#x3D;🐟 漏网之鱼,[]FINAL;设置规则标志位;设置分组标志位custom_proxy_group&#x3D;🔰 节点选择&#96;select&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]DIRECTcustom_proxy_group&#x3D;📲 电报吹水&#96;select&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;(狮城|新)custom_proxy_group&#x3D;📹 YouTube&#96;select&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;🎥 NETFLIX&#96;select&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;(NF|解锁)custom_proxy_group&#x3D;📺 巴哈姆特&#96;select&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;(台)custom_proxy_group&#x3D;🌍 国外媒体&#96;select&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]DIRECTcustom_proxy_group&#x3D;🌏 国内媒体&#96;select&#96;[]DIRECT&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低custom_proxy_group&#x3D;🍎 苹果服务&#96;select&#96;[]DIRECT&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;🛑 全球拦截&#96;select&#96;[]REJECT&#96;[]DIRECTcustom_proxy_group&#x3D;🐟 漏网之鱼&#96;select&#96;🔰 节点选择&#96;select&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]DIRECTcustom_proxy_group&#x3D;✈ 手动选择&#96;select&#96;.*custom_proxy_group&#x3D;✈ 延迟最低&#96;url-test&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;✈ 故障切换&#96;fallback&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500;设置分组标志位<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>很明显，它分为两个大的版块：<code>surge_ruleset=</code>（规则集）、<code>custom_proxy_group=</code>（节点组）</p><h5 id="surge-ruleset"><a href="#surge-ruleset" class="headerlink" title="surge_ruleset&#x3D;"></a>surge_ruleset&#x3D;</h5><p>这一部分指<code>=</code>后指定的是我们所要分类的规则集，以<code>surge_ruleset=🎥 NETFLIX,rules/ConnersHua/Surge/Ruleset/Media/Netflix.list</code>为例</p><blockquote><p><code>🎥 NETFLIX</code>为规则集的名称<br><code>rules/ConnersHua/Surge/Ruleset/Media/Netflix.list</code>为规则集所在的文件，本地的规则集存在于<code>subconverter</code>根目录下的<code>rules</code>文件夹中，如果你有自己的规则集文件，那么可以放在此文件夹下并以<code>rules/xxx.list</code>的形式填入config文件中。除了使用本地的规则集外，还能使用互联网上的在线规则集</p><ul><li><a href="https://github.com/lzdnico/subconverteriniexample">subconverteriniexample</a></li><li><a href="https://github.com/Loyalsoldier/clash-rules">clash-rules</a></li></ul></blockquote><p>这两个就是规则及相关的项目，需要的朋友可以自行查阅并引用</p><h5 id="custom-proxy-group"><a href="#custom-proxy-group" class="headerlink" title="custom_proxy_group&#x3D;"></a>custom_proxy_group&#x3D;</h5><p>这个是用来分节点组使用的，比如我想把节点中的台湾地区节点单独分成一组使用，那么就可以这样写</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">custom_proxy_group&#x3D;🇹🇼 台湾地区&#96;url-test&#96;(台|新)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>同样为方便，我将其拆开<br><code>custom_proxy_group=</code> <code>🇹🇼 台湾地区</code>  <code>url-test</code>  <code>(台|新)</code>  <code>http://www.gstatic.com/generate_204</code> <code>500</code><br><strong>由于&#96;和markdown的代码块语法冲突所以打不出来，请自行脑补</strong></p><ul><li><code>🇹🇼 台湾地区</code> 是节点组名</li><li><code>url-test</code>是节点选择的方式即选择延迟最低的节点，其他还有例如<code>fallback</code>（故障切换）、<code>select</code>（手动选择）等方式</li><li><code>(台|新)</code>当中用<code>|</code>隔开的即为要筛选的关键词</li></ul><p><code>fallback</code>、<code>url-test</code>要搭配<br> <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><br> 使用（后面这段用于检测节点延迟）</p><h4 id="我的解决方案"><a href="#我的解决方案" class="headerlink" title="我的解决方案"></a>我的解决方案</h4><p> 下面分享我使用的节点方案，如果不想折腾可以使用我提供的文件内容，新建一个ini文件放入<code>config</code>文件夹中调用<br> A方案<br> <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">;不要随意改变关键字，否则会导致出错;设置规则标志位surge_ruleset&#x3D;DIRECT,rules&#x2F;LocalAreaNetwork.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Unbreak.listsurge_ruleset&#x3D;🛑 全球拦截,rules&#x2F;NobyDa&#x2F;Surge&#x2F;AdRule.listsurge_ruleset&#x3D;🛑 全球拦截,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Hijacking.listsurge_ruleset&#x3D;📹 YouTube,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Media&#x2F;YouTube.listsurge_ruleset&#x3D;🎥 NETFLIX,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Media&#x2F;Netflix.listsurge_ruleset&#x3D;📺 巴哈姆特,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Media&#x2F;Bahamut.listsurge_ruleset&#x3D;🌍 国外媒体,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ConnersHua&#x2F;Profiles&#x2F;master&#x2F;Surge&#x2F;Ruleset&#x2F;GlobalMedia.listsurge_ruleset&#x3D;🌏 国内媒体,rules&#x2F;lhie1&#x2F;Surge3&#x2F;Domestic.listsurge_ruleset&#x3D;📲 电报吹水,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Telegram.listsurge_ruleset&#x3D;🔰 节点选择,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Global.listsurge_ruleset&#x3D;🍎 苹果服务,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Apple.listsurge_ruleset&#x3D;☁️ OneDrive,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;OneDrive.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;China.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;NobyDa&#x2F;Surge&#x2F;Download.listsurge_ruleset&#x3D;DIRECT,[]GEOIP,CNsurge_ruleset&#x3D;🐟 漏网之鱼,[]FINAL;设置规则标志位;设置分组标志位custom_proxy_group&#x3D;🔰 节点选择&#96;select&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲通用&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]DIRECTcustom_proxy_group&#x3D;✈ 手动选择&#96;select&#96;.*custom_proxy_group&#x3D;📲 电报吹水&#96;select&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;📹 YouTube&#96;select&#96;[]🌏 亚洲通用&#96;[]🌍 欧洲及中东地区&#96;[]🔰 节点选择&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;🎥 NETFLIX&#96;select&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;📺 巴哈姆特&#96;select&#96;[]🇹🇼 台湾地区&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;🌍 国外媒体&#96;select&#96;[]🔰 节点选择&#96;[]🌏 亚洲通用&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]DIRECTcustom_proxy_group&#x3D;🌏 国内媒体&#96;select&#96;[]DIRECT&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低custom_proxy_group&#x3D;🍎 苹果服务&#96;select&#96;[]DIRECT&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;☁️ OneDrive&#96;select&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;DIRECTcustom_proxy_group&#x3D;🛑 全球拦截&#96;select&#96;[]REJECT&#96;[]DIRECTcustom_proxy_group&#x3D;🐟 漏网之鱼&#96;select&#96;[]🌏 亚洲通用&#96;[]🌍 欧洲及中东地区&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🔰 节点选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;DIRECTcustom_proxy_group&#x3D;✈ 延迟最低&#96;url-test&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;✈ 故障切换&#96;fallback&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🌏 亚洲通用&#96;url-test&#96;(台|新|日|韩)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🌍 欧洲及中东地区&#96;url-test&#96;(英|法|德|阿姆斯特丹|荷兰|土耳其|比利时|瑞士)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇺🇸🇨🇦 北美通用&#96;url-test&#96;(美|加拿大)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇹🇼🇸🇬 中文地区&#96;url-test&#96;(台|新)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇹🇼 台湾地区&#96;url-test&#96;(台|新)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500;设置分组标志位<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><br> B方案<br> <figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">;不要随意改变关键字，否则会导致出错;设置规则标志位surge_ruleset&#x3D;DIRECT,rules&#x2F;LocalAreaNetwork.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Unbreak.listsurge_ruleset&#x3D;🛑 全球拦截,rules&#x2F;NobyDa&#x2F;Surge&#x2F;AdRule.listsurge_ruleset&#x3D;🛑 全球拦截,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Hijacking.listsurge_ruleset&#x3D;📺 巴哈姆特,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Media&#x2F;Bahamut.listsurge_ruleset&#x3D;🎯 全球直连,rules&#x2F;ACL4SSR&#x2F;Clash&#x2F;ChinaDomain.listsurge_ruleset&#x3D;🎯 全球直连,rules&#x2F;ACL4SSR&#x2F;Clash&#x2F;ChinaCompanyIp.listsurge_ruleset&#x3D;🎯 全球直连,[]GEOIP,CNsurge_ruleset&#x3D;🎯 全球直连,&#x2F;rules&#x2F;ACL4SSR&#x2F;Clash&#x2F;lancidr.txtsurge_ruleset&#x3D;🔰 节点选择,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Global.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;China.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;NobyDa&#x2F;Surge&#x2F;Download.listsurge_ruleset&#x3D;DIRECT,[]GEOIP,CNsurge_ruleset&#x3D;🐟 漏网之鱼,[]FINAL;设置规则标志位;设置分组标志位custom_proxy_group&#x3D;🔰 节点选择&#96;select&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲通用&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]DIRECTcustom_proxy_group&#x3D;✈ 手动选择&#96;select&#96;.*custom_proxy_group&#x3D;📺 巴哈姆特&#96;select&#96;[]🇹🇼 台湾地区&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;(台)custom_proxy_group&#x3D;🎯 全球直连&#96;select&#96;[]DIRECT&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低custom_proxy_group&#x3D;🛑 全球拦截&#96;select&#96;[]REJECT&#96;[]DIRECTcustom_proxy_group&#x3D;🐟 漏网之鱼&#96;select&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🌏 亚洲通用&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]DIRECTcustom_proxy_group&#x3D;✈ 延迟最低&#96;url-test&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;✈ 故障切换&#96;fallback&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🌏 亚洲通用&#96;url-test&#96;(台|新|日|韩)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🌍 欧洲及中东地区&#96;url-test&#96;(英|法|德|阿姆斯特丹|荷兰|土耳其|比利时|瑞士)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇺🇸🇨🇦 北美通用&#96;url-test&#96;(美|加拿大)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇹🇼🇸🇬 中文地区&#96;url-test&#96;(台|新)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇹🇼 台湾地区&#96;url-test&#96;(台)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><br>C方案</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">;不要随意改变关键字，否则会导致出错;设置规则标志位surge_ruleset&#x3D;DIRECT,rules&#x2F;LocalAreaNetwork.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Unbreak.listsurge_ruleset&#x3D;🛑 全球拦截,rules&#x2F;NobyDa&#x2F;Surge&#x2F;AdRule.listsurge_ruleset&#x3D;🛑 全球拦截,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Hijacking.listsurge_ruleset&#x3D;Google,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Loyalsoldier&#x2F;clash-rules&#x2F;release&#x2F;google.txtsurge_ruleset&#x3D;📺 巴哈姆特,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Media&#x2F;Bahamut.listsurge_ruleset&#x3D;🌍 国外媒体,rules&#x2F;GlobalMedia.listsurge_ruleset&#x3D;🌏 全球直连,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Loyalsoldier&#x2F;clash-rules&#x2F;release&#x2F;direct.txtsurge_ruleset&#x3D;🌏 全球直连,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Loyalsoldier&#x2F;clash-rules&#x2F;release&#x2F;cncidr.txtsurge_ruleset&#x3D;🌏 全球直连,&#x2F;rules&#x2F;ACL4SSR&#x2F;Clash&#x2F;lancidr.txtsurge_ruleset&#x3D;🔰 节点选择,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;Global.listsurge_ruleset&#x3D;🍎 苹果服务,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Loyalsoldier&#x2F;clash-rules&#x2F;release&#x2F;apple.txtsurge_ruleset&#x3D;🍎 苹果服务,https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Loyalsoldier&#x2F;clash-rules&#x2F;release&#x2F;icloud.txtsurge_ruleset&#x3D;☁️ OneDrive,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;OneDrive.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;ConnersHua&#x2F;Surge&#x2F;Ruleset&#x2F;China.listsurge_ruleset&#x3D;DIRECT,rules&#x2F;NobyDa&#x2F;Surge&#x2F;Download.listsurge_ruleset&#x3D;DIRECT,[]GEOIP,CNsurge_ruleset&#x3D;🐟 漏网之鱼,[]FINAL;设置规则标志位;设置分组标志位custom_proxy_group&#x3D;🔰 节点选择&#96;select&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]✈ 手动选择&#96;[]🌏 亚洲通用&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🇹🇼 台湾地区&#96;[]DIRECTcustom_proxy_group&#x3D;✈ 手动选择&#96;select&#96;.*custom_proxy_group&#x3D;Google&#96;select&#96;[]🌏 亚洲通用&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;📺 巴哈姆特&#96;select&#96;[]🇹🇼 台湾地区&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;(台)custom_proxy_group&#x3D;🌍 国外媒体&#96;select&#96;[]🇹🇼🇸🇬 中文地区&#96;[]🌏 亚洲通用&#96;[]🌍 欧洲及中东地区&#96;[]🇺🇸🇨🇦 北美通用&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]DIRECTcustom_proxy_group&#x3D;🌏 国内媒体&#96;select&#96;[]DIRECT&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低custom_proxy_group&#x3D;🍎 苹果服务&#96;select&#96;[]DIRECT&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换custom_proxy_group&#x3D;☁️ OneDrive&#96;select&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]DIRECTcustom_proxy_group&#x3D;🛑 全球拦截&#96;select&#96;[]REJECT&#96;[]DIRECTcustom_proxy_group&#x3D;🐟 漏网之鱼&#96;select&#96;[]🔰 节点选择&#96;[]✈ 手动选择&#96;[]✈ 延迟最低&#96;[]✈ 故障切换&#96;[]DIRECTcustom_proxy_group&#x3D;✈ 延迟最低&#96;url-test&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;✈ 故障切换&#96;fallback&#96;.*&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🌏 亚洲通用&#96;url-test&#96;(台|新|日|韩)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🌍 欧洲及中东地区&#96;url-test&#96;(英|法|德|阿姆斯特丹|荷兰|土耳其|比利时|瑞士)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇺🇸🇨🇦 北美通用&#96;url-test&#96;(美|加拿大)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇹🇼🇸🇬 中文地区&#96;url-test&#96;(台|新)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500custom_proxy_group&#x3D;🇹🇼 台湾地区&#96;url-test&#96;(台)&#96;http:&#x2F;&#x2F;www.gstatic.com&#x2F;generate_204&#96;500;设置分组标志位<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://github.com/tindy2013/subconverter/blob/master/README-cn.md">subconverter – 在各种订阅格式之间进行转换的实用程序</a></li><li><a href="https://10101.io/2020/02/12/use-clash-proxy-provider-with-subconverter">Clash proxy-provider 搭配 subconverter 使用小记</a></li><li><a href="https://github.com/Loyalsoldier/clash-rules">clash-rules – 🦄️ 🎃 👻 Clash Premium 规则集(RULE-SET)，兼容 ClashX Pro、Clash for Windows 客户端</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>网络</tag>
      
      <tag>教程</tag>
      
      <tag>Linux</tag>
      
      <tag>代理</tag>
      
      <tag>clash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客迁移</title>
    <link href="/2021/05/09/Something/bo-ke-qian-yi/"/>
    <url>/2021/05/09/Something/bo-ke-qian-yi/</url>
    
    <content type="html"><![CDATA[<p>不知道为什么，我的hexo总会遇到各种各样的问题，所以换了<a href="https://gridea.dev/">Gridea</a>。<br>最近应该会更新。首先是订阅转换的教程，然后会更新一片游戏相关的随笔。<br>敬请期待。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>下载钉钉的直播重放</title>
    <link href="/2021/04/01/dingtalk-video-download/"/>
    <url>/2021/04/01/dingtalk-video-download/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>鸽了好久，十分抱歉。<br>不找理由，我的问题。<br>这次是因为快考试了，感觉自己快凉了，所以报了个线上辅导班，临时抱佛脚。<br>然后被迫使用钉钉。<br><br><br>作为一只仓鼠，个人爱好就是囤东西，所以直播录像也想保存下来（虽然没什么用，毕竟考试前都可以查看回放）。<br>由于管理员设置了禁止下载，所以没法直接下载好存档。<br>然后就用了以下方法抓取并下载视频了。<br><strong>注意：使用本操作下载如培训班的视频等有触及他人商业利益的东西请勿传播，尤其是不可以贩卖！！！</strong>  </p><span id="more"></span><h2 id="事前准备"><a href="#事前准备" class="headerlink" title="事前准备"></a>事前准备</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li>电脑一台（我自然是用Mac啦）</li></ul><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><ul><li><a href="https://www.telerik.com/fiddler">Fiddler</a>（这里我使用的是Fiddler Everywhere）</li><li>m3u8视频在线提取工具 <a href="https://github.com/Momo707577045/m3u8-downloader">项目地址</a> <a href="http://blog.luckly-mjw.cn/tool-show/m3u8-downloader/index.html">在线使用地址</a>（这里的话我们待会是直接使用在线地址就可以了）</li></ul><h2 id="开搞"><a href="#开搞" class="headerlink" title="开搞"></a>开搞</h2><h3 id="Fiddler安装"><a href="#Fiddler安装" class="headerlink" title="Fiddler安装"></a>Fiddler安装</h3><p><a href="https://www.telerik.com/fiddler">Fiddler</a>是一款常用的抓包工具，这里我们用它来获取视频地址<br>首先从<a href="https://www.telerik.com/fiddler">官网</a>下载工具并安装<br>然后点开软件注册并登陆<br>点击左上<code>角齿轮</code>找到<code>HTTPS</code>并安装证书（点击<code>Trust root cert1ficate</code>）然后勾选<code>Capture HTTPS traffic</code><br><img src="https://pic.imgdb.cn/item/6065dee88322e6675c0bfc9d.png" alt="设置成图中这样"><br>然后关闭软件重启</p><h3 id="抓取视频地址"><a href="#抓取视频地址" class="headerlink" title="抓取视频地址"></a>抓取视频地址</h3><p>保证Fiddler打开后首先筛选要抓的内容<br>点击<code>URL</code>后面的三个点，并如图中一样填入<code>m3u8</code><br><img src="https://pic.imgdb.cn/item/6065dfdd8322e6675c0d09e7.png"><br>之后点击<code>Filter</code><br><br><br>接下去就可以开始抓视频了<br><br><br>打开钉钉，并点击要回放的视频，然后回到Fiddler中之后会发现出现了一些网址，这时候说明成功抓到了<br><img src="https://pic.imgdb.cn/item/6065e09a8322e6675c0dc8cb.png"><br> 图中所示的四条实色的地址便是接下去我们所需要使用的视频地址（<strong>注意：这里有四条是因为我抓了两个视频并且在没有关Fiddler的情况下下载了两个视频所以有四个，正常情况下操作到这一步是只会有一条实色地址出现的</strong>）<br> <br><br>选中需要下载的视频并右键点击，找到<code>Copy</code>并选则<code>URL</code><br><img src="https://pic.imgdb.cn/item/6065e1b38322e6675c0ee450.png"></p><h3 id="下载视频"><a href="#下载视频" class="headerlink" title="下载视频"></a>下载视频</h3><p>接下去打开在线<code>m3u8视频在线提取工具</code><a href="http://blog.luckly-mjw.cn/tool-show/m3u8-downloader/index.html">在线使用地址</a><br>粘贴刚刚我们抓到的地址就可以下载了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AdGuard Home部署及使用指南</title>
    <link href="/2021/01/29/Linux/tutorial/AdGuard-Home/"/>
    <url>/2021/01/29/Linux/tutorial/AdGuard-Home/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>其实AdGuard Home我用了好久了，挺好用的，只是之前一直没写部署及使用指南。</p><span id="more"></span><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>AdGuard Home的部署非常简单，基本没什么难度。这里只介绍Linux的安装。</p><ul><li>服务器一台（什么都行，机房的服务器和树莓派我都在用）</li><li><a href="https://github.com/AdguardTeam/AdGuardHome/releases">AdGuard Home</a></li></ul><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>首先我们需要从AdGuard Home的<a href="https://github.com/AdguardTeam/AdGuardHome/releases">release</a>下载对应机器的安装包，如果服务器在国内的话这里建议先在能魔法上网的机器上把安装包下好再传到机器上。<br>例如  </p><ul><li>树莓派使用对应的安装包为<code>AdGuardHome_linux_armv7.tar.gz</code></li><li>Linux服务器一般选择<code>AdGuardHome_linux_amd64.tar.gz</code></li></ul><h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><p>首先通过SSH连接服务器，创建一个文件夹并进入该文件夹</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir &#x2F;home&#x2F;dnscd &#x2F;home&#x2F;dns<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h3 id="将安装包放到此处"><a href="#将安装包放到此处" class="headerlink" title="将安装包放到此处"></a>将安装包放到此处</h3><p>以下介绍两种方案</p><h4 id="从Linux-Mac传送"><a href="#从Linux-Mac传送" class="headerlink" title="从Linux&#x2F;Mac传送"></a>从Linux&#x2F;Mac传送</h4><p>这里使用scp命令</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">scp 文件绝对路径 用户名@服务器ip:&#x2F;home&#x2F;dns<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="直接下载到服务器"><a href="#直接下载到服务器" class="headerlink" title="直接下载到服务器"></a>直接下载到服务器</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">wget 文件链接（例如https:&#x2F;&#x2F;github.com&#x2F;AdguardTeam&#x2F;AdGuardHome&#x2F;releases&#x2F;download&#x2F;v0.105.0-beta.1&#x2F;AdGuardHome_linux_amd64.tar.gz）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="解压并安装部署"><a href="#解压并安装部署" class="headerlink" title="解压并安装部署"></a>解压并安装部署</h3><p>解压压缩包</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">tar xvf 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>进入文件夹</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cd AdGuardHome<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>部署</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo .&#x2F;AdGuardHome -s install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="管理命令"><a href="#管理命令" class="headerlink" title="管理命令"></a>管理命令</h4><blockquote><ul><li><code>AdGuardHome -s uninstall</code> - 卸载AdGuard Home服务。</li><li><code>AdGuardHome -s start</code> - 启动服务。</li><li><code>AdGuardHome -s stop</code> - 停止服务。</li><li><code>AdGuardHome -s restart</code> - 重新启动服务。</li><li><code>AdGuardHome -s status</code> - 显示当前的服务状态。</li></ul></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>通过浏览器访问<code>http://服务器ip:3000</code>进行初始化设置<br><strong>注意：在设置端口时，请务必不要将其作为本机的dns服务器，使用AdGuard Home作为服务器的dns服务器会导致无法续签SSL证书或者有可能导致无法通过<code>apt-get</code>安装应用。选择IP时务必只选择本机外网IP或内网IP（别的如127.0.0.1）不要选择。</strong><br><br><br>初始化完成后即可开始使用</p><h4 id="常规设置的注意事项"><a href="#常规设置的注意事项" class="headerlink" title="常规设置的注意事项"></a>常规设置的注意事项</h4><p>在常规设置底下有个<code>日志配置</code>的设置，这里如果服务器硬盘空间小的话不建议把保留时间开太长</p><h4 id="DNS-设置"><a href="#DNS-设置" class="headerlink" title="DNS 设置"></a>DNS 设置</h4><h5 id="上游-DNS-服务器设置"><a href="#上游-DNS-服务器设置" class="headerlink" title="上游 DNS 服务器设置"></a>上游 DNS 服务器设置</h5><p>2021年初，国内开始了针对DoT端口（853端口）进行封锁，包括国内机房的端口也无法正常使用。所以这里<strong>如果需要填写海外无污染DNS的话，请使用DoH形式的DNS服务。</strong><br>这里推荐cloudflare的DoT作为上游</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">tls:&#x2F;&#x2F;1dot1dot1dot1.cloudflare-dns.comtls:&#x2F;&#x2F;1.1.1.1https:&#x2F;&#x2F;cloudflare-dns.com&#x2F;dns-queryhttps:&#x2F;&#x2F;1.1.1.1&#x2F;dns-query<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>其他公共DNS（国内的都有污染，国外的国内基本用不了），可以参考以下列表或者维基百科（<a href="https://zh.wikipedia.org/wiki/DNS_over_HTTPS">DoH</a>&#x2F;<a href="https://zh.wikipedia.org/wiki/DNS_over_TLS">DoT</a>）</p><h6 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h6><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;dns.google&#x2F;dns-queryhttps:&#x2F;&#x2F;dns.google&#x2F;resolvehttps:&#x2F;&#x2F;[2001:4860:4860::64]&#x2F;dns-queryhttps:&#x2F;&#x2F;[2001:4860:4860::6464]&#x2F;dns-query8.8.8.88.8.4.42001:4860:4860::88882001:4860:4860::8844<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h6 id="AdGuard"><a href="#AdGuard" class="headerlink" title="AdGuard"></a>AdGuard</h6><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;dns-unfiltered.adguard.com&#x2F;dns-queryhttps:&#x2F;&#x2F;dns.adguard.com&#x2F;dns-queryhttps:&#x2F;&#x2F;dns-family.adguard.com&#x2F;dns-query<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h6 id="阿里巴巴DNS"><a href="#阿里巴巴DNS" class="headerlink" title="阿里巴巴DNS"></a>阿里巴巴DNS</h6><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">223.5.5.5223.6.6.62400:3200::12400:3200:baba::1https:&#x2F;&#x2F;223.5.5.5&#x2F;dns-queryhttps:&#x2F;&#x2F;223.6.6.6&#x2F;dns-queryhttps:&#x2F;&#x2F;[2400:3200::1]&#x2F;dns-queryhttps:&#x2F;&#x2F;[2400:3200:baba::1]&#x2F;dns-query<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h6 id="QUAD9-DNS"><a href="#QUAD9-DNS" class="headerlink" title="QUAD9 DNS"></a>QUAD9 DNS</h6><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;dns.quad9.net&#x2F;dns-queryhttps:&#x2F;&#x2F;dns9.quad9.net&#x2F;dns-queryhttps:&#x2F;&#x2F;dns10.quad9.net&#x2F;dns-queryhttps:&#x2F;&#x2F;dns11.quad9.net&#x2F;dns-query9.9.9.9149.112.112.1122620:fe::fe2620:fe::9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h6 id="Open-DNS"><a href="#Open-DNS" class="headerlink" title="Open DNS"></a>Open DNS</h6><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;doh.opendns.comhttps:&#x2F;&#x2F;doh.familyshield.opendns.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><strong>注意：绝对不要使用360的DNS服务</strong></p><h4 id="加密设置"><a href="#加密设置" class="headerlink" title="加密设置"></a>加密设置</h4><p>证书部分我选择的方法是用宝塔面板申请Let’s Encrypt的证书然后把内容粘贴到设置里。这种方法非常适合我这样的懒狗和菜鸡使用。</p><h4 id="过滤器设置"><a href="#过滤器设置" class="headerlink" title="过滤器设置"></a>过滤器设置</h4><h5 id="DNS封锁清单"><a href="#DNS封锁清单" class="headerlink" title="DNS封锁清单"></a>DNS封锁清单</h5><p>由于屏蔽广告会导致很多国内的服务无法使用，所以我并不推荐用封锁清单来对付国内的流氓，以下仅列出一些比较好的清单，并不推荐使用。</p><blockquote><ul><li><a href="https://github.com/vokins/yhosts">https://github.com/vokins/yhosts</a></li><li><a href="https://github.com/neoFelhz/neohosts">https://github.com/neoFelhz/neohosts</a></li><li><a href="https://github.com/Diumo/ADhosts">https://github.com/Diumo/ADhosts</a></li><li><a href="https://github.com/StevenBlack/hosts">https://github.com/StevenBlack/hosts</a></li></ul></blockquote><h5 id="自定义过滤规则"><a href="#自定义过滤规则" class="headerlink" title="自定义过滤规则"></a>自定义过滤规则</h5><p>这里提供一份我个人的屏蔽列表，主要封锁国内的一些流氓软件及对安全构成威胁的域名</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">||360.cn^||360.com^||so.cn^||so.com^||360buyimg.com^||flux.hcdn.iqiyi.com^||policy.video.iqiyi.com^||api.map.baidu.com^||ps.map.baidu.com^||sv.map.baidu.com^||offnavi.map.baidu.com^||newvector.map.baidu.com^||ulog.imap.baidu.com^||newloc.map.n.shifen.com^||ris­ing.com^||ris­ing.net^||ris­ing.org^||king­soft.com^||king­soft.net^||king­soft.org^||duba.com^||duba.net^||duba.org^||xin­dubawukong.com^||xin­dubawukong.net.^||xin­dubawukong.org^||jin­shan­duba.com^||jin­shan­duba.net^||jin­shan­duba.org^||cn­nic.net.cn^||xun­lei.com^||hao123.com^||newloc.map.n.shifen.com^||rising.com.cn^||ijinshan.com^||verycd.com^||dianlv.com^||emule.org.cn^||xunlei.com^||kankan.com^||sandai.net^||gougou.com^||gigaget.com^||kuaishou.com^||gifshow.com^||guanjia.qq.com^<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>DNS被创造的初期，并没有考虑到安全的因素，所以未加密的DNS服务很容易被恶意使用，例如DNS劫持、DNS污染等。<br>相信身处中国大陆的人应该深有体会。<br>透过AdGuard Home，我们可以将DNS服务掌握在自己的手里，自己选择该污染那些域名，并使用更安全的DNS服务。<br>别的不好说，这里就不说了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>网络</tag>
      
      <tag>教程</tag>
      
      <tag>DNS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello 2021</title>
    <link href="/2021/01/09/Something/hello-2021/"/>
    <url>/2021/01/09/Something/hello-2021/</url>
    
    <content type="html"><![CDATA[<p>2021年来了。<br>2020年过了。<br>去年遇到了很多事，<br>大概会改变我这一生的轨迹。<br>希望21年能达成自己的目标，考上大学<br>做更多自己喜欢的事。<br>乐之。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>无题随笔</title>
    <link href="/2020/11/12/Something/bt-connected/"/>
    <url>/2020/11/12/Something/bt-connected/</url>
    
    <content type="html"><![CDATA[<p><img src="https://pic.imgdb.cn/item/5fad54701cd1bbb86b66924b.png"><br>想不到这么快会更新文章。  </p><br><p>今天晚上不知道怎么的就是觉得不占满带宽睡不着觉，于是起身找番屯着（本人有轻度仓鼠症，喜欢的视频都会本地备份）。<br>由于生肉原盘品质最高的缘故（主要冲着有番剧的cd去的），所以选择了它。<br>如上图所示，直接跑满带宽。感谢世界各地的hxd   </p><br><p><strong>至少在下盗版盘这事上，全世界人民联合起来了。</strong></p><br><p>2020年是不平凡的一年，东亚这边一个自认为崛起的地方和大洋彼岸某个希望再次伟大的地方闹得不可开交；东亚某区域形势急剧恶化，某国贩卖军火顺便隔岸观火，而某地则频频军演大秀肌肉。何必呢。   </p><p>我一毫无政治素养、道德底线、家国情怀的刁民只是觉得很可笑也很可悲。   </p><br><p>还记得某部叫做《我的xx学院》的番剧，因</p><blockquote><p>2020年2月3日發售的《週刊少年Jump》中，該作第259話首次公布一位進行非人道人體試驗的反派角色的真實姓名為「志賀丸太」（在漫畫中標音為しが まるた，Shiga Maruta）。2月2日（正版漫畫發布日前），一些韓國讀者在推特上發表評論認為該角色的命名與日本侵華戰爭中侵華日軍731部隊有關並提出抗議，引起相關討論，隨後被中國大陸媒體報導。<br>Maruta（マルタ，中文常音譯為「馬路大」），該詞在日本語中日常翻譯為「圓木」。在日本侵華戰爭期間，該詞曾被作為731部隊對人體實驗受害者的非人化稱呼。而「志賀」則是731部隊使用的一種病菌</p></blockquote><p>最终导致中国大陆的网络平台集体下架此番剧，更好玩的是<strong>原本这部番在睿站评分9+，一夜之间刷到三分以下</strong>。<br>这个事情我怎么想的无可奉告，大家各自保留意见吧。</p><br><p>因为上面一段的缘故，不知道怎么结尾。就这样吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过docker快速搭建Tiny Tiny RSS服务器 &amp; RSS使用指北</title>
    <link href="/2020/11/07/Linux/tutorial/ttrss/"/>
    <url>/2020/11/07/Linux/tutorial/ttrss/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>好久不见，托失眠的福，我又来更新文章了。<br>早上大概两点就醒了，没事干就折腾了一下博客，把该更新的都更新了。<br>这段时间我开始正式使用rss，也感受到了其吸引人的地方—-<strong>高度客制化的信息阅读</strong>。<br>在使用rss之前，我获取信息的方式必须是要手动点开某个网站，这样效率很低，用起来也很烦。rss的优势在于可以定制自己的信息获取源，在保证信息是自己感兴趣的同时更加高效。  </p><br><p>本文将会介绍利用 <a href="https://tt-rss.org/">Tiny Tiny RSS</a>、<a href="https://docs.rsshub.app/">RSSHub</a> 等工具使用RSS获取高质量的信息内容。</p><span id="more"></span><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li>一台服务器（vps即可，最好服务器在国外）</li><li>一台本地可以使用ssh连接服务器的设备</li><li>一个爱折腾的人</li></ul><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p>这里指的是服务器上应该有的软件</p><ul><li>docker</li></ul><h2 id="Tiny-Tiny-RSS服务器部署过程"><a href="#Tiny-Tiny-RSS服务器部署过程" class="headerlink" title="Tiny Tiny RSS服务器部署过程"></a>Tiny Tiny RSS服务器部署过程</h2><p>这里我们使用到的是来自<a href="https://ttrss.henry.wang/zh/#%E5%85%B3%E4%BA%8E">Awesome TTRSS</a>的docker容器。（其实不用看我的文章，官方文档对于部署和使用写的超级清楚）<br>vps使用的是Ubuntu18.04 LTS    </p><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><p>更新系统</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">apt-get -y update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>安装docker及docker-compose</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install docker-cesudo curl -L https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.21.2&#x2F;docker-compose-&#96;uname -s&#96;-&#96;uname -m&#96; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-composesudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="通过docker-compose部署Tiny-Tiny-RSS"><a href="#通过docker-compose部署Tiny-Tiny-RSS" class="headerlink" title="通过docker-compose部署Tiny Tiny RSS"></a>通过docker-compose部署Tiny Tiny RSS</h3><p><strong>注意：建议新建一个专用文件夹存放配置文件。</strong><br>如</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir &#x2F;home&#x2F;ttrsscd &#x2F;home&#x2F;ttrss<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>获取配置文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;HenryQW&#x2F;Awesome-TTRSS&#x2F;master&#x2F;docker-compose.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>通过vim编辑配置文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim docker-compose.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>文件必需修改的内容为<code>POSTGRES_PASSWORD</code>、<code>SELF_URL_PATH</code>、<code>DB_PASS</code>    </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">version: &quot;3&quot;services:  database.postgres:    image: postgres:13-alpine    container_name: postgres    environment:      - POSTGRES_PASSWORD&#x3D;此处修改为自己想要的密码 # please change the password    volumes:      - ~&#x2F;postgres&#x2F;data&#x2F;:&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data # persist postgres data to ~&#x2F;postgres&#x2F;data&#x2F; on the host    restart: always  service.rss:    image: wangqiru&#x2F;ttrss:latest    container_name: ttrss    ports:      - 8964:80    environment:      - SELF_URL_PATH&#x3D;此处修改为部署后使用的网址 # please change to your own domain      - DB_HOST&#x3D;database.postgres      - DB_PORT&#x3D;5432      - DB_NAME&#x3D;ttrss      - DB_USER&#x3D;postgres      - DB_PASS&#x3D;此处修改为自己想要的密码 # please change the password      - ENABLE_PLUGINS&#x3D;auth_internal,fever # auth_internal is required. Plugins enabled here will be enabled for all users as system plugins      - FEED_LOG_QUIET&#x3D;true    stdin_open: true    tty: true    restart: always  service.mercury: # set Mercury Parser API endpoint to &#96;service.mercury:3000&#96; on TTRSS plugin setting page    image: wangqiru&#x2F;mercury-parser-api:latest    container_name: mercury    expose:      - 3000    restart: always  service.opencc: # set OpenCC API endpoint to &#96;service.opencc:3000&#96; on TTRSS plugin setting page    image: wangqiru&#x2F;opencc-api-server:latest    container_name: opencc    environment:      - NODE_ENV&#x3D;production    expose:      - 3000    restart: always<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>修改完成后<code>esc</code>+<code>:wq</code>保存<br>部署容器</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>这里建议使用Nginx给容器反向代理，我懒所以是直接用宝塔面板做的反代。<br>如果配置文件直接是复制我上面的，那么反代时使用的端口就是<code>8964</code><br>当然你也可以自己修改配置文件中<code>ports</code>的参数调整到你想要用的端口。   </p><h2 id="Tiny-Tiny-RSS使用"><a href="#Tiny-Tiny-RSS使用" class="headerlink" title="Tiny Tiny RSS使用"></a>Tiny Tiny RSS使用</h2><p>做完刚刚的一切，接下去就可以开始正式使用了<br>浏览器中输入你设置的域名&#x2F;直接使用ip+端口号<br>默认账户：admin 密码：password<br>在偏好设置中可以修改密码等信息，也可以将语言设为中文。<br>这里建议勾选启用API的选项，以方便支持feverAPI登陆的app使用。<br><img src="https://pic.imgdb.cn/item/5fa5cb971cd1bbb86bcd590a.png"></p><h3 id="使用RSSHub获取订阅源"><a href="#使用RSSHub获取订阅源" class="headerlink" title="使用RSSHub获取订阅源"></a>使用RSSHub获取订阅源</h3><p>RSSHub这个项目涵盖了大量的订阅源，基本上你会想要订阅的源大部分都可以在这里找到，搭配浏览器插件使用更佳。<br>请自行前往网站挑选自己喜欢的源</p><h3 id="客户端选择"><a href="#客户端选择" class="headerlink" title="客户端选择"></a>客户端选择</h3><p>目前我个人的硬件配置为MacBook+Android+Chromebook，笔电这块我选择使用网页直接浏览，Android客户端推荐<a href="https://play.google.com/store/apps/details?id=com.isaiasmatewos.readably">readbly</a>，iOS不负责任但听说很好用的推荐<a href="https://reederapp.com/">reader</a></p><h3 id="利用feverAPI使用rss阅读器app"><a href="#利用feverAPI使用rss阅读器app" class="headerlink" title="利用feverAPI使用rss阅读器app"></a>利用feverAPI使用rss阅读器app</h3><p>前面提到了Tiny Tiny RSS可以使用feverAPI连接rss阅读器客户端，这里以readbly为例教学使用<br>打开软件选择fever选项<br><img src="https://pic.imgdb.cn/item/5fa5cf4a1cd1bbb86bcdb9a3.jpg" alt="打开软件选择fever选项"><br>第一个随便填，第二个填写设置中给出的链接<br><img src="https://pic.imgdb.cn/item/5fa5ce601cd1bbb86bcda153.jpg" alt="糊掉部分为需要填写的链接"><br>底下分别填写用户名和密码，填写完后点击sign in即可。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>rss可以说是很古早的东西了，但它能带给我们更加干净、适合自己的获取信息体验。这个时代的尤其是国内的资讯软件普遍很混乱，xx头条、xx新闻的版面上充斥着大量垃圾讯息。在这样一个信息爆炸的时代，更高效获取干净的讯息其实更为重要—-<strong>不要把时间浪费在看毫无用处的垃圾信息上</strong>    </p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>docker</tag>
      
      <tag>RSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>闲言碎语</title>
    <link href="/2020/08/16/Something/2020/"/>
    <url>/2020/08/16/Something/2020/</url>
    
    <content type="html"><![CDATA[<p>最近很忙。<br>估摸着要鸽好久<br>准备高复<br>回头见。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅谈魔法上网的那些事</title>
    <link href="/2020/05/27/cyber-security/"/>
    <url>/2020/05/27/cyber-security/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>相信有无数的墙内同胞会因为种种原因接触上魔法上网，甚至铤而走险使用这种违法的技术浏览违法的或者合法的网站。在此就聊聊有关这项技术背后的历史和实现原理。</p><span id="more"></span><h2 id="开篇–那些互联网的历史"><a href="#开篇–那些互联网的历史" class="headerlink" title="开篇–那些互联网的历史"></a>开篇–那些互联网的历史</h2><h3 id="中国互联网的诞生"><a href="#中国互联网的诞生" class="headerlink" title="中国互联网的诞生"></a>中国互联网的诞生</h3><p>作为一个00后，我诞生于中国互联网出现后，对于开篇，我也只是从长辈那道听途说。<br>中国互联网诞生于1994年，据说当时上网很麻烦，装“猫”都老费劲了。我的一位高中信息技术老师说，他当年接触互联网时，花了几天时间就把中国的网站看了个遍。<br>同样作为00后，我错过了网上冲浪的时代，我也错过了论坛、博客兴盛的时代，我接触中国互联网是在08年左右，但我还小，懂个屁。  </p><h3 id="网络审查的兴起"><a href="#网络审查的兴起" class="headerlink" title="网络审查的兴起"></a>网络审查的兴起</h3><p>网络审查制度随着中国互联网的诞生而来，但并非一开始就如当下一般。<br>网络审查粗略分为两块：<br>一、中国大陆境内的内部审查：企业和个人需要遵守中国的法律法规，自觉过滤掉政府不希望出现的内容，违规的企业或个人将会受到处罚。（这不是我要说的重点）<br>二、部署在中国网络国际出口的境外信息过滤机制（GFW）<br>记得当年和我爹说过百度的好，认为谷歌不好用，在那个不用魔法上网就能使用谷歌搜索的年代，我甚至不喜欢谷歌，更爱百度。回想起来真是想给自己几个大嘴巴子······<br>2014年5月27日，谷歌正式和中国普通网民说再见。正是在这年后，我开始慢慢探索向那些我不被允许访问的网站。</p><h3 id="道高一尺魔高一丈"><a href="#道高一尺魔高一丈" class="headerlink" title="道高一尺魔高一丈"></a>道高一尺魔高一丈</h3><p>随着网络审查制度的不断强化和完善，一部分人迫切的希望访问那些不存在的网站，所以希望使用魔法上网的方式站到墙头看看。  </p><h4 id="传统艺能————VPN"><a href="#传统艺能————VPN" class="headerlink" title="传统艺能————VPN"></a>传统艺能————VPN</h4><blockquote><p>虚拟私人网络（英语：Virtual Private Network，缩写：VPN）是一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。它利用隧道协议（Tunneling Protocol）来达到发送端认证、消息保密与准确性等功能。  ——wiki</p></blockquote><p>这是早期登上墙头的常用方法，也是目前一些企业正大光明上墙的办法（备案审批）。其诞生的目的是为了通信的安全而非网络审查。<br>这种通信方式很安全，但对于上墙有明显缺陷————流量特征过于明显。由于传统的VPN有这一特性所以很快便被墙精准识别了。</p><h4 id="后起之秀，当代明星————Shadowsocks类基于socks5代理的协议"><a href="#后起之秀，当代明星————Shadowsocks类基于socks5代理的协议" class="headerlink" title="后起之秀，当代明星————Shadowsocks类基于socks5代理的协议"></a>后起之秀，当代明星————Shadowsocks类基于socks5代理的协议</h4><p>2012年4月20日，Shadowsocks出现在广大人民群众的视线中， 但很快在15年原作者被迫删除了项目仓库，得益于git的特性，Shadowsocks在其他志愿者的努力下不断继续前进和发展，并延伸出了v2ray、ssr、trojan这些新的衍生协议。<br>今日，这批协议仍是大量上墙者在使用且推荐使用的。</p><h2 id="浅析软件原理、科普互联网知识"><a href="#浅析软件原理、科普互联网知识" class="headerlink" title="浅析软件原理、科普互联网知识"></a>浅析软件原理、科普互联网知识</h2><p>首先我们要了解当我们在上网时我们的机器在干什么，以我在浏览器中访问谷歌为例   </p><h3 id="无审查环节的访问"><a href="#无审查环节的访问" class="headerlink" title="无审查环节的访问"></a>无审查环节的访问</h3><p>在没有网络审查的环境中，当我在浏览器中输入谷歌的域名<code>www.google.com</code>后<br>我的电脑知道了我要访问这个网站，但电脑不知道这个域名背后的IP地址（相当于某人的门牌号）所以要向DNS服务器（相当于当今的缺德地图或是电话黄页）查询这个网址背后的IP地址<br>｜<br>｜<br>DNS服务器收到请求，并将结果返回给我的电脑<br>｜<br>｜<br>解决了要去哪的问题，接下去就是把数据包发向谷歌的服务器了<br>｜<br>｜<br>数据包经过路由器到达外网——到达骨干网——经过国际互联网出口再向对应服务器去<br>｜<br>｜<br>谷歌的服务器收到了我的请求，向我发送网页的数据包，经国际互联网再返回我的电脑，我的电脑中的浏览器将网页呈现在我的面前  </p><h3 id="有网络审查无魔法上网"><a href="#有网络审查无魔法上网" class="headerlink" title="有网络审查无魔法上网"></a>有网络审查无魔法上网</h3><p>有网络审查之后其实就多一步，国际出口处加装了GFW，此时流量在通过国际出口时，由于谷歌的IP被列入了黑名单，所以访问将直接被阻断。<br>当然，也远不止这个手段。除此之外，审查机制会要求国内的DNS服务器将查询黑名单域名的请求返回错误地址（例如你问我张三的电话但我有意无意地告诉你李四的电话）。同时由于普通的DNS查询时不加密的，且使用udp协议，谁先发回数据就听谁的，所以如果你选用国外的DNS服务器进行查询，墙也能第一时间知道并抢答。还有数据包明文匹配————如果你的信息未经加密且含有其不允许查询的关键字也将阻断访问</p><h3 id="有网络审查有魔法上网"><a href="#有网络审查有魔法上网" class="headerlink" title="有网络审查有魔法上网"></a>有网络审查有魔法上网</h3><p>这里就要分开说了</p><h4 id="传统VPN"><a href="#传统VPN" class="headerlink" title="传统VPN"></a>传统VPN</h4><p>VPN思路很简单，我是为了信息安全而生的，主要任务就是加密数据。开始的时候墙还没有那么厉害，以为数据加密监测不到关键字所以也就放过了VPN的流量，但由于这种方式有非常明显的流量特征所以被精准识别了。</p><h4 id="Shadowsocks类"><a href="#Shadowsocks类" class="headerlink" title="Shadowsocks类"></a>Shadowsocks类</h4><p>这类基于socks5代理的穿透工具的鼻祖是Shadowsocks，框架差不多，都是由其发展而来<br>类Shadowsocks协议与传统VPN不同在于它的代理方式是：<br>客户端<br>｜<br>｜<br>本地服务器（可以是在客户端上安装的软件或如网关上安装的软件）<br>｜<br>｜<br>远程服务器<br>中间多了一个本地的服务器，同时针对墙的识别方式对流量形式上做了优化</p><h5 id="Shadowsocks"><a href="#Shadowsocks" class="headerlink" title="Shadowsocks"></a>Shadowsocks</h5><p>这是老祖宗，目前依然很稳，许多机场也都提供服务。目前已经发展得非常成熟了。<br>同时它在速度和延迟上都有着不俗的表现，游戏加速利器。（前提是你的游戏流量能过代理。）</p><h5 id="ShadowsocksR"><a href="#ShadowsocksR" class="headerlink" title="ShadowsocksR"></a>ShadowsocksR</h5><p>Shadowsocks的一个变种，极富争议，具体自行谷歌。  </p><h5 id="ProjectV"><a href="#ProjectV" class="headerlink" title="ProjectV"></a>ProjectV</h5><p>还有一个比较熟悉的名字叫v2ray，但正确的叫法是projectV。准确的说这不是一个协议，而是一套工具，整合了一堆乱七八糟的协议，其诞生的目的就是为了突破网络封锁，缺点是很难配置（目前有很多懒人脚本可以帮助部署），需要有一定基础知识才能理解配置的含义（都一样）。vmess协议也是目前比较主流的类Shadowsocks协议，其流量伪装的特性极大提高了隐匿程度（只是相对而言），同时ws+tls外套cdn的套娃方法可以复活被墙节点，功能十分强大。<br>这里着重介绍ws+tls：<br>说白了就是伪装为正常的https流量，ws一层加密再套上tls一层加密，你还可以加个cdn层层套娃，很大程度上降低流量被识别的可能。（不是100%不会被墙）<br>同时正是因为这种套娃的形式所以大大增加了访问延迟，也加大了对服务端和客户端算力的要求。</p><h5 id="trojan"><a href="#trojan" class="headerlink" title="trojan"></a>trojan</h5><p>一个新兴的协议，方式和vmess的ws+tls有些类似，但它少了ws的加密，访问延迟和负载上较ws+tls好不少，同时部署也更为方便。缺点是不方便用ngnix。  </p><h2 id="个人的猜想"><a href="#个人的猜想" class="headerlink" title="个人的猜想"></a>个人的猜想</h2><p>首先我们知道了，每逢重大会议或“六月大扫除”墙都会拔高一截，有些机场被打的死去活来，选择自建的小伙伴也非常惨，但依然有些人能毫无阻碍的使用。<br>所以这里我们要做一个假设。<br><strong>假设墙还无法做到对类Shadowsocks协议的精准识别</strong><br>从上面我们知道了，只是力度大了而已，而非完全封锁，所以可以猜测墙还无法做到精准识别。<br>既然识别算法上有缺陷，那么必定会通过行为的分析，对流量进行判定。<br>比如我使用trojan，从协议上来看无懈可击，完全就是伪装成了一个普通的https流量，<strong>但如果24小时都连接着，那么就显得非常不正常</strong>。<strong>没人会一天到晚盯着一个网站看，而且流量还那么大</strong>。所以我推测如果表现的很不正常，一样会触发墙的判定。<br>按照这个思路，我们再往回思考，除了做到协议的无懈可击外，我们还可以在客户端和服务端入手，让我们的流量看着更普通。<br>服务端上，可以用v2ray，同时真的在vps上搭建真正的网站（例如云盘或者流媒体服务），同时将就伪装为访问这个网站的流量，这样可以让流量看着非常正常，因为表面上它确实就是在看这个网站。<br>客户端方面，保证不长时间的链接，同时流量尽量不要过大。最好是多台服务器配合clash使用，clash自动选择节点可以将流量分散到各个节点，也保证了不长时间连接各个节点，更大程度上流量会显得更为正常。<br>以上，仅仅只是猜测。<br>万一人家真的只是不想管呢？</p>]]></content>
    
    
    
    <tags>
      
      <tag>杂谈</tag>
      
      <tag>科普</tag>
      
      <tag>网络</tag>
      
      <tag>魔法上网</tag>
      
      <tag>历史</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用树莓派搭建透明代理、搭建本地DNS服务器及使用cloudflareAPI实现DDNS教程</title>
    <link href="/2020/04/06/Linux/tutorial/rpi4-socks-ddns-dns/"/>
    <url>/2020/04/06/Linux/tutorial/rpi4-socks-ddns-dns/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>我的网件路由器拿来当AP用了，所以没法使用梅林固件的插件进行魔法上网。手机电脑都还好，但是ns就比较蛋疼了，不挂代理下载慢的跟蜗牛一样，而且不知道为什么国内的一些dns会把ns访问的域名解析到美帝的节点去，所以就想了这么一出。（题目又臭又长请见谅）  </p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li>树莓派4b（别的也行，反正差不多）</li><li>陈年MacBookAir</li><li>Windows电脑一台（下面我会解释为什么有Mac还要加台Windows的电脑）</li><li>网线一根</li><li>sd卡一张（大小随意，我用的是闪迪64gb A1的卡）</li><li>读卡器</li><li>树莓派对应充电线（4是type-c，之前是microUSB）</li></ul><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p>~~分享站暂时下线，目前有点小问题  ~~已重新上线   </p><ul><li><a href="https://ubuntu.com/download/raspberry-pi">Ubuntu18.04固件</a></li><li><a href="https://www.balena.io/etcher/">balenaEtcher</a>（用于烧录固件）</li><li>ssh工具（这里我使用的是termius。AppStore有）</li></ul><h2 id="烧录系统"><a href="#烧录系统" class="headerlink" title="烧录系统"></a>烧录系统</h2><p>这一步其实很简单，把上面提到的Ubuntu的固件下载下来，然后在balenaEtcher中就可以一键刷入。<br>我的Mac不知道为什么这个软件用不了，正好家里有另一台笔记本能用就懒得折腾了。<br><code>Select image</code>那选中我们所要烧录的固件–&gt;<code>Select drive</code>选中我们所要烧录到的sd卡（做这一步的时候建议把别的什么储存卡之类的拔掉，并仔细确认选中的是对的。不要问我为什么）–&gt;点右边的flash等待完成刷入。</p><h2 id="树莓派开机及使用"><a href="#树莓派开机及使用" class="headerlink" title="树莓派开机及使用"></a>树莓派开机及使用</h2><p>将sd卡插到树莓派上，接上网线，插上供电线即可<br>等待网口的黄灯闪烁说明已将成功了<br>这时候我们需要登陆到路由器管理页面查看树莓派的ip（如果是动态ip的话需要将树莓派ip固定下来）<br>我的树莓派内网IP是<code>192.168.1.149</code><br>在ssh工具里填写好IP，同时使用的用户名是<code>ubuntu</code>，默认密码为<code>ubuntu</code>。第一次连接后会要求强制更改密码。<br>在接下去使用的过程中，需要使用root用户，请使用<code>sudo -i</code>将自己的用户更改为root<br>首先需要更改源，因为Ubuntu的官方源在国内还是比较慢的（后面还会降到更慢的）  </p><h3 id="替换源"><a href="#替换源" class="headerlink" title="替换源"></a>替换源</h3><p>这里我们需要将文件中的所有源的地址更改为国内源的地址  </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;apt&#x2F;sources.list    #打开文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>按i开启编辑模式，将文件中的所有网址替换为以下任意一种  </p><h4 id="中科大源"><a href="#中科大源" class="headerlink" title="中科大源"></a>中科大源</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mirrors.ustc.edu.cn   #中科大源###############  你也可以选择先删光文件内容直接复制以下内容  ############deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="阿里云源"><a href="#阿里云源" class="headerlink" title="阿里云源"></a>阿里云源</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mirrors.aliyun.com    #阿里云源###############  你也可以选择先删光文件内容直接复制以下内容  ############deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="163源"><a href="#163源" class="headerlink" title="163源"></a>163源</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mirrors.163.com      #163源###############  你也可以选择先删光文件内容直接复制以下内容  ############deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="清华源"><a href="#清华源" class="headerlink" title="清华源"></a>清华源</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mirrors.tuna.tsinghua.edu.cn     #清华源###############  你也可以选择先删光文件内容直接复制以下内容  ############deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>结束后按<code>esc</code>退出编辑模式并输入<code>:wq</code>保存并退出<br>修改后更新源  </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo apt-get updatesudo apt-get upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="搭建本地DNS服务器"><a href="#搭建本地DNS服务器" class="headerlink" title="搭建本地DNS服务器"></a>搭建本地DNS服务器</h2><p>搭建本地DNS服务器使用的是Dnsmasq   </p><h3 id="安装Dnsmasq"><a href="#安装Dnsmasq" class="headerlink" title="安装Dnsmasq"></a>安装Dnsmasq</h3><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">apt-get install dnsmasq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="配置Dnsmasq"><a href="#配置Dnsmasq" class="headerlink" title="配置Dnsmasq"></a>配置Dnsmasq</h3><h4 id="dnsmasq-conf"><a href="#dnsmasq-conf" class="headerlink" title="dnsmasq.conf"></a>dnsmasq.conf</h4><p>打开配置文件   </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;dnsmasq.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>按i打开编辑模式<br>去掉strict-order前面的#号<br>设置listen-address，配置如下：</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">listen-address&#x3D;127.0.0.1,逗号后的这里请填写树莓派的内网IP地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>修改缓存大小（就在目前打开的文件中添加以下内容即可）</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cache-size&#x3D;10000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="resolv-conf"><a href="#resolv-conf" class="headerlink" title="resolv.conf"></a>resolv.conf</h4><p>打开文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;resolv.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>添加上游dns，格式如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">nameserver 此处填写DNS地址，注意和前面的nameserver之间要有一个空格<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>查询顺序自上而下，可以多添加几个上游DNS地址<br>按<code>esc</code>退出编辑模式<br>输入<code>:wq</code>保存并退出</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>启动</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">service dnsmasq restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>查看运行状态</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">service dnsmasq status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>没有报错就说明安装成功了</p><h2 id="搭建透明代理"><a href="#搭建透明代理" class="headerlink" title="搭建透明代理"></a>搭建透明代理</h2><p>这里我们使用的是大名鼎鼎的<a href="https://github.com/Dreamacro/clash/releases">clash</a>  </p><h3 id="安装clash"><a href="#安装clash" class="headerlink" title="安装clash"></a>安装clash</h3><p>找到<code>armv7</code>的包，复制链接并使用<code>wget</code>下载到机器（个人建议用能魔法上网的电脑先下载好之后上传到树莓派上，这里不介绍怎么传了）</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir &#x2F;home&#x2F;clashcd &#x2F;home&#x2F;clashwget 此处填入前面找到的安装包的下载链接，比如写这篇文章时的是https:&#x2F;&#x2F;github.com&#x2F;Dreamacro&#x2F;clash&#x2F;releases&#x2F;download&#x2F;v0.19.0&#x2F;clash-linux-armv7-v0.19.0.gzgunzip clash-linux-armv7-v0.19.0.gz     #解压包，记得把文件名替换成你下载的文件的文件名mv clash-linux-armv7-v0.19.0 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;clash     #将解压好的文件夹移动至&#x2F;usr&#x2F;local&#x2F;bin&#x2F;clashchmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;clash    #给权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>配置文件怎么来的不解释，这里默认大家已经有配置文件了。<br>假设我们手上有一个配置文件（文件名为<code>a.yaml</code>，文件路径为<code>/home/clash/a.yaml</code>），且目前我们处于<code>/home/clash</code>这个文件夹中<br>重命名配置文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mv a.yaml config.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="打开并修改配置文件"><a href="#打开并修改配置文件" class="headerlink" title="打开并修改配置文件"></a>打开并修改配置文件</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim config.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>将文件中的这两个配置修改成如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">allow-lan: true    #即允许来自局域网的连接external-controller: 0.0.0.0:9090    #可以外部控制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>保存并退出</p><h3 id="启动clash"><a href="#启动clash" class="headerlink" title="启动clash"></a>启动clash</h3><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">clash -d &#x2F;home&#x2F;clash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>无错误输出的就是成功了</p><h3 id="守护程序"><a href="#守护程序" class="headerlink" title="守护程序"></a>守护程序</h3><p>这里介绍service，也可以选用pm2（推荐）</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;etc&#x2F;systemd&#x2F;systemvim clash.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>在文件中添加如下内容</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># This is about to control clash&#39;s start|stop|restart|status|enable[Unit]Description&#x3D;Clash ServiceAfter&#x3D;network.target[Service]ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;clash -d &#x2F;home&#x2F;clashRestart&#x3D;on-abortLimitNOFILE&#x3D;1048576[Install]WantedBy&#x3D;multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>要注意<code>ExecStart=/usr/local/bin/clash -d /home/clash</code>这行使用的命令，如果按我的教程做的不需要修改，如果配置文件位置不一样的请自行做调整</strong><br>启动</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">systemctl start clash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>查看运行状态</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">systemctl status clash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>开机自启</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">systemctl enable clash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>这样就完成了clash的设置，局域网内的设备就可以通过配置文件里设置的端口设置代理进行魔法上网了。（默认http是7890，socks是7891，请自行查看配置文件设置的端口）<br>想要外网访问的话需要路由器支持端口转发，请自行设置。<br>这里不介绍web管理页面怎么弄了，非常简单，GitHub上把文件下载到电脑点开文件夹里的<code>index.html</code>文件就能用（管理页面会要求填ip和端口号，ip是树莓派内网ip，端口号是之前在修改配置文件时提到的<code>external-controller: 0.0.0.0:9090</code>这里的9090)。</p><h2 id="使用cloudflareAPI实现DDNS"><a href="#使用cloudflareAPI实现DDNS" class="headerlink" title="使用cloudflareAPI实现DDNS"></a>使用cloudflareAPI实现DDNS</h2><p>事情是这样的，本来我想弄完上面两样就收工的，然后想想得折腾折腾让外网也能正常访问。但我家宽带是动态ip我使用的主路由是TP-LINK的企业级路由，虽然支持使用ddns但是只能使用固定那几家的（花生壳啥的），但我不想用。正好我有域名，且是cloudflare托管，就使用cloudflare的api来实现ddns。<br><strong>这里使用到的脚本来自这位<a href="https://vircloud.net/author/1/">大神</a>的这篇文章（<a href="https://vircloud.net/operations/cf-ddns.html">利用 CloudFlare API 实现自动 DDNS 功能|支持IPv4|IPv6</a>）,我家是IPv4所以我去掉了IPv6的内容，如需要请前往原文查看IPv6相关设置，这里就不多介绍了。</strong>   </p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;bashauth_email&#x3D;&quot;cloudflare账号邮箱&quot;auth_key&#x3D;&quot;api秘钥&quot;zone_name&#x3D;&quot;根域名&quot;record_name&#x3D;&quot;绑定公网ip的子域名&quot;record_type&#x3D;&quot;A&quot;ip&#x3D;$(curl -s http:&#x2F;&#x2F;members.3322.org&#x2F;dyndns&#x2F;getip)ip_file&#x3D;&quot;ip.txt&quot;id_file&#x3D;&quot;cloudflare.ids&quot;log_file&#x3D;&quot;cloudflare.log&quot;log() &#123;if [ &quot;$1&quot; ]; thenecho -e &quot;[$(date)] - $1&quot; &gt;&gt; $log_filefi&#125;log &quot;Check Initiated&quot;if [ -f $ip_file ]; thenold_ip&#x3D;$(cat $ip_file)if [ &quot;$ip&quot; &#x3D;&#x3D; &quot;$old_ip&quot; ]; thenecho &quot;IP has not changed.&quot;exit 0fifiif [ -f $id_file ] &amp;&amp; [ $(wc -l $id_file | cut -d &quot; &quot; -f 1) &#x3D;&#x3D; 2 ]; thenzone_identifier&#x3D;$(head -1 $id_file)record_identifier&#x3D;$(tail -1 $id_file)elsezone_identifier&#x3D;$(curl -s -X GET &quot;https:&#x2F;&#x2F;api.cloudflare.com&#x2F;client&#x2F;v4&#x2F;zones?name&#x3D;$zone_name&quot; -H &quot;X-Auth-Email: $auth_email&quot; -H &quot;X-Auth-Key: $auth_key&quot; -H &quot;Content-Type: application&#x2F;json&quot; | grep -Po &#39;(?&lt;&#x3D;&quot;id&quot;:&quot;)[^&quot;]*&#39; | head -1 )record_identifier&#x3D;$(curl -s -X GET &quot;https:&#x2F;&#x2F;api.cloudflare.com&#x2F;client&#x2F;v4&#x2F;zones&#x2F;$zone_identifier&#x2F;dns_records?name&#x3D;$record_name&amp;type&#x3D;$record_type&quot; -H &quot;X-Auth-Email: $auth_email&quot; -H &quot;X-Auth-Key: $auth_key&quot; -H &quot;Content-Type: application&#x2F;json&quot;  | grep -Po &#39;(?&lt;&#x3D;&quot;id&quot;:&quot;)[^&quot;]*&#39;)echo &quot;$zone_identifier&quot; &gt; $id_fileecho &quot;$record_identifier&quot; &gt;&gt; $id_filefiupdate&#x3D;$(curl -s -X PUT &quot;https:&#x2F;&#x2F;api.cloudflare.com&#x2F;client&#x2F;v4&#x2F;zones&#x2F;$zone_identifier&#x2F;dns_records&#x2F;$record_identifier&quot; -H &quot;X-Auth-Email: $auth_email&quot; -H &quot;X-Auth-Key: $auth_key&quot; -H &quot;Content-Type: application&#x2F;json&quot; --data &quot;&#123;\&quot;id\&quot;:\&quot;$zone_identifier\&quot;,\&quot;type\&quot;:\&quot;$record_type\&quot;,\&quot;name\&quot;:\&quot;$record_name\&quot;,\&quot;content\&quot;:\&quot;$ip\&quot;&#125;&quot;)if [[ $update &#x3D;&#x3D; *&quot;\&quot;success\&quot;:false&quot;* ]]; thenmessage&#x3D;&quot;API UPDATE FAILED. DUMPING RESULTS:\n$update&quot;log &quot;$message&quot;echo -e &quot;$message&quot;exit 1elsemessage&#x3D;&quot;IP changed to: $ip&quot;echo &quot;$ip&quot; &gt; $ip_filelog &quot;$message&quot;echo &quot;$message&quot;fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>先确定自家宽带目前的公网ip，并添加到CloudFlare的DNS记录中（不要打开CDN）<br>并在概述处找到api，获取<code>Global API Key</code>的秘钥     </p><h4 id="制作脚本"><a href="#制作脚本" class="headerlink" title="制作脚本"></a>制作脚本</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;homevim cfapi.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>填入上面提到的脚本，并将上面有中文的四行依次填入中文所示的信息后保存并退出。</p><h4 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">chmod +x cfapi.sh.&#x2F;cfapi.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>如果下面这个输出了宽带公网ip或显示ip为改变则说明成功了</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">输出了这个IP changed to: ****或者这个IP has not changed.就是成功了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="定时运行"><a href="#定时运行" class="headerlink" title="定时运行"></a>定时运行</h4><p>我家路由器每天四点重启，所以每天四点都会更新IP，我们需要做的就是让脚本定时运行，保证实时更新。  </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">service cron start  #启动定时执行工具crontab -e  #编辑配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>第一次执行会显示让你选择使用的编辑工具，填对应数字并回车就行，我选择的是2（vim）<br>接着的操作和之前使用vim完全一样<br>这里我们填入以下命令  </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">0 5 * * *  &#x2F;home&#x2F;cfapi.sh &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>即每天五点运行一次脚本（具体含义可参考<a href="https://blog.csdn.net/allenlinrui/article/details/7490206">这篇文章</a>）<br>保存并退出<br>重启程序</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">service cron restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>完成。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>折腾完了我也身心舒畅了，你说折腾这个有啥用其实也真没什么用。但也算是学到了不少新的知识吧。<br>写这篇文章花了我两个小时，从晚上八点半写到晚上十点半，真的累。创作不易，欢迎大家支持和资瓷。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>DNS</tag>
      
      <tag>代理</tag>
      
      <tag>树莓派</tag>
      
      <tag>DDNS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2P下载小科普</title>
    <link href="/2020/03/28/bt/"/>
    <url>/2020/03/28/bt/</url>
    
    <content type="html"><![CDATA[<p>说到磁力和种子，国内很多人第一时间想到的肯定是迅雷，多年前的我也一样。由于自己下载bt非常慢，所以今天认认真真查了一下资料，才知道为啥迅雷会被叫做吸血雷。<br>首先，P2P下载就是一种错误的说法。确切地说，这是一种文件共享的方式，<strong>既然有下载，也就必定会有上传。</strong><br>先说说传统的文件共享方式：有一天我见到<a href="http://blog.wjhwjhn.com/">wjh</a>在看我很想看的小电影，然后我让他传给我一份。wjh和我使用的宽带带宽同为100M（即理论上12.5MB&#x2F;s的上传下载速度），所以我下载他传给我的这个后缀为.avi的1GB大小的文件所需的时间大约是一分多钟。那么如果wjh还有另外的99个小伙伴也想要这个视频文件，且wjh同时给这一百个人传，那么我们将平分这100M的带宽。<strong>也就是说，下载速度是原来的1%</strong><br>bt应运而生。P2P文件共享的原理就是：让每一个人都成为此文件的发送者和共享者。还是上面的例子，wjh要分享文件给一百个小伙伴，此时我们将文件拆分成一百个数据块。此时小伙伴A从wjh那获得了数据块a，小伙伴B从wjh那获得了数据块b，小伙伴c从······同时，因为小伙伴A有数据块a，而小伙伴B没有，小伙伴B有数据块b而小伙伴A没有，所以这两个小伙伴互通有无，直接交换彼此有的数据块，从而减小了wjh家网络带宽的压力，且加快了下载速度。<br>人多了文件多了自然分享过程就不好找，此时就需要tracker服务器出场了。当你想下载这个视频时，你向tracker服务器发消息告诉它你想要什么，那么它会帮你和其他有这个资源的用户取得联系。<br>从上面这个例子中我们知道了，<strong>P2P下载使用的人越多，这个文件的下载速度也就越快</strong><br><strong>当然，前提是你愿意慷慨分享。</strong><br>这时就不得不提迅雷了。这个鬼东西同样使用P2P，但是它<strong>只下载不分享</strong>，它先将文件下载到自己的服务器，然后又不对外分享，只分享给那些交了钱的。所以，它现在也就半死不活了。但是与此同时，它顺便玩死了（同样半死不活）国内的BT圈，顺带使得国外的一些tracker服务器直接屏蔽中国IP（丢人丢到国外了）。<br>对于我来说这个网络的作用是下载电影（自然是盗版）。因为穷而使用盗版并不可耻，但绝不能以此为荣，有钱的话，也请补补票，资瓷一下。当然，下载到资源的同时也别忘了分享给其他的穷兄弟，大家付出的越多，得到的也越多。<br>所以<br>我好想有钱啊·····</p>]]></content>
    
    
    
    <tags>
      
      <tag>科普</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020体育单招课程</title>
    <link href="/2020/03/24/2020tydz/"/>
    <url>/2020/03/24/2020tydz/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>2020年的时候我第一次参加体育单招考试，爹妈给买了一套课程。我抓下来保存了。<br>然后当年没考上。<br>2021年，依然没考上<br>在这里就放出来，分享给需要的有缘人。<br>更新于：2021-5-31<br><strong>⚠️注意：请勿使用于商业</strong></p><span id="more"></span><h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><p>1.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/4068df7e5285890799928176244/fUWoFIkDybgA.mp4">考试大纲介绍、第一章集合精讲</a><br>2.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/b637df5c5285890799451927454/6mn7TqTjLmkA.mp4">函数（一）</a><br>3.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/c65d0b9e5285890799047991247/GG4Cbcqvh70A.mp4">函数（二）</a><br>4.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/c7af54d25285890799621116374/B8PAvAW7ProA.mp4">数列与不等式</a><br>5.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/3bab46f65285890799850992110/4QsNLqLSt2AA.mp4">三角函数（一）</a><br>6.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/f014e5e55285890799642299918/c9nliwcsqPsA.mp4">三角函数（二）</a><br>7.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/fcafa1bc5285890799832932833/7wlUsLqtV6sA.mp4">平面向量</a><br>8.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/1443ecfd5285890800047332071/P1XyPr60Eq0A.mp4">平面解析几何–直线</a><br>9.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/119f17d65285890800030503540/rM26yfI1OhoA.mp4">平面解析几何–圆与椭圆</a><br>10.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/119f981a5285890800030504291/rV1Cr5NR7n0A.mp4">平面解析几何–双曲线与抛物线</a><br>11.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/f8a85fbb5285890800206092222/arenJvTgPAoA.mp4">立体几何–点、线、面及两平面位置关系</a><br>12.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/844ae8725285890800188216895/WFTC78BmzKkA.mp4">立体几何–空间角与距离求解、棱柱与棱锥介绍</a><br>13.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/faff4b445285890800206195920/duuUYxzmsz8A.mp4">立体几何–圆柱、圆锥、球</a><br>14.<a href="http://1253181029.vod2.myqcloud.com/274d88dfvodgzp1253181029/53b919c05285890800309042561/CBMYtx6ldwwA.mp4">排列组合与概率（一）</a><br>15.<a href="http://1253181029.vod2.myqcloud.com/274d88dfvodgzp1253181029/0df7f7545285890800308378858/gOisi43QYPUA.mp4">排列组合与概率（二）</a><br>16.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/8a7125d25285890800456574449/n6L4CmA9F5kA.mp4">习题课</a></p><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p>1.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/b6584ef85285890799451940950/zFNzK2AowgwA.mp4">考试大纲、题型及名词讲解</a><br>2.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/f0649dd55285890799452107276/5XvifhUXxyAA.mp4">冠词</a><br>3.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/68af54f95285890799419771540/B2mMnaLACngA.mp4">代词</a><br>4.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/d69319fc5285890799645232397/Fyv1g0Ucma8A.mp4">形容词</a><br>5.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/958e4be35285890799644778174/GypdvAXH4A8A.mp4">副词</a><br>6.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/e8f5bc375285890799564032196/ZNfb6qDvtsgA.mp4">副词的比较级和最高级</a><br>7.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/3fb0111a5285890799565490064/0eDHC0fx9CsA.mp4">介词</a><br>8.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/dba9755d5285890799645491436/oMGI4tP28u4A.mp4">动词</a><br>9.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/f7dff16f5285890799832710331/3Fyxgqn9XQYA.mp4">动词时态（一）</a><br>10.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/7853093a5285890799851295090/ojfdLZAsSpgA.mp4">动词时态、语态（二）</a><br>11.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/7c9d08f85285890799827076232/rDjJVMTfdqMA.mp4">非谓语动词</a><br>12.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/7a949a3f5285890799851382971/75KAlmrXUO4A.mp4">动名词</a><br>13.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/d6ae5ade5285890799723191884/meUHh7vah6AA.mp4">虚拟语气及构词法</a><br>14.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/bb36da8b5285890799784799471/nQ8nlaGcWiAA.mp4">主从句</a><br>15.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/750b20b85285890799844352542/UegBomq7booA.mp4">强调句、倒装句</a><br>16.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/16f55bb65285890800047485987/CYziBFUqf4sA.mp4">书面表达</a><br>17.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/c06a3ec15285890800087101905/ac072ulqCH8A.mp4">完形填空</a><br>18.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/b92a60aa5285890800063378445/p1L6kRaba5wA.mp4">阅读理解</a><br>19.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/f88775655285890800206078174/NR4TY9v7qrsA.mp4">习题课（一）</a><br>20.<a href="http://1253181029.vod2.myqcloud.com/274d88dfvodgzp1253181029/791aa4c55285890800269740412/8lpRKHRGLSoA.mp4">习题课（二）</a></p><h2 id="语文"><a href="#语文" class="headerlink" title="语文"></a>语文</h2><p>1.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/0638e3415285890799927990703/Gk7PWsmKnYIA.mp4">考点大纲介绍、正音</a><br>2.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/ee9f3df95285890799452085950/Qgf7Cacf0eoA.mp4">字形</a><br>3.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/6acdb9045285890799419840968/3NpptpXziPIA.mp4">词语的运用</a><br>4.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/7f854b775285890799620339616/WNNlM8I1WJkA.mp4">成语熟语运用</a><br>5.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/8af7b4555285890799620807614/U4j5DCHxazwA.mp4">病句</a><br>6.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/7f3003c55285890799851578376/iaJLMyMRQ3AA.mp4">语言实际运用</a><br>7.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/f24da77d5285890799659069133/EJiCpu2qUVkA.mp4">修辞</a><br>8.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/75b586115285890799851155212/9jc1mkeWkHQA.mp4">标点符号</a><br>9.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/5e96d34f5285890799735201082/pkjRurOWcOwA.mp4">文学常识</a><br>10.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/b9f908a45285890799974856433/XcWSTgXA1IcA.mp4">现代文阅读（一）基础篇</a><br>11.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/bb3663955285890799784798986/zzBa66xfa14A.mp4">现代文阅读（二）技巧篇</a><br>12.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/7868a14c5285890799949950687/oIWupb1pgmoA.mp4">现代文阅读（三）训练篇</a><br>13.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/b1ba019b5285890800063010834/XhZwUHFNm4wA.mp4">古诗文阅读（一）文言实词和文言虚词</a><br>14.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/840c5aa75285890800086841046/yPbVQUkAaKMA.mp4">古诗文阅读（二）文言句式及翻译</a><br>15.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/54751e2c5285890800017579940/sWKcMp2OkTgA.mp4">作文</a><br>16.<a href="http://1253181029.vod2.myqcloud.com/274d88dfvodgzp1253181029/f69f5fa15285890800271454323/VeAAj4WUTpQA.mp4">综合测试题（一）</a><br>17.<a href="http://1253181029.vod2.myqcloud.com/274d88dfvodgzp1253181029/a9c854615285890800270472900/0gvLcVZa8HwA.mp4">综合测试题（二）</a><br>18.<a href="http://1253181029.vod2.myqcloud.com/274d88dfvodgzp1253181029/4a12c7e35285890800265971012/xUBnTebVAPsA.mp4">综合测试题（三）</a></p><h2 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h2><p>1.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/750a83d75285890799844351182/NMJgnVaNg9QA.mp4">考试大纲介绍、神奇的货币</a><br>2.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/0143f1da5285890800023091540/TuXQWKnai3EA.mp4">多变的价格、多彩的消费、生产与经济制度</a><br>3.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/0db123055285890800047092706/zeifOtDP1WoA.mp4">企业与劳动者、投资理财的选择、收入的分配</a><br>4.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/547511ed5285890800017579680/wAALOFZGWj4A.mp4">发展社会主义市场经济</a><br>5.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/bb607c005285890800205704255/seeLhUk2zJEA.mp4">我国公民的政治参与</a><br>6.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/f8ac502f5285890800206099847/raiH2G6YhlEA.mp4">我国政府是人民的政府 受人民监督</a><br>7.<a href="http://1253181029.vod2.myqcloud.com/274d88dfvodgzp1253181029/8fec24ac5285890800266656335/203y0HTbmqwA.mp4">发展社会主页民主政治、当代国际社会</a><br>8.<a href="http://1253181029.vod2.myqcloud.com/274d88dfvodgzp1253181029/68a721305285890800309935890/VNrF7IMIIG0A.mp4">生活与哲学</a><br>9.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/bc09483a5285890800307135221/vSiyPqY1DM4A.mp4">生活智慧与时代精神</a><br>10.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/b00a4f615285890800443243560/5ClvMKTICG4A.mp4">思想方法与创新意识</a><br>11.<a href="http://1253181029.vod2.myqcloud.com/bfc4239avodbj1253181029/ff919aaa5285890800444376345/ahCfMPJchxAA.mp4">认识社会和价值选择</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大概是个近期总结？</title>
    <link href="/2020/03/22/Something/da-gai-shi-ge-jin-qi-zong-jie/"/>
    <url>/2020/03/22/Something/da-gai-shi-ge-jin-qi-zong-jie/</url>
    
    <content type="html"><![CDATA[<p>好久没写文章了，最近实在没啥可写的。<br>近期也没折腾出什么名堂来。<br>最近弄了分享站，花了巨款买了世纪互联的onedrive，结果没用几天API就被屏蔽了，气坏了······<br>不过无所谓，有国际盘，无非需要魔法上网。<br>由于onedrive的限制，无法上传15gb以上的文件，所以没法分享出蓝光资源。我在想办法把相对优质的资源压制一下上传（主要是电影）<br>可怜了我12年的MacBookAir······  </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>一些话</title>
    <link href="/2020/03/03/Something/rational/"/>
    <url>/2020/03/03/Something/rational/</url>
    
    <content type="html"><![CDATA[<p>最近好像有什么大事件，ao3.org被墙了。我不追星，也没入饭圈，所以这事跟我一点关系都没有。  </p><span id="more"></span><p>今天早上的时候我看到空间里有人在转这条消息<br><img src="https://pic.imgdb.cn/item/5e5de44398271cb2b813a223.jpg"><br>从我的角度看无非就是确认了ao3被墙了这个事实而已，关于这个墙的问题，在空间里也做了科普。<br><img src="https://pic.imgdb.cn/item/5e5de45f98271cb2b813b2c8.png"><br>从这个事情上可以看出两点点： </p><blockquote><ul><li>有人不了解互联网的基础知识</li><li>有人理解错了ao3官方的意思（按照我朝律例这种行为会被归类为造谣）</li></ul></blockquote><p>前些日子好像又有什么外国人中国永久居住证的事情。我是中国人，所以这事跟我也一点关系都没有。<br>具体是个什么问题我也没了解过。只看见空间里也有人在转相关的消息，说什么要引进黑人啥的<br>过了两天，果然有人转辟谣的说说了<br>从这个事情上又可以看出两点：</p><blockquote><ul><li>有人觉得上头都是<del>SB</del>（小嘴抹了蜜）</li><li>有人没有专门了解过官方的文件和相关资料就在空间转发引进黑人的说说了（按照我朝律例这种行为同样会被归类为造谣而且是那种可能会被请去喝茶的造谣）</li></ul></blockquote><p>举了上面两个例子，我们可以得出以下结论：</p><blockquote><ul><li>提到的两个事情我都没有了解过</li><li>我没有对这两个事件本身发表任何评论</li></ul></blockquote><p>首先我认为在这些事情上没有必要花心思，喜欢的网站被墙了有什么关系？fq就好了，大不了肉身出去。 引进黑人？听着就扯，更何况我国可是法治国家，按照法律的说法是得过审才能实施的<br>避免做出这种无意义的浪费时间行为，首先需要的是理性的思考和说话方式。<br>我对于理性语句的定义：<strong>不带形容词的陈述句</strong><br>举一个例子：</p><blockquote><p>背景：xx游行（本次游行未获得不反对通知书）<br>事件：xxx在xx游行中接收了来自xx组织（来自其他国家&#x2F;地区）的100美元</p></blockquote><p>这里并未使用到形容词，所以描述可以做到无褒贬义，同样的，我们可以加上形容词，从两个完全不同的角度去说这个事情  </p><blockquote><ul><li>正方：xxx在xx游行中获得了xx组织的100美元资金支持</li><li>反方：xxx在xx非法游行收到境外xx组织的100资金</li></ul></blockquote><p>同一个事情，加上不同的形容词就会描述出两个不同的故事。<br>声明：本人在本篇中使用的例子并非真实事件，不存在含沙射影的意思，同时也不针对任何人，但是欢迎对号入座。</p>]]></content>
    
    
    
    <tags>
      
      <tag>杂谈</tag>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>骚操作让你在主机端的Minecraft游玩自建服务器（已失效）</title>
    <link href="/2020/02/28/Linux/tutorial/Minecraft-dns/"/>
    <url>/2020/02/28/Linux/tutorial/Minecraft-dns/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p><strong>注意：本文介绍的方法目前已失效</strong></p><p>昨天晚上睡前看手机，本来想上微软的官网询问为什么主机端Minecraft不能填写自建服务器进行游玩的问题，然后在谷歌的时候发现了<a href="https://psnine.com/gene/41790">这篇帖子</a><br><img src="https://pic.imgdb.cn/item/5e58be556127cc07131fd6fa.png"><br><strong>真是一语惊醒梦中人啊！</strong>为啥我没想到？！！  </p><span id="more"></span><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>一台服务器（这里使用的vultr的一台服务器，本来是用于搭建分享站使用的）系统为CentOS7</li><li>电脑手机度可以，用于远程连接服务器</li></ul><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>使用到的软件是Dnsmasq  </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">wget http:&#x2F;&#x2F;www.thekelleys.org.uk&#x2F;dnsmasq&#x2F;dnsmasq-2.75.tar.gzyum -y install gcctar -xf dnsmasq-2.75.tar.gzcd dnsmasq-2.75make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>执行完后可以利用下面的命令查看安装版本以检察是否安装成功</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">dnsmasq -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">yum install dnsmasq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="Dnsmasq配置文件"><a href="#Dnsmasq配置文件" class="headerlink" title="Dnsmasq配置文件"></a>Dnsmasq配置文件</h3><p>Dnsmasq的配置文件路径为：&#x2F;etc&#x2F;dnsmasq.conf<br>打开配置文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;dnsmasq.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>添加以下内容</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">resolv-file&#x3D;&#x2F;etc&#x2F;resolv.dnsmasq.confstrict-orderaddn-hosts&#x3D;&#x2F;etc&#x2F;dnsmasq.hostslisten-address&#x3D;127.0.0.1,123.123.123.123server&#x3D;114.114.114.114<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><blockquote><ul><li>resolv-file&#x3D;&#x2F;etc&#x2F;resolv.dnsmasq.conf   dnsmasq 会从这个文件中寻找上游dns服务器</li><li>strict-order    表示严格按照resolv-file文件中的顺序从上到下进行DNS解析，直到第一个解析成功为止。</li><li>addn-hosts&#x3D;&#x2F;etc&#x2F;dnsmasq.hosts        在这个文件里面添加要自定义的DNS记录,这个是重点！！！后面将在这个文件中添加我们所需要解析的地址</li><li>listen-address&#x3D;127.0.0.1,123.123.123.123       监听地址,为localhost和dnsmasq服务器IP。“，”前的不需要改动，只需要将后面的IP地址改为你的服务器IP即可（这个服务器是指我们现在在操作的服务器，而非mc服务器的IP地址！）</li><li>server&#x3D;114.114.114.114       这行告诉dnsmasq使用DNS服务器进行解析,我们也可以通过server对不通的网站使用不同的DNS服务器进行解析，或者国内外网站使用不同DNS进行解析,如:server&#x3D;&#x2F;google.com&#x2F;8.8.8.8</li></ul></blockquote><h3 id="添加上游dns服务器的地址"><a href="#添加上游dns服务器的地址" class="headerlink" title="添加上游dns服务器的地址"></a>添加上游dns服务器的地址</h3><p>创建resolv.dnsmasq.conf文件并添加上游dns服务器的地址</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">touch &#x2F;etc&#x2F;resolv.dnsmasq.confecho &#39;nameserver 114.114.114.114&#39; &gt; &#x2F;etc&#x2F;resolv.dnsmasq.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h3 id="添加自定义dns"><a href="#添加自定义dns" class="headerlink" title="添加自定义dns"></a>添加自定义dns</h3><p>这里是重点了，由上文提到的帖子可知，<strong>主机板的Minecraft精选服务器域名是写死的，且端口是默认的19132。所以我们只需要把这几个服务器的域名指向我们mc服务器IP就可以了</strong>（注意要保证mc服务器的端口也是19132！）<br>创建dnsmasq.hosts文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cp &#x2F;etc&#x2F;hosts &#x2F;etc&#x2F;dnsmasq.hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>进入文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim &#x2F;etc&#x2F;dnsmasq.hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>添加以下内容，IP部分请自行替换成你的mc服务器地址</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">lbsg.net 123.123.123.123mco.cubecraft.net 123.123.123mco.mineplex.com 123.123.123.123hivebedrock.network 123.123.123.123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>保存后就可以启动了</p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">systemctl start dnsmasq     #启动systemctl enable dnsmasq     #设置开机自启<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><strong>注意：如果你使用的是阿里云等服务器，需要打开服务器53端口才可以使用，vultr的端口默认是开着的</strong></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>如果不放心，可以用手机或电脑的dns修改为我们部署好的dns服务器地址，然后ping上面提到的四个域名中的任意一个，如果输出为自建服务器IP则说明成功了</p><h3 id="以NS为例"><a href="#以NS为例" class="headerlink" title="以NS为例"></a>以NS为例</h3><p>进入设置–&gt;互联网–&gt;互联网设置–&gt;点击连接到的WiFi–&gt;更改设置–&gt;DNS设置改为手动–&gt;填入dns服务器地址–&gt;保持<br>接下来就可以进入游戏了<br><img src="https://pic.imgdb.cn/item/5e58be556127cc07131fd6f4.jpg"><br>大成功！</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>DNS</tag>
      
      <tag>游戏</tag>
      
      <tag>Minecraft</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于钉钉的一些看法</title>
    <link href="/2020/02/20/about-tingtalk/"/>
    <url>/2020/02/20/about-tingtalk/</url>
    
    <content type="html"><![CDATA[<p>2020魔幻开年，由于众所周知的原因我被困家中，不得不通过网上冲浪的方式进行学业上的提升。全国各地大量的学校都不约而同选择钉钉作为线上学习的工具，我亲爱的母校也不例外。<br>关于钉钉，首先我要亮出我在GooglePlay上给出的评分<br><img src="https://pic.imgdb.cn/item/5e4de59848b86553eec74617.png" alt="强烈建议各大软件商店推出打零星的功能"><br>除了某些众所周知的原因导致我要给它来个最低分，还有一些我个人的见解给了我这个毫不犹豫为它打出最低分动力。<br>为了作比较，这里拉出大洋彼岸某个公司推出的产品进行对比。<br><img src="https://pic.imgdb.cn/item/5e4e02ad48b86553eeccced7.png"></p><span id="more"></span><h2 id="平台支持"><a href="#平台支持" class="headerlink" title="平台支持"></a>平台支持</h2><p>钉钉：Android、iOS、MacOS、Windows，这四个平台都有相对应的客户端软件<br>G Suite：<strong>只要你使用的设备能连上网，能够安装的了一个相对好的浏览器就能使用</strong><br>高下立判</p><h2 id="账户设置"><a href="#账户设置" class="headerlink" title="账户设置"></a>账户设置</h2><p>钉钉：手机号注册<br>G Suite：使用域名邮箱注册<br>这一点尤其要说明，首先我个人的习惯是公私分明，我个人生活使用的账号和办公账号一定是分开的，虽然之前也有历史遗留问题，但只要想到了就会解决掉，做到账号分开。  </p><blockquote><p>使用域名邮箱的好处就是:</p><ul><li>有逼格</li><li>可以自由建立多个邮箱账号，方便使用在不同的地方</li></ul></blockquote><p>还有一点是我非常不能理解也不能接受的：<em>除了某些特殊原因外，为什么国内各种软件都会想着使用手机号注册，为什么各种软件都想着获取你的通讯录？</em>首先通讯录对个人是较为私密的，我自己的通讯录除了家人就是朋友，偶尔加几个自己比较认可的老师的手机号，根本不会添加牵扯到工作学习方面的人的手机号，</p><h2 id="UI及应用体验"><a href="#UI及应用体验" class="headerlink" title="UI及应用体验"></a>UI及应用体验</h2><h3 id="界面设计"><a href="#界面设计" class="headerlink" title="界面设计"></a>界面设计</h3><p>钉钉：可以说是熟悉的味道吧，我用着的就像是用微x或者Qx，聊天体验好像甚至还不如这两个软件<br>G Suite：简单，一目了然<br>打开钉钉的时候映入眼帘的是聊天列表，第二就是四个大类，点击后能看到各个小类，本身我觉得设计比较复杂，一个字<em>乱</em><br>G Suite的设计很清爽，比如我今天想着要制作英语单词的表格，我只需要展开应用栏点击表格，然后就可以找到自己需要编辑的文档开始编辑了。<br><img src="https://pic.imgdb.cn/item/5e4e02b148b86553eecccfdf.png"></p><h3 id="内置程序使用体验"><a href="#内置程序使用体验" class="headerlink" title="内置程序使用体验"></a>内置程序使用体验</h3><h4 id="办公几件套"><a href="#办公几件套" class="headerlink" title="办公几件套"></a>办公几件套</h4><p>钉钉：没怎么用过，我只知道在线编辑表格的功能是和WPS联合推出的<br>G Suite：还是上一条提到的，简单、好用。自家产品，实时云端储存，历史版本查看<br>首先，微软的office系列绝对是很牛逼的我不否认，但是对于我这种用用文档用用表格偶尔做点幻灯片的人来说好像谷歌的产品用着更舒服些，毕竟个人用户是免费的，还不占用本地空间。钉钉嘛······<br>呵呵  </p><h4 id="云端储存"><a href="#云端储存" class="headerlink" title="云端储存"></a>云端储存</h4><p>钉钉：创建团队即可获得100G空间奖励，不限使用人数<br>G Suite：基础版30GB，商务和企业版注册人数五人以下每人1TB，<em>五人以上无限储存空间</em><br>还有什么可说的呢</p><h4 id="聊天及会议"><a href="#聊天及会议" class="headerlink" title="聊天及会议"></a>聊天及会议</h4><p>钉钉：最高三十方电话会议，视频会议302人以下免费<br>G Suite：单个聊天室支持8000人，基本版100方、商务版150方、企业版250方<br>都没用过，不予置评</p><h4 id="组织网站建设"><a href="#组织网站建设" class="headerlink" title="组织网站建设"></a>组织网站建设</h4><p>钉钉：没这玩意<br>G Suite：只要你会做PPT就能做网站<br>G Suite这个用着真的把我惊到了，非常方便实用，不能说用它设计出来的网页有多么个性化多么好看，但是它真的很方便，也绝对比某些企事业单位那种铺天盖地全是字和链接的网站强上不少。</p><h4 id="日程及备忘录"><a href="#日程及备忘录" class="headerlink" title="日程及备忘录"></a>日程及备忘录</h4><p>钉钉：应用内一级目录放着日历，看着不错，没用过<br>G Suite：中规中矩，没啥可说的，跟钉钉比优点是有独立备忘录<br>Google keep从使用上来说没啥毛病，但比不上Apple的提醒事项，Apple的提醒事项吊打一切我使用过的同类产品</p><h4 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h4><p>钉钉：我反正是没见过<br>G Suite：Cloud Search牛逼！！！！！</p><h4 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h4><p>没啥可说的，这点都很注意</p><h4 id="组织管理"><a href="#组织管理" class="headerlink" title="组织管理"></a>组织管理</h4><p>钉钉：第一我没用过，第二官网上没有这一大类的介绍，都细化为了考勤审批什么的，看着就一个字<em>乱</em>。<br>G Suite：没用过。统一管理入口，清晰明了，看着就舒服，分类精准<br>这点上我认为是两者对企业管理的理解上不同导致的差异。<br>钉钉更专注于管理层人员的使用，打卡、考勤、审批一类的功能做的特别细致，甚至还提供模板方便使用，想方设法规员工工作习惯，或是在员工是否能按时到岗，如何防止员工使用某些方式进行“不规范”打卡······一切的一切都是为了管理者能够控制局面而设计的。<br>G Suite这边我认为更多的专注于团队的协作，没有所谓的考勤，没有所谓的打卡，专注于工作本身，我们需要做什么，我们应该如何分工，至于工作应该如何完成，那就完全员工的事情了。<br>让我们思考一个最根本的问题，使用这些工具的目的是什么？是为了规范办公习惯？还是为了更高效地完成那些需要去完成的事？   </p><h1 id="自己的一些话"><a href="#自己的一些话" class="headerlink" title="自己的一些话"></a>自己的一些话</h1><p>说实话本身我是用不到G Suite的功能的，因为我只是一个学生。我最近开始了解这个是因为我妈工作方式的极度传统，老板“必须到公司上班才能算是上班，不然不算工资”的要求让本来可以不限办公场所的员工必须到岗，而且是在这样的非常时期。我希望我妈作为一个公司的高管可以改变这样的现状，让工作效率更高，能腾出更多的业余时间，并且能让一个中国特色社会主义市场经济体制下的私企生存得不那么艰难。但是为什么我需要自己去了解它的详细使用方法呢？因为我妈不肯学。我不知道为什么至今为止在家打印文件我妈都得来问我应该如何操作，也不知道为什么至今为止她对电子产品还是一如既往的抵触，不知道为什么明明上网搜索一下就能得到答案的事情需要来请我帮忙，不知道为什么明明生活工作方式很原始依旧不愿意学习。或许是生活在这个社会，沉重的生活和工作的压力让她不愿意继续探索新的事物；或许是残酷的现实让她希望生活能保住现状，不向更坏的地方发展。<br>既然不肯学，那我学，我能教。<br>可就算如此，还是没有人原因听我学到的这点皮毛。<br>我没有体会过生活的艰辛，但我只是想以我的方式帮助我愿意帮助的人，让他们生活变得刚好。  </p>]]></content>
    
    
    
    <tags>
      
      <tag>杂谈</tag>
      
      <tag>魔幻高三生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2019-nCoV专栏（停止更新）</title>
    <link href="/2020/01/25/2019-nCoV/"/>
    <url>/2020/01/25/2019-nCoV/</url>
    
    <content type="html"><![CDATA[<p>最近的热点一定是这次疫情的爆发了。到处都在谈论此事，在此对本次事件的一些重要新闻或资料等有关信息做一个整理。或许也会有我个人的评论。<br><strong>注：部分资料存在无法访问情况。请自行通过魔法上网的方式访问这些不存在的网站。</strong><br><strong>注意：本文在保证信息内容保证表达原意的同时，会对摘要或新闻标题中政治敏感的部分进行修改或删减（如当看到摘要繁体字中混着简体字，说明我有进行修改），也会将一些信息归类到本不应该在的类别中，以减少不必要的麻烦。请谅解！</strong><br>以下内容均为个人手工整理，精力有限，不全或消息来源有误欢迎指正。  </p><span id="more"></span><blockquote><p>我们中华民族<br>是有着很强的凝聚力<br>任何的困难都压不倒我们<br>中国人民是不可战胜的！</p><p>——江泽民</p></blockquote><p>本文最后更新于2020-2-7日中午<br>懒得整理了，很多可以在cds档案找到。<br>心累。<br>本文已停更，有兴趣可前往<a href="https://github.com/2019ncovmemory/nCovMemory">此处</a>查看疫情报道。</p><h2 id="重要链接"><a href="#重要链接" class="headerlink" title="重要链接"></a>重要链接</h2><ul><li><a href="https://3g.dxy.cn/newh5/view/pneumonia">全国新型肺炎疫情实时动态</a></li><li><a href="https://www.who.int/csr/don/12-january-2020-novel-coronavirus-china/zh/">新型冠状病毒—中国  世界卫生组织</a></li><li><a href="https://zh.wikipedia.org/wiki/2019%EF%BC%8D2020%E5%B9%B4%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8B%80%E7%97%85%E6%AF%92%E8%82%BA%E7%82%8E%E4%BA%8B%E4%BB%B6#cite_note-25">2019－2020年新型冠状病毒肺炎事件  ——wiki</a></li><li><a href="http://www.nhc.gov.cn/">中国国家卫生健康委员会</a></li><li><a href="http://www.nhc.gov.cn/xcs/xxgzbd/new_list.shtml">新型冠状病毒感染的肺炎疫情防控  ——中国国家卫生健康委员会宣传司</a></li><li><a href="http://www.xinhuanet.com//politics/2020-01/24/c_1125500055.htm">发热咳嗽并非新型冠状病毒感染的肺炎唯一首发症状</a></li><li><a href="http://www.gov.cn/zhengce/zhengceku/2020-02/05/5474791/files/de44557832ad4be1929091dcbcfca891.pdf">新型冠状病毒感染的肺炎诊疗方案（试行第五版）</a></li><li><a href="https://chinadigitaltimes.net/chinese/tag/cds%E6%A1%A3%E6%A1%88/">CDS档案 中国数字时代</a></li></ul><h2 id="新闻类"><a href="#新闻类" class="headerlink" title="新闻类"></a>新闻类</h2><h4 id="发布日期：2019-12-31"><a href="#发布日期：2019-12-31" class="headerlink" title="发布日期：2019-12-31"></a>发布日期：2019-12-31</h4><blockquote><ul><li><a href="https://skypost.ulifestyle.com.hk/article/2531011/%E5%85%A7%E5%9C%B0%E7%96%91%E7%88%86%E7%99%BC%E3%80%8C%E6%96%B0%E6%B2%99%E5%A3%AB%E3%80%8D%20%E6%AD%A6%E6%BC%A2%E6%B5%B7%E9%AE%AE%E5%B8%82%E5%A0%B47%E4%BA%BA%E6%9F%93%E8%82%BA%E7%82%8E%E9%9C%80%E9%9A%94%E9%9B%A2">內地疑爆發「新沙士」 武漢海鮮市場7人染肺炎需隔離</a>  摘要：內地微博昨晚起流傳一份由武漢市市衞生健康委發出、名為《關於做好不明原因肺炎救治工作的緊急通知》、一份《關於不明原因肺炎救治情況的緊急通知書》文件以及武漢大學內部對話截圖，指武漢市華南水果海鮮市場確診7宗不明原因肺炎個案，患者現正接受隔離，另確診一宗非典型肺炎合併冠狀病毒感染。</li><li><a href="http://www.bjnews.com.cn/news/2019/12/31/668430.html">武汉疾控证实：当地现不明原因肺炎病人，发病数在统计  ——新京报</a>摘要：新京报快讯（记者 许雯）昨日晚间起，两份落款为武汉市卫健委的紧急通知在网络流传。文件透露，武汉市华南海鲜市场陆续出现不明原因肺炎病人。记者今日（12月31日）从武汉市疾控中心证实，该文件确实为真，目前发病人数尚在统计中，国家卫健委已派专家抵达武汉。</li></ul></blockquote><h4 id="发布日期：2020-1-2"><a href="#发布日期：2020-1-2" class="headerlink" title="发布日期：2020-1-2"></a>发布日期：2020-1-2</h4><h3 id="央视-新闻直播间-武汉8名散布肺炎疫情谣言者被查处！-摘要：1月1日武汉警方依法查处八名散布肺炎疫情谣言者"><a href="#央视-新闻直播间-武汉8名散布肺炎疫情谣言者被查处！-摘要：1月1日武汉警方依法查处八名散布肺炎疫情谣言者" class="headerlink" title="&gt; * 央视-新闻直播间 : 武汉8名散布肺炎疫情谣言者被查处！  摘要：1月1日武汉警方依法查处八名散布肺炎疫情谣言者"></a>&gt; * <a href="https://www.iqiyi.com/v_19rwfi7o6s.html">央视-新闻直播间 : 武汉8名散布肺炎疫情谣言者被查处！</a>  摘要：1月1日武汉警方依法查处八名散布肺炎疫情谣言者</h3><h4 id="发布日期：2020-1-3"><a href="#发布日期：2020-1-3" class="headerlink" title="发布日期：2020-1-3"></a>发布日期：2020-1-3</h4><blockquote><ul><li><a href="http://www.nbd.com.cn/articles/2020-01-03/1398167.html">武汉发现不明原因肺炎患者44例 未发现明显人传人证据   ——每日经济新闻</a></li></ul></blockquote><h4 id="发布日期：2020-1-4"><a href="#发布日期：2020-1-4" class="headerlink" title="发布日期：2020-1-4"></a>发布日期：2020-1-4</h4><blockquote><ul><li><a href="https://news.ifeng.com/c/7sxfPA6a2DI">因武汉不明原因肺炎，香港启动“严重”应变级别  ——凤凰网</a>  摘要：香港特区政府今日公布对公共卫生有重要性的新型传染病准备及应变计划，并同时启动严重应变级别，即时生效。</li></ul></blockquote><h4 id="发布日期：2020-1-7"><a href="#发布日期：2020-1-7" class="headerlink" title="发布日期：2020-1-7"></a>发布日期：2020-1-7</h4><blockquote><ul><li><a href="https://news.mingpao.com/ins/%e6%b8%af%e8%81%9e/article/20200107/s00001/1578377615835/%e3%80%90%e6%ad%a6%e6%bc%a2%e8%82%ba%e7%82%8e%e3%80%91%e6%94%bf%e5%ba%9c%e5%91%a8%e4%b8%89%e5%88%8a%e6%86%b2-%e6%ad%a6%e6%bc%a2%e4%b8%8d%e6%98%8e%e8%82%ba%e7%82%8e%e7%b4%8d%e6%b3%95%e5%ae%9a%e9%a0%88%e5%91%88%e5%a0%b1%e5%82%b3%e6%9f%93%e7%97%85">政府周三刊憲　武漢不明肺炎納法定須呈報傳染病  ——明报新闻网</a>  摘要：衛生署宣布，政府將於明日（8日）在憲報刊登《2020年預防及控制疾病（修訂）規例》及《2020年預防及控制疾病條例（修訂附表1）公告》，將「嚴重新型傳染性病原體呼吸系統病」（武漢不明病毒性肺炎）納入法定須呈報傳染病。</li></ul></blockquote><h4 id="发布日期：2020-1-9"><a href="#发布日期：2020-1-9" class="headerlink" title="发布日期：2020-1-9"></a>发布日期：2020-1-9</h4><blockquote><ul><li><a href="https://news.sina.cn/gn/2020-01-09/detail-iihnzhha1262297.d.html">武汉肺炎：疫情病原体初步判定为新型冠状病毒  ——新浪新闻</a>  摘要：就武汉不明原因的病毒性肺炎疫情病原学鉴定进展问题，记者今天从病原检测结果初步评估专家组了解到，截至2020年1月7日21时，实验室检出一种新型冠状病毒，获得该病毒的全基因组序列，经核酸检测方法共检出新型冠状病毒阳性结果15例，从1例阳性病人样本中分离出该病毒，电镜下呈现典型的冠状病毒形态。</li></ul></blockquote><h4 id="发布日期：2020-1-13"><a href="#发布日期：2020-1-13" class="headerlink" title="发布日期：2020-1-13"></a>发布日期：2020-1-13</h4><blockquote><ul><li><a href="https://news.mingpao.com/ins/%E6%B8%AF%E8%81%9E/article/20200113/s00001/1578913739151/%E3%80%90%E6%AD%A6%E6%BC%A2%E8%82%BA%E7%82%8E%E3%80%91%E8%8F%AF%E5%A9%A6%E6%B3%B0%E5%9C%8B%E7%A2%BA%E8%A8%BA-%E5%B1%AC%E9%A6%96%E5%AE%97%E8%BC%B8%E5%87%BA%E5%80%8B%E6%A1%88">【武漢肺炎】華婦泰國確診　屬首宗輸出個案 (19:15)</a>  摘要：泰國衛生部稱，當局自本月3日起，在布吉、清邁等多個機場對來自武漢的旅客實施監測措施，發現12名旅客有病徵，大部分為流感，當中8名病人發高燒，在本月8日起被隔離。昨日（12日）其中一個實驗室樣本測試發現新型冠狀病毒，是當地首宗確診感染個案，亦是首宗新型冠狀病毒輸出個案。</li><li><a href="https://news.un.org/zh/story/2020/01/1049052">世卫组织：一名武汉新型冠状病毒感染者在泰国确诊</a>  摘要：世界卫生组织今天表示，一名从中国武汉前往泰国旅游的游客1月8日在泰国被确诊为感染了新型冠状病毒，并于当天被送往泰国的医院接受治疗。这也是首例在中国以外地区发现的感染病例。世卫组织表示，鉴于目前情况，该组织可能将于近期召开紧急委员会会议对疫情进行评估。</li><li><a href="https://www.cna.com.tw/news/firstnews/202001130137.aspx">2019新型冠狀病毒 台灣專家抵武漢查訪疫情  ——台湾中央通讯社</a>  摘要：（中央社記者陳偉婷台北13日電）中國武漢肺炎疫情肇因於新型冠狀病毒，世界衛生組織（WHO）已命名為2019-nCoV（2019新型冠狀病毒）。疾管署派2名專家到武漢查訪，12日晚間抵達，將至少停留2天。</li></ul></blockquote><h4 id="发布日期：2020-1-16"><a href="#发布日期：2020-1-16" class="headerlink" title="发布日期：2020-1-16"></a>发布日期：2020-1-16</h4><blockquote><ul><li><a href="https://udn.com/news/story/6809/4290661">日本出現武漢肺炎首例！患者為中國籍曾前往湖北  ——udn</a> 摘要：日本共同社報導，日本政府相關消息人士16日透露，一名前往中國湖北省武漢市的大陸籍30多歲男子返日後，在2019新型冠狀病毒所引發肺炎的檢查中呈陽性反應。這是日本首次確認爆發此一病例。該名男子15日已出院。</li><li><a href="https://news.un.org/zh/story/2020/01/1049342">新型冠状病毒：日本确诊首例患者、武汉新增一例死亡  ——un</a>  摘要：世界卫生组织今天表示，已接到日本厚生劳动省通知，该国确诊一例新型冠状病毒感染病例，患者曾经前往武汉。这是继13日泰国发现一例确诊病例之后，第二例在中国之外发现的确诊病例。世卫组织表示，考虑到当前的全球旅行模式，“在其他国家进一步发现病例是可能的”。</li></ul></blockquote><h4 id="发布日期：2020-1-19"><a href="#发布日期：2020-1-19" class="headerlink" title="发布日期：2020-1-19"></a>发布日期：2020-1-19</h4><blockquote><ul><li><a href="https://www.cna.com.tw/news/firstnews/202001190173.aspx">武漢肺炎病例增 WHO確認病毒有限度人傳人  ——台湾中央通讯社</a>  摘要：（中央社記者唐佩君布魯塞爾19日專電）世界衛生組織（WHO）今天表示，依最新分析，「2019新型冠狀病毒」（2019－nCoV）是有限度人傳人，正密切監測評估人際傳播範圍，將視發展必要時召開緊急會議研商。</li></ul></blockquote><h4 id="发布日期：2020-1-20"><a href="#发布日期：2020-1-20" class="headerlink" title="发布日期：2020-1-20"></a>发布日期：2020-1-20</h4><blockquote><ul><li><a href="https://news.rthk.hk/rthk/ch/component/k2/1503834-20200120.htm">上海出現首宗輸入性新型冠狀病毒肺炎確診病例  ——rthk</a>  摘要：國家衛健委確認，上海市首例輸入性的新型冠狀病毒感染肺炎確診病例。患者是一名56歲女性，戶籍是湖北武漢，本月12日從武漢到上海後，有發熱、乏力等徵狀，經上海市疾控部門檢測，並經中國疾控中心覆核，新型冠狀病毒核酸檢測結果為陽性，經評估確認為確診病例，目前患者體溫正常，生命體徵平穩，她在上海的2名密切接觸者，正接受醫學觀察。</li><li><a href="https://www.bbc.com/zhongwen/trad/chinese-news-51171551">武漢肺炎：中國首次公布武漢外確診病例，韓國發現確診病例   ——BBC</a>  摘要：韓聯社周一（1月20日）中午引述韓國疾病管理本部消息稱，19日從中國武漢通過仁川國際機場入境的一名中國籍女性被確診感染所謂「武漢肺炎」的新型冠狀病毒肺炎。該患者在仁川機場被發現有高燒等症狀而被隔離，目前轉入醫療機構接受治療。</li><li><a href="https://china.huanqiu.com/article/9CaKrnKoZPT">钟南山肯定新型冠状病毒肺炎人传人  ——环球网</a>  摘要：钟南山：根据目前的资料，新型冠状病毒肺炎是肯定的人传人，在广东有2个病例，没去过武汉，但家人去了武汉后染上了新型冠状病毒肺炎，现在可以说，肯定的，有人传人现象。</li><li><a href="http://m.news.cctv.com/2020/01/20/ARTIWyQJt3xQRBnRJ3M89SpW200120.shtml">习近平对新型冠状病毒感染的肺炎疫情作出重要指示  ——央视网</a></li><li><a href="https://www.youtube.com/watch?time_continue=4&v=LPOpdbwiaiY&feature=emb_logo">世卫组织：有关冠状病毒的问答</a></li></ul></blockquote><h4 id="发布日期：2020-1-21"><a href="#发布日期：2020-1-21" class="headerlink" title="发布日期：2020-1-21"></a>发布日期：2020-1-21</h4><blockquote><ul><li><a href="https://www.bbc.com/zhongwen/trad/world-51199732">武漢肺炎：美國西雅圖確診第一例  ——BBC</a>  摘要：美國疾病控制與預防中心（CDC）21日下午宣佈，確診的患者是一名30多歲的男子，在1月15日從武漢返回華盛頓州西雅圖，隨後前往華盛頓州的一家醫院就診。有鑒於其旅行記錄及症狀，院方懷疑他感染了2019-nCov新型冠狀病毒，立即將他的生理樣本送往CDC檢驗，隨即確診。該中心的團隊正在華盛頓州當地進行調查，並且監控與患者有過密切接觸之人士的健康狀況。</li><li><a href="https://news.rthk.hk/rthk/ch/component/k2/1504056-20200121.htm">袁國勇稱疫情可能已進入第三波傳播  ——rthk</a>  摘要：曾經到武漢視察情況的港大微生物學系講座教授袁國勇說，疫情可能已進入第三波傳播，即是在家庭或醫院傳播，擔心如果病毒在社區大爆發，情況類似當年沙士，他強調不可讓病毒在其他城市「落地生根」。</li><li><a href="https://cn.reuters.com/article/cctv-wuhan-coronavirus-control-0121-idCNKBS1ZK07N">武汉成立新型冠状病毒肺炎疫情防控指挥部 升级防控措施–央视</a>摘要：路透北京1月21日 - 中国武汉市周一成立新型冠状病毒肺炎疫情防控指挥部，统一领导、指挥全市疫情防控工作，要求采取更严格的举措，内防扩散、外防输出，防止疫情扩散蔓延。央视新闻客户端援引指挥部工作会议内容称，要求全力做好患者救治工作，按照国家、省、市联合制定的诊疗方案开展规范、精准救治，对重症患者“一人一方案”“一人一团队”，确保轻症患者尽快治愈出院；强化医务人员防护，严格控制医院感染。</li><li><a href="https://www.thepaper.cn/newsDetail_forward_5588699">国家医保局：对确诊为新型肺炎患者采取特殊报销政策  ——澎湃新闻</a>摘要：针对此次疫情特点，医保局决定对确诊为“新型冠状病毒感染肺炎”等患者采取特殊报销政策。一是将国家卫生健康委《新型冠状病毒感染的肺炎诊疗方案》覆盖的药品和医疗服务项目，全部临时纳入医保基金支付范围。二是保证及时支付患者费用，特别是发挥医疗救助资金的兜底保障作用，打消患者就医顾虑。对异地就医患者先救治后结算，报销不再执行异地转外就医支付比例调减规定，减少患者流动带来的传染风险。三是对集中收治的医院，医保部门将预付资金减轻医院垫付压力，患者医疗费用不再纳入医院总额预算控制指标。</li><li><a href="http://www.sohu.com/a/368299105_161795">一罩难求：南都民调实测走访发现，线上线下口罩基本卖脱销  ——南方都市报</a>  摘要：广州消费监测榜课题组于1月21日通过搜索线上口罩旗舰店和实地走访市内8家药店、1家便利店，发现医用外科口罩、N95口罩及KN95口罩均卖到脱销，出现供不应求的情况。多数线上商家已卖断货，快递相继停运。特别是此前主打防霾、防粉尘、防病毒的3M KN95系列口罩，在多个电商平台处在“缺货”“无货”状态。</li><li><a href="http://economy.southcn.com/e/2020-01/21/content_190111854.htm">广东市场监管部门：将坚决打击囤积居奇、哄抬价格等行为</a>  　摘要：南方网讯（记者刘灏 通讯员粤市监）近日，受湖北省武汉市等多个地区发生新型冠状病毒感染的肺炎疫情影响，我省部分地市出现口罩等防控医药用品热销现象。广东省市场监管局对此高度重视，深入贯彻落实习近平总书记对新型冠状病毒感染的肺炎疫情的重要指示精神，按照国务院决策部署以及全国新型冠状病毒感染的肺炎疫情防控工作电视电话会议精神，遵照省政府的统一部署安排，迅速行动，采取多项措施部署开展相关医药用品价格监管工作，稳定价格秩序。</li><li><a href="https://china.kyodonews.net/news/2020/01/b67d76b73452.html">详讯：日本政府就中国新型肺炎召开阁僚会议</a>  摘要：【共同社1月21日电】关于中国湖北省武汉市等地疫情扩散的新型冠状病毒感染肺炎，日本政府21日召开了商讨对策的相关阁僚会议，决定贯彻边境口岸对策，切实把握患者情况，彻底收集信息，向国民迅速提供准确信息。</li></ul></blockquote><h4 id="发布日期：2020-1-22"><a href="#发布日期：2020-1-22" class="headerlink" title="发布日期：2020-1-22"></a>发布日期：2020-1-22</h4><blockquote><ul><li><a href="https://web.archive.org/web/20200123065804/http://www.bjnews.com.cn/news/2020/01/22/677798.html">新型冠状病毒来源于武汉海鲜市场销售的野生动物  ——新京报</a>  摘要：新京报快讯（记者 应悦）中国科学院院士、中国疾病预防控制中心主任高福在今日（1月22日）的发布会上表示，新型冠状病毒的来源是武汉一家海鲜市场非法销售的野生动物。</li><li><a href="http://cablenews.i-cable.com/ci/videopage/news/15964">武漢專家組成員王廣發向本台證實確診新型肺炎  ——有線新聞</a>   摘要：內地疫情擴散，連去武漢實地調查的專家都受到感染。國家衛健委武漢肺炎專家組成員王廣發向我們證實，已確診染上武漢肺炎。王廣發是北大第一醫院呼吸和危重症醫學科主任醫師，國家衛健委專家組早前曾去武漢了解疫情，王廣發曾在10日接受過中央電視台訪問時，指病毒的致病性較弱，疫情仍可控。</li><li><a href="http://cablenews.i-cable.com/ci/videopage/news/15973">袁國勇：新型肺炎疫情或進入第三波　鍾南山：內地醫院防控不足  ——有線宽频</a>  摘要：鍾南山再解釋醫院感染個案，一個腦外科病人感染十四個醫護人員，醫護都不是收症的傳染科，而是神經外科的醫護，主要是醫護防感染控制做得不好。兩個專家都指內地沒有隱瞞疫情。袁國勇指突然出現這麼多個案是由於內地有快速測試，開始廣泛應用。</li><li><a href="http://www.xinhuanet.com/2020-01/22/c_1125494422.htm">疫情存在扩散风险 防控措施全面升级——新型冠状病毒感染肺炎疫情防控焦点回应  ——新华网</a></li><li><a href="http://www.chinanews.com/gn/2020/01-22/9067622.shtml">武汉要求在公共场所佩戴口罩  ——中国新闻网</a>摘要：中新网1月22日电 据湖北省武汉市网信办微博消息，武汉市政府今日发布《关于在公共场所实施佩戴口罩有关措施的通告》(以下简称《通告》)。《通告》称，各公共场所经营者应当要求进入其场所的顾客佩戴口罩后方可进入其经营的公共场所，国家机关、企事业单位工作人员在岗期间应当佩戴口罩。</li><li><a href="http://www.bjnews.com.cn/edu/2020/01/22/677907.html">教育部：各校非必要不举办聚集性活动  ——新京报</a></li><li><a href="https://www.guancha.cn/politics/2020_01_22_532701.shtml?s=zwytt">湖北拟请求国家紧急支援口罩、防护服等医用物资</a>  摘要：截至31日，湖北本省只能生产医用口罩800万个，防护服200万套，红外测温仪1200套，不能满足全省防疫需要。湖北省拟向国家请求紧急支援，调拨医用口罩4000万个、防护服500万套、红外测温仪5000套。</li><li><a href="https://china.huanqiu.com/article/9CaKrnKp1gO">口罩脱销？多家厂商召回工人加急生产，优先供应医院疾控中心</a></li></ul></blockquote><h4 id="发布日期：2020-1-23"><a href="#发布日期：2020-1-23" class="headerlink" title="发布日期：2020-1-23"></a>发布日期：2020-1-23</h4><blockquote><ul><li><a href="http://society.people.com.cn/n1/2020/0123/c1008-31560436.html">武汉公交地铁轮渡长途客运23日起停运  ——人民网</a>  摘要：人民网北京1月23日电 据武汉市官方微信“武汉发布”消息，武汉市新型冠状病毒感染的肺炎疫情防控指挥部发布通告称，自2020年1月23日10时起，武汉全市城市公交、地铁、轮渡、长途客运暂停运营；无特殊原因，市民不要离开武汉，机场、火车站离汉通道暂时关闭。</li><li><a href="https://baijiahao.baidu.com/s?id=1656499344936448501&wfr=spider&for=pc">湖北封闭多处高速公路收费站口 ——新华网</a>  摘要：记者从湖北省高速公路管理部门获悉，目前，湖北省内龚家岭、小军山、汉南、北湖、花山、柏泉、青龙、西湖站入口封闭。G4京港澳高速凤凰山、江夏所、武汉南、安山、金口、军山、永安、武汉西、蔡甸、武汉北入口封闭。其它出武汉市的高速公路口也已开始封闭。</li><li><a href="https://www.cdc.gov.tw/Category/ListContent/EmXemht4IT-IRAPrAnyG9A?uaid=2dyV6r-YMcyNXO_uKdenXQ">因應武漢肺炎疫情，台湾中央流行疫情指揮中心疫情等級提升至第二級，春節期間各項防疫工作不放鬆，共同維護岛民健康  ——台湾卫生福利部疾病管制署</a></li><li><a href="https://www.thestandnews.com/china/%E6%AD%A6%E6%BC%A2%E8%82%BA%E7%82%8E-%E4%B8%AD%E5%9C%8B%E5%B0%88%E5%AE%B6%E5%8C%97%E5%A4%A7%E7%8E%8B%E5%BB%A3%E7%99%BC-%E7%97%85%E6%83%85%E5%A5%BD%E8%BD%89-%E9%98%B2%E8%AD%B7%E7%9B%B2%E9%BB%9E%E6%88%96%E5%9C%A8%E6%B2%92%E6%88%B4%E9%98%B2%E8%AD%B7%E9%8F%A1-%E4%BF%A1%E7%96%AB%E6%83%85%E7%B5%82%E7%A9%B6%E5%8F%AF%E6%8E%A7/">中國專家北大王廣發：病情好轉　防護盲點或在沒戴防護鏡　信疫情終究可控  ——立场报道</a>  摘要：確診染上新型冠狀病毒肺炎的北京大學第一醫院呼吸和危重症醫學科主任醫師王廣發，在微博發文，表示自己病情已好轉，又說回想自己身為專家，何以會受感染，認為最大可能是沒有戴防護鏡。</li><li><a href="https://www.thepaper.cn/newsDetail_forward_5612306">体育总局：防控疫情，取消举办体育六艺系列活动之乐动冰雪  ——澎湃新闻</a></li><li><a href="http://cn.chinadaily.com.cn/a/202001/23/WS5e293a60a3107bb6b579b670.html">武汉市新型肺炎防控指挥部发布第3号通告 接收社会各界爱心捐赠</a>  摘要：中国日报1月23日电 武汉市新型肺炎防控指挥部今天14点发布第3号通告 ，通告称：为做好社会各界捐赠武汉市抗击疫情的医用耗材、防护用品等物质接收调配工作，现开通24小时电话接收社会各界爱心捐赠。武汉市红十字会电话：027-82788599，027-82210181，027-82812604，027-82858499，027-82856122。联系人：骆钢强 13297963117。</li></ul></blockquote><h4 id="发布日期：2020-1-24"><a href="#发布日期：2020-1-24" class="headerlink" title="发布日期：2020-1-24"></a>发布日期：2020-1-24</h4><blockquote><ul><li><a href="https://www.zaobao.com.sg/realtime/singapore/story20200124-1023729">新加坡出现多两起武汉肺炎确诊病例</a>  摘要：新加坡出现多两起武汉肺炎确诊病例，分别为昨天（1月23日）确诊的66岁男性武汉居民的37岁儿子，以及昨天被列为初步阳性病例的53岁女性武汉居民。截至今天（24日）中午12时，本地共有三起确诊病例。</li><li><a href="https://www.cdc.gov.tw/Bulletin/Detail/ozDpnZZxwa-kBKTXbdS0Kw?typeid=9">台湾新增確診二例嚴重特殊傳染性肺炎境外移入個案，指揮中心持續中港澳旅客主動關懷機制，全力守護國內防疫安全  —-台湾卫生福利部疾病管制署</a>  摘要：中央流行疫情指揮中心今(24)日公布新增確診2例境外移入嚴重特殊傳染性肺炎個案，分別為50多歲中國大陆籍女性(案1)及50多歲男性(案2)，皆為1月21日入境；案1為1月23日因發燒就醫，案2於1月20日出現感冒症狀、於1月23日就醫。因兩位皆有武漢旅遊或居住史，符合通報定義，經醫院隔離採檢後確認為新型冠狀病毒陽性，目前持續於醫院負壓隔離病房治療中。案1密切接觸者計19人，案2密切接觸者計11人，目前健康狀況皆良好；其餘相關接觸者疫調中，衛生單位將持續進行主動健康監測。</li><li><a href="https://cn.yna.co.kr/view/ACK20200124000400881">快讯：韩国出现第二例新型冠状病毒肺炎确诊病例  ——韩联社</a></li><li><a href="http://www.chinanews.com/gn/2020/01-24/9068866.shtml">北京确诊新型肺炎29例 启动突发公共卫生事件一级响应  ——中国新闻网</a>摘要：武汉等地发生新型冠状病毒感染的肺炎疫情后，北京市启动突发公共卫生事件一级响应机制，把全力做好疫情防控工作作为当前重中之重任务，落实责任、关口前移、多措并举、严加防控，及时回应社会关切。北京市发布101所设有发热门诊的医疗机构名单和发热患者就诊指南，引导发热患者规范有序就医，减少交叉感染。针对冬春季传染病防治，连续发布健康教育和提示信息，引导公众采取健康行为。</li><li><a href="https://www.yicai.com/news/100480181.html">全国多地启动一级响应抗疫情，湖南取消南岳祈福等活动  ——第一财经</a>摘要：全国各地应对疫情的措施正在不断升级。继广东、浙江启动重大突发公共卫生事件一级响应之后，湖南也启动一级响应。另外，北京取消包括庙会在内的大型活动，武汉文娱场所暂停营业。</li><li><a href="https://www.dwnews.com/%E4%B8%AD%E5%9B%BD/60166093/%E6%AD%A6%E6%B1%89%E8%82%BA%E7%82%8E%E7%96%AB%E6%83%85%E4%B8%AD%E5%9B%BD18%E7%9C%81%E5%B8%82%E5%90%AF%E5%8A%A8%E4%B8%80%E7%BA%A7%E5%93%8D%E5%BA%94">中国18省市启动一级响应  ——多维新闻</a>摘要：1月23日，广东、湖南和浙江三省率先启动重大突发公共卫生事件一级响应。1月24日，武汉所在的湖北省启动一级响应。1月24日中午，天津市启动《天津市应对新型冠状病毒感染的肺炎应急预案》一级响应。随后，安徽、北京、上海、重庆、四川、江西、云南、贵州、山东、福建、广西自治区、河北、江苏决定启动重大突发公共卫生事件一级响应。</li><li><a href="https://www.thepaper.cn/newsDetail_forward_5622766">中宣部、广电总局紧急协调向湖北、武汉电视台捐赠电视剧版权  ——澎湃新闻</a></li></ul></blockquote><h4 id="发布日期：2020-1-25"><a href="#发布日期：2020-1-25" class="headerlink" title="发布日期：2020-1-25"></a>发布日期：2020-1-25</h4><blockquote><ul><li><a href="http://cablenews.i-cable.com/ci/videopage/news/16260">醫學分析指病毒可有效人傳人 發病初期未必會發燒</a>  摘要：流行病學分析方面，第一個病人在12月1日確診，他的家人都沒有感冒或呼吸道病徵，之後感染的病人和他都沒有流行病學聯繫。   </li><li><a href="https://tw.news.appledaily.com/international/20200125/ADDJEZD7HUROIL2PY56NHMKWVM/">武漢肺炎攻入歐洲　法國確診3起病例   ——appledaily</a>  摘要：法國衛生部長布辛（Agnes Buzyn）周五（1&#x2F;24）宣布，法國確診兩起新型冠狀病毒感染肺炎病例，是歐洲境內的首例。據悉，兩名患者都曾到過中國，目前正被隔離治療。約3小時後，法國當局宣布確診第3起病例。</li><li><a href="https://www.orientaldaily.com.my/news/nation/2020/01/25/324015">柔现3宗武汉肺炎病例  ——orientaldaily</a>  摘要：（布城25日讯）我国出现3宗武汉肺炎确诊病例。卫生部长拿督斯里祖基菲里证实，柔佛出现3宗武汉肺炎（2019年新型冠状病毒）病例。3宗均被确诊为武汉肺炎病例，是来自武汉游客，与新加坡首宗确诊病例，即66岁来自中国武汉的病患有亲属关系，包括该病患的妻子，和2名分别为2岁及11岁男孙。他们一行10人，是在1月20日于广州乘坐一架飞机飞往新加坡渡假，之后66岁病患和其儿子在新加坡被确诊为武汉肺炎。</li><li><a href="https://hk.news.appledaily.com/international/20200124/GANZBKNGR5JF5K3E7GIJIWEB5I/">尼泊爾首宗個案 留學生返國後確診  ——appledaily</a>  摘要：武漢肺炎疫情持續蔓延，尼泊爾周五確診首宗個案，患者是一名在武漢留學的尼泊爾學生，他近日返國後證實染病。美國疾控中心亦證實，在芝加哥確診美國本土的第二宗個案。另外，繼南韓及日本周五確診第二宗病例後，新加坡再確診兩宗個案，令總數增至三宗，其中一名患者是首名患者的兒子，另一人是來自武漢的53歲女子。泰國則確診第五宗病例，患者是武漢的33歲女性遊客。日本方面，第二名患者是在發病求醫後飛日本，在日本也求診兩次才確診，日本周五提升旅遊警示，呼籲國民不要前往湖北省。另外疫情已擴散到北美，加拿大當局周四表示有多宗懷疑個案，美國對武漢旅警升至最高級。土耳其亦證實，出現疑似冠狀病毒感染症狀求診的中國婦女來自武漢，已派醫療專機把她送回中國。</li><li><a href="https://www.thepaper.cn/newsDetail_forward_5635417">即日起，全国旅行社团队游全部暂停  ——澎湃新闻</a>  摘要：即日起，全国旅行社及在线旅游企业暂停经营团队旅游及“机票＋酒店”产品。已出行的旅游团队，可按合同约定继续完成行程。</li><li><a href="https://www.ithome.com/0/470/077.htm">驰援武汉，10家寄递企业开通“绿色通道”</a>  摘要：IT之家1月25日消息 1月25日大年初一，针对武汉等地的疫情，中国邮政、顺丰速运、京东物流、中通快递、圆通速递、申通快递、韵达速递、百世快递、德邦快递和苏宁物流宣布，将开通全国各地驰援武汉救援物资的特别通道，全力保障疫情防控相关物资运输。</li></ul></blockquote><h4 id="发布日期：2020-1-26"><a href="#发布日期：2020-1-26" class="headerlink" title="发布日期：2020-1-26"></a>发布日期：2020-1-26</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/Xq7jT0ErmFsIXZY5m3xoNQ">试剂盒困局：为何确诊这么难？  ——三联生活周刊</a></li><li><a href="https://mp.weixin.qq.com/s/uKACaGTi9vFBfGh7QqGixg">定了！北京、湖北等多地学校延迟开学</a></li></ul></blockquote><h4 id="发布日期：2020-1-27"><a href="#发布日期：2020-1-27" class="headerlink" title="发布日期：2020-1-27"></a>发布日期：2020-1-27</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/0R-It84QDAg8PPvcx23_cA">武汉市民一线报告：保障逐渐到达小区，生活还算正常  ——央视新闻</a></li></ul></blockquote><h4 id="发布日期：2020-1-28"><a href="#发布日期：2020-1-28" class="headerlink" title="发布日期：2020-1-28"></a>发布日期：2020-1-28</h4><blockquote><ul><li><a href="https://www.who.int/zh/news-room/detail/28-01-2020-who-china-leaders-discuss-next-steps-in-battle-against-coronavirus-outbreak">世卫组织与中国领导人讨论抗击冠状病毒疫情的下一步行动  ——-WHO</a></li></ul></blockquote><h4 id="发布日期：2020-1-29"><a href="#发布日期：2020-1-29" class="headerlink" title="发布日期：2020-1-29"></a>发布日期：2020-1-29</h4><blockquote><ul><li><a href="https://www.toutiao.com/i6787307914957685255/?tt_from=weixin_moments&utm_campaign=client_share&wxshare_count=2&from=timeline&timestamp=1580342401&app=news_article&utm_source=weixin_moments&utm_medium=toutiao_ios&req_id=2020013008000101012903403402973C82&group_id=6787307914957685255&pbid=6785548082924291595">刚刚，武汉警方回应“8人传谣被处理”  ——科技日报  今日头条</a>  摘要：2019年12月31日，武汉市卫健部门发布关于肺炎疫情的情况通报。随后，多名网民举报有人在网上传发不实信息。为查明情况，公安机关先后对8名行为人进行了调查、核实。根据调查情况，8人分别传发了“X医院已有多例SARS确诊病例”、“确诊了7例SARS”、“Y医院接收了一家三口从某洲回来的，然后就疑似非典了”等未经核实的信息。根据《中华人民共和国治安管理处罚法》的相关规定，因上述8人情节特别轻微，当时，公安机关分别进行了教育、批评，均未给予警告、罚款、拘留的处罚。</li><li><a href="http://www.rfi.fr/tw/%E4%B8%AD%E5%9C%8B/20200129-%E6%AD%A6%E6%BC%A2%E8%82%BA%E7%82%8E-%E6%92%A4%E5%83%91-%E9%9C%87%E5%8B%95%E4%B8%96%E7%95%8C%E7%9A%84%E8%A9%9E%E8%AA%9E">武漢肺炎 震動世界大撤僑  ——rfi</a>  摘要：儘管世界衛生組織總幹事譚德塞訪問北京做出最為重要的表態，不贊成各國從中國撤僑，並息事寧人說武漢肺炎疫情沒有那麼嚴重而不要過分反應，但是世界各國紛紛從中國撤僑。而且撤回的僑民如何被檢查隔離，也大傷腦筋。日本與美國各自撤僑的班機首架都已經返國。</li></ul></blockquote><h4 id="发布日期：2020-1-30"><a href="#发布日期：2020-1-30" class="headerlink" title="发布日期：2020-1-30"></a>发布日期：2020-1-30</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/6BOUde9gZNkpQ8jn13TUqA">“肺炎疫情一线岗位全部换上党员，没有讨价还价！”  ——央视新闻</a>  摘要：1月29日，新型冠状病毒感染肺炎上海医疗救治专家组组长、复旦大学附属华山医院传染科主任张文宏在接受媒体采访时表示，每周自己都会去隔离病区查房，为的是消除一线的医生对新型冠状病毒的恐惧。同时决定，把从新年到现在值班的感染科一线医生进行换岗，换成共产党员医生到一线工作，这都是事先不打招呼，直接派遣</li><li><del><a href="https://mp.weixin.qq.com/s/HJjLJSRodxb1dKtfiq9OMg">震惊！武汉8名“造谣者”竟然都是医生，向他们致敬！</a></del>  已无法访问</li><li><a href="https://www.bilibili.com/video/av85700793?t=950">【新闻1+1】确诊病例超SARS，疫情是否比SARS严重？  ——央视新闻</a></li><li><a href="https://www.guancha.cn/politics/2020_01_30_533707.shtml">低价卖援助蔬菜？武汉市商务局、红十字会回应  ——观察者网</a></li></ul></blockquote><h4 id="发布日期：2020-1-31"><a href="#发布日期：2020-1-31" class="headerlink" title="发布日期：2020-1-31"></a>发布日期：2020-1-31</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/ASKlu7Aq-f0-BXyD0git9Q">世卫组织正式将武汉肺炎定性为“国际关注的突发公共卫生事件”！  ——杨大可  DeepTech深科技</a></li><li><a href="https://mp.weixin.qq.com/s/q4dYXzteJ_jprOwi3aGTmw">外交部回应世卫组织将疫情列为国际关注突发公共卫生事件  ——央视新闻</a>  摘要：新型冠状病毒感染的肺炎疫情发生以来，中国政府一直本着对人民健康高度负责的态度，采取了最全面、最严格的防控举措，很多举措远超出《国际卫生条例》要求，中方完全有信心和能力，打赢这场疫情防控阻击战。<br>同时，中方本着公开透明和负责任态度向有关各方及时通报疫情信息、分享病毒基因序列。世界卫生组织及许多国家对此予以充分肯定和高度评价。<br>中国同世卫组织一直保持着密切沟通和良好合作，世卫组织专家赴武汉进行了实地考察，总干事谭德塞于日前访华，同中方就疫情防控工作充分交换了意见，对中方防控工作给予充分肯定，对中国抗击疫情为世界作出的巨大贡献表示高度赞赏。中方愿继续同世卫组织及各国一道，共同维护全球和地区公共卫生安全。</li><li><a href="https://www.guancha.cn/politics/2020_01_31_533856.shtml">莆田系医院获赠1.6万个N95口罩？湖北红十字会：正在核查  ——观察者网</a></li><li><a href="https://mp.weixin.qq.com/s/TY8fteNw0JACFeATYu3C7A">武汉的药店都开门了吗？都能买到啥？总台记者带你去看看  ——央视新闻</a></li><li><a href="http://www.rfi.fr/tw/%E4%B8%AD%E5%9C%8B/20200131-%E5%AE%89%E5%80%8D%E7%A6%81%E6%AD%A2%E4%BE%86%E8%87%AA%E6%B9%96%E5%8C%97%E5%A4%96%E7%B1%8D%E4%BA%BA%E5%A3%AB%E5%85%A5%E5%A2%83%E6%97%A5%E6%9C%AC-%E9%9F%93%E5%9C%8B%E7%AC%AC%E4%BA%8C%E6%9E%B6%E5%8C%85%E6%A9%9F%E9%A3%9B%E5%BE%80%E6%AD%A6%E6%BC%A2">安倍：禁止來自湖北外籍人士入境日本 韓國第二架包機飛往武漢  ——rfi</a>  摘要：日本首相安倍晉三周六宣布，從2月1日凌晨0時起，禁止申請入境日本前14天以內滯留湖北省的外籍人士，以及持湖北省所發行的護照的外籍人士入境。這是日本政府首度根據出入境管理法針對特定地區做出禁止入境的措施。安倍在會議上表示，在無法確認是否感染新型冠狀病毒的情況，將採取空前的因應，有必要大幅加強入境管理。因為已查出有些人雖沒有武漢肺炎癥狀但卻是確診病例，因此有必要提高邊境管制管理的實際成效。自東京方面消息，日本政府周五表示，早前由武漢返日的第三班撤僑包機的149人中，不適送院的人數增至25人。韓國政府並於當天確認在從武漢及附近地區撤離的368名韓國公民中，已有18人因出現發熱等癥狀在抵達首爾後被送醫。</li></ul></blockquote><h4 id="发布日期：2020-2-1"><a href="#发布日期：2020-2-1" class="headerlink" title="发布日期：2020-2-1"></a>发布日期：2020-2-1</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/efr3OxKMw3_WAsNCf5HksQ">最新！全国新增2102例 累计确诊病例超万人  ——央视新闻</a></li><li><a href="https://mp.weixin.qq.com/s/91ZsOGEamSAdybNkGlHQtg">武汉市委书记自责：如果早一点决定，结果会比现在好  ——央视新闻</a></li><li><a href="https://mp.weixin.qq.com/s/bbJRsPWEc2EbSyl89w2PUQ">捐了那么多东西怎么还缺？总台记者探访武汉市红十字会  ——央视新闻</a></li><li><a href="http://www.rfi.fr/tw/%E4%B8%AD%E5%9C%8B/20200201-%E4%B8%AD%E5%9C%8B%E6%96%B0%E5%86%A0%E7%97%85%E6%AF%92%E7%A2%BA%E8%A8%BA%E7%97%85%E4%BE%8B%E9%81%8E%E8%90%AC-%E6%AD%BB%E4%BA%A1258%E4%BE%8B-%E7%BE%8E%E5%9C%8B%E5%AE%A3%E5%B8%83%E6%96%B0%E5%86%A0%E7%97%85%E6%AF%92%E7%82%BA%E5%9C%8B%E5%AE%B6%E7%B7%8A%E6%80%A5%E4%BA%8B%E4%BB%B6">中國新冠病毒確診病例破萬 死亡259例 美國宣布新冠病毒為國家緊急事件  ——rfi</a>  摘要：根據中國官方最新數據，中國新型冠狀病毒確診病例超過11000人，死亡259人，湖北確診病例24小時猛增1347例。與此同時，美國政府宣布新冠病毒為國家緊急事件，禁止近期去過中國的外國公民入境。</li><li><a href="http://www.rfi.fr/tw/%E4%B8%AD%E5%9C%8B/20200201-%E8%A2%AB%E6%8C%87%E7%96%AB%E6%83%85%E4%B8%AD%E9%80%B2%E8%A1%8C%E5%AE%9A%E5%90%91%E6%8D%90%E8%B4%88-%E6%B9%96%E5%8C%97%E7%9C%81%E7%B4%85%E5%8D%81%E5%AD%97%E6%9C%83%E9%81%AD%E8%BC%BF%E8%AB%96%E8%B3%AA%E7%96%91%E6%89%B9%E8%A9%95">被指疫情中進行定向捐贈 湖北省紅十字會遭輿論質疑批評  ——rfi</a></li><li><a href="https://www.bilibili.com/video/av86093004">协和医院医生穿垃圾袋进行防护？院方回应来了  ——央视新闻  bilibili</a></li></ul></blockquote><h4 id="发布日期：2020-2-2"><a href="#发布日期：2020-2-2" class="headerlink" title="发布日期：2020-2-2"></a>发布日期：2020-2-2</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/2KNkx7wZKMxZsgWvWYbZeA">最新！湖北昨日新增确诊2103例，累计确诊超万例  ——央视新闻</a></li><li><a href="https://mp.weixin.qq.com/s/aRPAk-pB6QTTL7dZx8ydcg">火神山医院交付军方 明日开始收治病人 140秒视频看“火神”速度  ——央视新闻</a></li></ul></blockquote><h4 id="发布日期：2020-2-3"><a href="#发布日期：2020-2-3" class="headerlink" title="发布日期：2020-2-3"></a>发布日期：2020-2-3</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/73y-fbryUjilTcJ8zf3c0g">中央军委批准！军队承担武汉生活物资配送供应任务</a> </li><li><a href="https://mp.weixin.qq.com/s/2e9ZmRxpoSDPhCiaCQfT_g">警惕！家中门把手首次发现病毒核酸</a></li></ul></blockquote><h4 id="发布日期：2020-2-4"><a href="#发布日期：2020-2-4" class="headerlink" title="发布日期：2020-2-4"></a>发布日期：2020-2-4</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/3dFyaRUu4jvMj9jF9Xd0Lw">现场视频！刚刚火神山医院收治首批患者  ——央视新闻</a></li><li><a href="https://mp.weixin.qq.com/s/rYrRiy6mjk8Vxzj1Gg7sWQ">湖北省红十字会3名领导被问责  ——央视新闻</a>  摘要：经调查，省红十字会有关领导和干部在疫情防控期间接收和分配捐赠款物工作中存在不担当不作为、违反“三重一大”规定、信息公开错误等失职失责问题，经湖北省纪委监委研究并报省委批准，决定免去张钦省红十字会党组成员、专职副会长职务，并给予其党内严重警告、政务记大过处分；给予省红十字会党组成员陈波党内严重警告、政务记大过处分；给予省红十字会党组书记、常务副会长高勤党内警告处分。省红十字会其他责任人员按照干部管理权限由有关党组织依纪依规处理。</li></ul></blockquote><h4 id="发布日期：2020-2-7"><a href="#发布日期：2020-2-7" class="headerlink" title="发布日期：2020-2-7"></a>发布日期：2020-2-7</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/uV6RPRXbvYb5iB_xx4cOGA">雷神山医院开展验收并逐步移交 3分钟视频见证“神速”  ——央视新闻</a></li></ul></blockquote><h4 id="发布日期：2020-2-7-1"><a href="#发布日期：2020-2-7-1" class="headerlink" title="发布日期：2020-2-7"></a>发布日期：2020-2-7</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/2NKlcB-6JDhjvipcDp-9kA">送别李文亮医生  ——央视新闻</a></li></ul></blockquote><h2 id="政府公告类-国际组织类"><a href="#政府公告类-国际组织类" class="headerlink" title="政府公告类&#x2F;国际组织类"></a>政府公告类&#x2F;国际组织类</h2><p>有关感染人数的通报在此不多罗列，详见<a href="https://3g.dxy.cn/newh5/view/pneumonia">全国新型肺炎疫情实时动态</a>。</p><h4 id="发布日期：2020-1-15"><a href="#发布日期：2020-1-15" class="headerlink" title="发布日期：2020-1-15"></a>发布日期：2020-1-15</h4><blockquote><ul><li><a href="https://www.who.int/internal-publications-detail/surveillance-case-definitions-for-human-infection-withnovel-coronavirus-(ncov)">新型冠状病毒（nCoV）感染人类的监测病例定义（英文）  ——who</a></li></ul></blockquote><h4 id="发布日期：2020-1-20-1"><a href="#发布日期：2020-1-20-1" class="headerlink" title="发布日期：2020-1-20"></a>发布日期：2020-1-20</h4><blockquote><ul><li><a href="http://www.nhc.gov.cn/jkj/s7916/202001/44a3b8245e8049d2837a4f27529cd386.shtml">中华人民共和国国家卫生健康委员会公告</a>  摘要：一、将新型冠状病毒感染的肺炎纳入《中华人民共和国传染病防治法》规定的乙类传染病，并采取甲类传染病的预防、控制措施。二、将新型冠状病毒感染的肺炎纳入《中华人民共和国国境卫生检疫法》规定的检疫传染病管理。</li></ul></blockquote><h4 id="发布时间：2020-1-22"><a href="#发布时间：2020-1-22" class="headerlink" title="发布时间：2020-1-22"></a>发布时间：2020-1-22</h4><blockquote><ul><li><a href="http://scjgj.beijing.gov.cn/zwxx/ttgg/202001/t20200122_1620613.html">市场价格行为提醒书  ——北京市市场监督管理局</a>  摘要：（五）不得捏造、散布涨价信息，哄抬价格，推动商品价格过高、过快上涨，扰乱市场价格秩序。（六）除生产自用外，不得超出正常的存储数量或者存储周期，大量囤积市场供应紧张、价格发生异常波动的商品。</li></ul></blockquote><h4 id="发布日期：2020-1-23-1"><a href="#发布日期：2020-1-23-1" class="headerlink" title="发布日期：2020-1-23"></a>发布日期：2020-1-23</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/SN3UrB8Y9YMbZUIX8Cc6vA">市新型冠状病毒感染的肺炎疫情防控指挥部通告（第1号）</a>  摘要：自2020年1月23日10时起，全市城市公交、地铁、轮渡、长途客运暂停运营；无特殊原因，市民不要离开武汉，机场、火车站离汉通道暂时关闭。恢复时间另行通告。</li><li><a href="http://www.bjnews.com.cn/news/2020/01/23/678604.html">广东省决定启动重大突发公共卫生事件一级响应</a></li><li><a href="https://www.who.int/zh/news-room/detail/23-01-2020-statement-on-the-meeting-of-the-international-health-regulations-(2005)-emergency-committee-regarding-the-outbreak-of-novel-coronavirus-(2019-ncov)">关于新型冠状病毒（2019-nCoV）疫情的《国际卫生条例（2005）》突发事件委员会会议的声明  ——who</a></li><li><a href="http://www.gov.cn/xinwen/2020-01/23/content_5471751.htm">武汉市新型冠状病毒感染的肺炎疫情防控指挥部通告（第1号）</a>  摘要：自2020年1月23日10时起，全市城市公交、地铁、轮渡、长途客运暂停运营；无特殊原因，市民不要离开武汉，机场、火车站离汉通道暂时关闭。恢复时间另行通告。</li><li><a href="http://www.gov.cn/xinwen/2020-01/23/content_5471853.htm">武汉市新型冠状病毒感染的肺炎防控指挥部通告（第2号）</a>  摘要：关闭离汉通道，是阻止疫情扩散的必要之举。面对新型冠状病毒感染的肺炎疫情，我们有习近平总书记的亲切关怀，有省委省政府的周密安排，有全国人民的关心支持，目前，武汉市大宗商品、食品、医疗防护用品等储备充分、供应顺畅。请广大市民不用恐慌，不必囤积，以免造成不必要的浪费。</li><li><a href="http://www.gov.cn/xinwen/2020-01/23/content_5471854.htm">武汉市新型冠状病毒感染的肺炎防控指挥部通告（第3号）</a>  摘要：为做好社会各界捐赠武汉市抗击疫情的医用耗材、防护用品等物资接收调配工作，现开通24小时电话接收社会各界爱心捐赠。<br>武汉市红十字会电话：027-82788599，027-82210181，027-82812604，027-82858499，027-82856122。<br>联系人：骆钢强 13297963117。</li></ul></blockquote><h4 id="发布日期：2020-1-24-1"><a href="#发布日期：2020-1-24-1" class="headerlink" title="发布日期：2020-1-24"></a>发布日期：2020-1-24</h4><blockquote><ul><li><a href="http://www.gov.cn/xinwen/2020-01/24/content_5471941.htm">武汉市新冠肺炎防控指挥部通告（第4号）</a>  摘要：一、接受捐赠主体<br>1.武汉市慈善总会负责接受捐款和通用物资，联系电话：027-85729696，027-85751277，027-85678311，027-85798437。联系人：汪亮 13627104336<br>接受捐赠户名：武汉市慈善总会；<br>账号：421860158018170139664；<br>开户行：交通银行湖北省分行营业部（860158）；<br>联行行号：301521000021<br>2.武汉市红十字会负责接受医用耗材、防护用品等专项物资。联系电话：027-82788599，027-82210181，027-82812604，027-82858499，027-82856122。联系人：骆钢强 13297963117<br>二、接受捐赠的物资<br>当前急需用于疫情防控的物资，包括：医用设备、医疗设备、试剂、药品、防护设备、消洗设备、耗材（其中口罩需求量较大）等。<br>暂不接受与疫情防控无关的物资和境外捐赠。<br>捐赠物资通行保障联系电话：市公安局周警官 027-85395087；章警官 18302795638；朱警官 18302795633<br>三、捐赠物资的使用<br>捐赠的款物原则上由武汉市新冠肺炎防控指挥部统一调配使用。武汉市慈善总会、武汉市红十字会将依法依规公布捐赠接收和使用情况，接受社会监督。</li><li><a href="http://www.gov.cn/xinwen/2020-01/24/content_5471944.htm">武汉市新冠肺炎防控指挥部通告（第5号）</a></li><li><a href="http://www.gov.cn/xinwen/2020-01/24/content_5472010.htm">武汉市新冠肺炎防控指挥部通告（第6号）</a>  摘要：为减少人员流动，降低感染风险，现就桥隧通行管理有关事项通告如下:<br>自2020年1月25日0时起，过江隧道关闭，三环内(含三环)过江桥梁通行实施体温检测管控。取消时间另行通告。</li><li><a href="http://www.gov.cn/xinwen/2020-01/24/content_5472017.htm">武汉市新型肺炎防控指挥部通告（第7号）</a>  摘要：一、全员排查发热病人。由全市各社区负责，全面排查所服务辖区发热病人(含已就医和未就医市民)，并送社区医疗中心对病情进行筛选、分类。对于需要到发热门诊的病人，各区统一安排车辆送达指定发热门诊就诊，指定发热门诊不得以任何理由拒收病人;对于不需要到发热门诊就诊的病人，由各社区落实在家居家观察，社区负责做好市民居家观察服务工作。<br>二、分类安排发热病人。已确定或高度疑似的新型冠状病毒感染的肺炎病人，由市卫健委负责，安排车辆送至指定治疗点治疗;疑似的发热病人，留在发热门诊留滞观察;发热情况较轻，还不能确定为疑似的病人，由各区负责接回指定地点隔离观察;确定不是新型冠状病毒感染的肺炎病人，由各区负责送回家中居家观察。</li><li><a href="http://www.gov.cn/xinwen/2020-01/24/content_5472045.htm">武汉市新型肺炎防控指挥部通告（第8号）</a>  摘要：为解决市民居家出行不便等问题，全市紧急征集6000台出租车，分配给中心城区。每个社区3-5台，由社区居委会统一调度使用，自2020年1月25日中午始，为辖区居民出行提供免费服务。社区居委会为生活不便居民上门免费提供送餐、送菜、送药等居家服务。</li></ul></blockquote><h4 id="发布日期：2020-1-25-1"><a href="#发布日期：2020-1-25-1" class="headerlink" title="发布日期：2020-1-25"></a>发布日期：2020-1-25</h4><blockquote><ul><li><a href="https://www.who.int/publications-detail/infection-prevention-and-control-during-health-care-when-novel-coronavirus-(ncov)-infection-is-suspected-20200125">感染预防和控制（英文）  ——who</a></li><li><a href="http://www.gov.cn/xinwen/2020-01/25/content_5472165.htm">武汉市新型肺炎防控指挥部通告（第9号）</a>  摘要：自2020年1月26日0时始，除经许可的保供运输车、免费交通车、公务用车外，中心城区区域实行机动车禁行管理。市民确有通行需求的，按指挥部第8号通告执行，各社区配备足够车辆保障需求。</li></ul></blockquote><h4 id="发布日期：2020-2-2-1"><a href="#发布日期：2020-2-2-1" class="headerlink" title="发布日期：2020-2-2"></a>发布日期：2020-2-2</h4><blockquote><ul><li><a href="http://www.gov.cn/xinwen/2020-02/02/content_5473924.htm">武汉市新型肺炎防控指挥部通告（第10号）</a>  摘要：根据《中华人民共和国传染病防治法》《突发公共卫生事件应急条例》和《武汉市新型冠状病毒感染的肺炎疫情防控暂行办法》相关规定，为进一步加强隔离观察工作，现就有关事项通告如下：<br>自通告发布之日起，在前期定点隔离和居家隔离基础上，<strong>对全市经发热门诊诊断有肺炎症状的发热病人和新型肺炎病人的密切接触者</strong>，由各区安排车辆分别送至区集中隔离观察点，进行医学观察、治疗或采取其他预防措施。具体隔离观察时间根据医学检查结果确定，患者应当予以配合；<strong>拒绝配合的，由公安机关依法协助强制执行</strong>。隔离期间，各区免费提供食宿、医学观察和治疗。其他发热病人由社区继续落实居家隔离观察措施。</li></ul></blockquote><h2 id="评论类-民间纪实类"><a href="#评论类-民间纪实类" class="headerlink" title="评论类&#x2F;民间纪实类"></a>评论类&#x2F;民间纪实类</h2><h4 id="发布日期：2020-1-22-1"><a href="#发布日期：2020-1-22-1" class="headerlink" title="发布日期：2020-1-22"></a>发布日期：2020-1-22</h4><blockquote><ul><li><a href="https://www.youtube.com/watch?v=cWrWYmgannw">从武汉疫情抓人事件~看极左翼媒体胡锡进谄媚洗地的逻辑陷阱  ——陈秋实 YouTube</a></li><li><a href="https://www.bilibili.com/video/av84495207">武汉up实拍，冠状病毒肺炎下，超市、商圈、公司现在是什么情况？  ——林晨同学  bilibili</a></li></ul></blockquote><h4 id="发布日期：2020-1-24-2"><a href="#发布日期：2020-1-24-2" class="headerlink" title="发布日期：2020-1-24"></a>发布日期：2020-1-24</h4><blockquote><ul><li><a href="https://www.bilibili.com/video/av84850049">武汉UP实拍，封城后的24小时，“空城”武汉的物价、交通 、生活状态  ——林晨同学  bilibili</a></li></ul></blockquote><h4 id="发布日期：2020-1-25-2"><a href="#发布日期：2020-1-25-2" class="headerlink" title="发布日期：2020-1-25"></a>发布日期：2020-1-25</h4><blockquote><ul><li><a href="https://www.youtube.com/watch?v=xwB3v6XTr90">平靜、有序和忙碌 | 陳秋實武漢中心醫院大年初一凌晨實訪錄 ——陈秋实 YouTube</a></li><li><a href="https://www.youtube.com/watch?v=0TeYqanyij8">多方動員向武漢 | 陳秋實武漢疫區大年初一中午總結報導  ——陈秋实 YouTube</a></li></ul></blockquote><h4 id="发布日期：20201-26"><a href="#发布日期：20201-26" class="headerlink" title="发布日期：20201-26"></a>发布日期：20201-26</h4><blockquote><ul><li><a href="https://www.youtube.com/watch?v=vcGITfaplN4&t=28s">醫療資源和專業人員短缺 | 陳秋實大年初二淩晨總結報導  ——陈秋实 YouTube</a></li><li><del><a href="https://www.youtube.com/watch?v=b0O0woyb194">中国时评作家王亚军（王歪嘴）刚刚为武汉募捐物资就被湖北XX威胁</a></del>  已无法访问</li><li><a href="https://www.youtube.com/watch?v=KNLlYwTnY3E&t=4s">武漢物價水準和居民日常 | 陳秋實大年初二下午武漢街頭購物實錄  ——陈秋实 YouTube</a></li></ul></blockquote><h4 id="发布日期：2020-1-27-1"><a href="#发布日期：2020-1-27-1" class="headerlink" title="发布日期：2020-1-27"></a>发布日期：2020-1-27</h4><blockquote><ul><li><a href="https://www.youtube.com/watch?v=rkEjn0NuajI">武漢華南海鮮批發市場 | 陳秋實來到“武漢肺炎”病毒發源地實錄  ——陈秋实 YouTube</a></li><li><a href="https://www.youtube.com/watch?v=3VOugb6KDBY">武漢疫區的人與事深度思考 | 陳秋實大年初三早晨總結報導  ——陈秋实 YouTube</a></li><li><a href="https://www.bilibili.com/video/av85227599?spm_id_from=333.851.b_7265706f7274466972737431.8">在武汉街头 不戴口罩会发生什么？</a></li></ul></blockquote><h4 id="发布日期：2020-1-28-1"><a href="#发布日期：2020-1-28-1" class="headerlink" title="发布日期：2020-1-28"></a>发布日期：2020-1-28</h4><blockquote><ul><li><a href="https://www.youtube.com/watch?v=mIOE1ZImu5Q">火神山醫院工地 | 陳秋實與武漢當地人一起實訪武漢版“小湯山醫院”  ——陈秋实 YouTube</a></li><li><a href="https://www.youtube.com/watch?v=NxMeXCATFxo">真正納稅人的直播 | 陳秋實和“口罩哥”武漢疫區首次直播  ——陈秋实 YouTube</a></li><li><a href="https://www.youtube.com/watch?v=3GBWM3x2XzI">去超市补给库存 看看本地情况 为什么总感觉人们彼此像孤岛  ——TuTu生活志  YouTube</a></li></ul></blockquote><h4 id="发布日期：2020-1-29-1"><a href="#发布日期：2020-1-29-1" class="headerlink" title="发布日期：2020-1-29"></a>发布日期：2020-1-29</h4><blockquote><ul><li><a href="https://www.youtube.com/watch?v=I7TSs0BtAlk">武汉第五医院 大概是发烧和咳嗽多日一直排不到床位 所以情绪崩溃了</a></li><li><a href="https://www.youtube.com/watch?v=iXozpbomAns&t=375s">資源緊缺，疫情緊急 | 陳秋實大年初六中午焦慮總結報導  ——陈秋实 YouTube</a></li></ul></blockquote><h4 id="发布日期：2020-1-31-1"><a href="#发布日期：2020-1-31-1" class="headerlink" title="发布日期：2020-1-31"></a>发布日期：2020-1-31</h4><blockquote><ul><li><a href="https://posts.careerengine.us/p/5e33b02ea4114c6256c1dbf0">武汉红十字会，不要怪我们骂你  ——智先生</a></li></ul></blockquote><h4 id="发布日期：2020-2-1-1"><a href="#发布日期：2020-2-1-1" class="headerlink" title="发布日期：2020-2-1"></a>发布日期：2020-2-1</h4><blockquote><ul><li><a href="https://www.bilibili.com/video/av86132456?t=44">武汉肺炎｜我采访了留在武汉的外国留学生，他们为什么不离开中国？  ——杰里德Jared bilibili</a></li><li><a href="https://www.bilibili.com/video/av85923709">武汉肺炎｜街访美国路人，海外网友怎么看新型冠状病毒？  ——我是郭杰瑞  bilibili</a></li><li><a href="https://www.youtube.com/watch?v=on8SzRBqZk0&t=796s">勇敢真實的聲音非常重要 | 陳秋實大年初八中午武漢總結播報  ——陈秋实 YouTube</a></li><li><a href="https://www.bilibili.com/video/av86101238">【武汉Vlog】宿舍距离发热门诊仅300米，一线医生是如何轮班休息的？  ——央视新闻  bilibili</a></li><li><a href="https://www.youtube.com/watch?v=bLLCvAKJpFc">紧急发布，武汉市民方斌被自称防疫站的人闯入家中  ——陈秋实 YouTube</a></li></ul></blockquote><h4 id="发布日期：2020-2-2-2"><a href="#发布日期：2020-2-2-2" class="headerlink" title="发布日期：2020-2-2"></a>发布日期：2020-2-2</h4><blockquote><ul><li><a href="https://www.youtube.com/watch?v=G4_96KevWHE">武汉方斌平安 电脑被扣骑单车回家 全民互救  ——陈秋实 YouTube</a></li><li><a href="https://www.youtube.com/watch?v=RRga_rSZD3s">自覺、自醒、自助、自救 | 陳秋實大年初九夜晚武漢漢口殯儀館總結播報</a></li></ul></blockquote><h4 id="发布日期：2020-2-4-1"><a href="#发布日期：2020-2-4-1" class="headerlink" title="发布日期：2020-2-4"></a>发布日期：2020-2-4</h4><blockquote><ul><li><a href="https://www.youtube.com/watch?v=9c3uU9qHZEk">真正納稅人的直播 | 陳秋實和武漢肺炎死難者家屬阿明疫區直播  ——陈秋实 YouTube</a></li></ul></blockquote><h4 id="发布日期：2020-2-7-2"><a href="#发布日期：2020-2-7-2" class="headerlink" title="发布日期：2020-2-7"></a>发布日期：2020-2-7</h4><blockquote><ul><li><a href="https://www.youtube.com/watch?v=n7MVfqVM0Ag">【求助代发】陈秋实妈妈呼吁武汉网友寻找秋实下落！公民记者陈秋实去方舱医院后失联超过6小时……  ——陈秋实 YouTube</a></li></ul></blockquote><h2 id="其他类（无法分类）"><a href="#其他类（无法分类）" class="headerlink" title="其他类（无法分类）"></a>其他类（无法分类）</h2><h4 id="发布日期：2020-1-29-2"><a href="#发布日期：2020-1-29-2" class="headerlink" title="发布日期：2020-1-29"></a>发布日期：2020-1-29</h4><blockquote><ul><li><a href="https://www.bilibili.com/video/av85508117?t=445">简单算算，你宅在家里究竟能为抗击肺炎疫情做出多大贡献？  ——毕导  bilibili</a></li></ul></blockquote><h4 id="发布时间：2020-1-30"><a href="#发布时间：2020-1-30" class="headerlink" title="发布时间：2020-1-30"></a>发布时间：2020-1-30</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/_dhrh5FtebiU5VsgiBbYWQ">看了这些“土味”标语横幅，你就明白为什么要依靠人民群众了  ——央视新闻</a></li><li><a href="https://mp.weixin.qq.com/s/2iFHzvTSdwzLxWiHp3kiRA">他们睡着了的样子，让人心疼  ——央视新闻</a></li></ul></blockquote><h4 id="发布日期：2020-1-31-2"><a href="#发布日期：2020-1-31-2" class="headerlink" title="发布日期：2020-1-31"></a>发布日期：2020-1-31</h4><blockquote><ul><li><a href="https://mp.weixin.qq.com/s/DVLKkwG9AccXw6psITgv4A">不戴口罩不要乱跑，小心无人机飞你  ——央视新闻</a></li></ul></blockquote><h4 id="发布日期：2020-2-2-3"><a href="#发布日期：2020-2-2-3" class="headerlink" title="发布日期：2020-2-2"></a>发布日期：2020-2-2</h4><blockquote><ul><li><a href="https://www.bilibili.com/video/av86216616">【回形针PaperClip】关于新冠肺炎的一切  ——回形针PaperClip  bilibili</a></li><li><a href="https://www.bilibili.com/video/av86199719">【主播说联播】用过的口罩如何处理？详细攻略来了！  ——央视新闻  bilibili</a></li></ul></blockquote><hr><h2 id="时间线梳理"><a href="#时间线梳理" class="headerlink" title="时间线梳理"></a>时间线梳理</h2><p>这个我暂时是没有时间做的，工程量巨大。<br>一句话：我把新闻搜集好放在这里，这些碎片化的线索如何串联，就是你们读者的事了。</p><hr><h2 id="个人想说的一些话"><a href="#个人想说的一些话" class="headerlink" title="个人想说的一些话"></a>个人想说的一些话</h2><blockquote><ul><li>希望大家不用过于紧张，特别是不在武汉的小伙伴，注意卫生家里蹲，病毒能染上那才是真的有鬼了。</li><li>不要咒骂任何人，没有意义，在灾难面前，理性和秩序尤为重要。</li></ul></blockquote><p>  关于这次疫情的报道有很多，报道的方向的很杂，信息量着实很大。有人说想知道真相，可真相我们就算看得见，也不可能看得清。我认为了解真相不是最重要的，重要是理性地面对现实，正视我们所看见的、听见的和遇见的。<br>  作为一个当代的中国人，希望得到真相，真的只是一种奢望。  </p>]]></content>
    
    
    
    <tags>
      
      <tag>Historia</tag>
      
      <tag>病毒</tag>
      
      <tag>新闻</tag>
      
      <tag>2019-nCoV</tag>
      
      <tag>新冠病毒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用酷q+服务器搭建一个搜图机器人</title>
    <link href="/2020/01/23/Linux/tutorial/coolq/"/>
    <url>/2020/01/23/Linux/tutorial/coolq/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>有个狗群员来问我有没有康过某个<del>本子</del>然后我说没有，想到曾在<a href="https://moe.best/projects/qq-robot-picfinder.html">这个博客</a>上看到有开源搜图机器人，所以就打算自己搭建一个玩。<br>注意：本教程为懒人教程，可以原封不动按教程中的操作复制粘贴，如果还有错误出现，请自行谷歌。</p><span id="more"></span><h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li>MacBookAir</li><li>一台阿里云的服务器（系统Ubuntu 16.04）</li></ul><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><ul><li>终端（Mac自带）</li><li>termius（用于ssh）</li></ul><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>ssh连接服务器</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">apt-get -y update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>更新源</p><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p>更新源</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo apt-get updatesudo apt-get install -y python-software-properties software-properties-commonsudo add-apt-repository ppa:chris-lea&#x2F;node.jssudo apt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>安装</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install nodejssudo apt install nodejs-legacysudo apt install npm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>更新npm的包镜像源，方便快速下载</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.orgsudo npm config list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>全局安装n管理器(用于管理nodejs版本)</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo npm install n -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>安装最新的nodejs（stable版本）</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo n stable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="安装docker版酷q"><a href="#安装docker版酷q" class="headerlink" title="安装docker版酷q"></a>安装docker版酷q</h3><p>如果未安装docker会提示进行安装，自行复制安装命令进行安装</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker pull coolq&#x2F;wine-coolq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>下载完成后自己创建一个文件夹用于放置文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir &#x2F;home&#x2F;cq # 任意路径均可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>然后运行 酷Q 镜像</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker run --name&#x3D;coolq --rm -p 6700:6700 -p 8080:9000 -v &#x2F;home&#x2F;cq（这个即为前面创建的文件夹路径，如果你没有直接使用上面给出的路径，请自行修改）:&#x2F;home&#x2F;user&#x2F;coolq -e VNC_PASSWD&#x3D;此处填写管理页登录密码 -e COOLQ_ACCOUNT&#x3D;此处填写需要登录的qq号 -e CQHTTP_USE_WS&#x3D;true coolq&#x2F;wine-coolq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>此时我们可以在浏览器中打开<code>你的服务器地址:8080</code>查看并登录QQ<br>确认能正常运行后，可以选择安装后台服务。<br>将上一步中的<code>--rm</code>改为<code>-d</code>即可。   </p><h4 id="后台服务命令"><a href="#后台服务命令" class="headerlink" title="后台服务命令"></a>后台服务命令</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker logs coolq   #查看运行情况docker start coolq   #启动酷qdocker stop coolq    #关闭酷q<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="安装CoolQ-HTTP-API-插件"><a href="#安装CoolQ-HTTP-API-插件" class="headerlink" title="安装CoolQ HTTP API 插件"></a>安装CoolQ HTTP API 插件</h3><p>在这里我们使用<code>wget</code>进行安装。  </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;home&#x2F;cq&#x2F;app    #进入app文件夹wget https:&#x2F;&#x2F;github.com&#x2F;richardchien&#x2F;coolq-http-api&#x2F;releases&#x2F;download&#x2F;v4.13.0&#x2F;io.github.richardchien.coolqhttpapi.cpk    #下载插件，如果wget未安装会提示安装wget，直接复制其安装命令即可安装<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>此时我们在浏览器上登录管理页(确保酷q开启，不然无法登录)<br>登录qq，右击悬浮窗–&gt;应用–&gt;点击 应用管理<br>找到HTTP API，选择启用<br>启用后会在<code>cq/data/app/io.github.richardchien.coolqhttpapi\config</code>文件夹中生成配置文件<br>需要对配置文件进行配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&quot;use_ws&quot;: true,<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>请确保这条为<code>true</code></p><h3 id="安装搜图机器人插件"><a href="#安装搜图机器人插件" class="headerlink" title="安装搜图机器人插件"></a>安装搜图机器人插件</h3><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cd      #回到根目录cd &#x2F;home&#x2F;cq&#x2F;app    #前往APP文件夹，其实哪个文件夹装都一样git clone https:&#x2F;&#x2F;github.com&#x2F;Tsuk1ko&#x2F;CQ-picfinder-robot.gitcd CQ-picfinder-robotcp config.default.json config.jsonvim config.json     #编辑配置文件，按i开始编辑，退出按esc，并输入:wq保存退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>配置文件可参考我的，或移步<a href="https://github.com/Tsuk1ko/CQ-picfinder-robot/wiki/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E">官方参考文档</a>自行查看</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&quot;host&quot;: &quot;127.0.0.1&quot;,&quot;port&quot;: 6700,&quot;enableAPI&quot;: true,&quot;enableEvent&quot;: true,&quot;access_token&quot;: &quot;&quot;,&quot;reconnection&quot;: true,&quot;reconnectionAttempts&quot;: 10,&quot;reconnectionDelay&quot;: 5000,&quot;picfinder&quot;: &#123;        &quot;debug&quot;: false,        &quot;admin&quot;: 填写管理员QQ号,        &quot;autoAddFriend&quot;: false,        &quot;addFriendAnswers&quot;: [],        &quot;autoAddGroup&quot;: false,        &quot;saucenaoDefaultDB&quot;: &quot;all&quot;,        &quot;useAscii2dWhenQuotaExcess&quot;: true,        &quot;useAscii2dWhenLowAcc&quot;: true,        &quot;searchLimit&quot;: 30,        &quot;searchModeTimeout&quot;: 60,        &quot;proxy&quot;: &quot;&quot;,        &quot;repeat&quot;: &#123;                &quot;enable&quot;: true,                &quot;times&quot;: 3,                &quot;probability&quot;: 40,                &quot;commonProb&quot;: 0.2        &#125;,        &quot;setu&quot;: &#123;                &quot;enable&quot;: false,                &quot;antiShielding&quot;: false,                &quot;allowPM&quot;: true,                &quot;pximgServerPort&quot;: &quot;60233&quot;,                &quot;usePximgAddr&quot;: &quot;&quot;,                &quot;pximgProxy&quot;: &quot;&quot;,                &quot;size1200&quot;: false,                &quot;deleteTime&quot;: 60,                &quot;cd&quot;: 600,                &quot;limit&quot;: 30,                &quot;whiteGroup&quot;: [填写白名单QQ群（下面那行填了true所以机器人只有在白名单群内的群聊才会有反应],                &quot;whiteOnly&quot;: true,                &quot;whiteCd&quot;: 0,                &quot;whiteDeleteTime&quot;: 0,                &quot;r18OnlyInWhite&quot;: true        &#125;,        &quot;regs&quot;: &#123;                &quot;searchModeOn&quot;: &quot;^竹竹搜[图圖]$&quot;,                &quot;searchModeOff&quot;: &quot;^[谢謝]+竹竹$&quot;,                &quot;sign&quot;: &quot;我(.*)签到&quot;,                &quot;setu&quot;: &quot;^竹竹.*[来來发發给給][张張个個幅点點份]?(?&lt;r18&gt;[Rr]18的?)?(?&lt;keyword&gt;.*?)?的?[色瑟][图圖]|^--setu$&quot;        &#125;,        &quot;replys&quot;: &#123;                &quot;default&quot;: &quot;&quot;,                &quot;debug&quot;: &quot;维护升级中，暂时不能使用，抱歉啦~&quot;,                &quot;personLimit&quot;: &quot;您今天搜的图太多辣！休息一下明天再来搜吧~&quot;,                &quot;failed&quot;: &quot;搜索失败惹 QAQ\n有可能是服务器网络爆炸，请重试一次&quot;,                &quot;sign&quot;: &quot;签到成功，送您10个赞！&quot;,                &quot;signed&quot;: &quot;您今天已经签到过啦_(:3」∠)_&quot;,                &quot;searchModeOn&quot;: &quot;了解～请发送图片吧！支持批量噢！\n如想退出搜索模式请发送“谢谢竹竹”&quot;,                &quot;searchModeAlreadyOn&quot;: &quot;您已经在搜图模式下啦！\n如想退出搜索模式请发送“谢谢竹竹”&quot;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>编辑完成后保存退出。</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">npm inpm install pm2 -gnpm run pm2start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>运行插件后请使用</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">npm run pm2log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>查看日志，确保能够正常运行。</p><h3 id="安装管理插件"><a href="#安装管理插件" class="headerlink" title="安装管理插件"></a>安装管理插件</h3><p>按上方配置，我们的机器人并不会主动同意添加好友，所以我们需要使用<a href="https://cqp.cc/t/41061">这个插件</a>来管理我们的好友申请等功能。<br>将文件下载到本地，并解压<br>打开终端，使用scp（不是那个scp！！！）上传文件到服务器</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cp 需要上传的文件路径（将文件拖入终端窗口就会自动填好文件路径） root@IP地址:&#x2F;home&#x2F;cq&#x2F;app(即安放插件的文件夹)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>上传后，需要修改配置文件，路径为<code>data/app/com.burnlord.cqExtend</code>，安这个来配置<img src="https://imgc.cqp.me/forum/201812/07/160018fcp53lst3bstszc3.png"><br>配置完成后，参照上面开启HTTP API插件的方法开启插件。  </p><h2 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h2><ul><li>可以向机器人发<del>瑟图</del>确认搜图插件能否运行   </li><li>可以让机器人加入群，如会向管理员发送入群信息则说明管理插件正常运行</li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://www.jianshu.com/p/2b24cd430a7d">Ubuntu16.04安装最新版nodejs</a></li><li><a href="https://cqp.cc/t/34558">酷Q on Docker 2.0</a></li><li><a href="https://cqp.cc/t/41061">酷Q运行增强助手</a></li><li><a href="https://github.com/Tsuk1ko/CQ-picfinder-robot/wiki/%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B">部署流程</a></li><li><a href="https://cqhttp.cc/docs/4.13/#/">CoolQ HTTP API 插件</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>机器人</tag>
      
      <tag>搜图</tag>
      
      <tag>酷q</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用hexo+GitHub搭建属于自己的blog</title>
    <link href="/2020/01/20/hexo/"/>
    <url>/2020/01/20/hexo/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>去年下半年的时候，我终于搭建好了自己的博客，当然，不总是一帆风顺。之前还有过因为换用tx云太难用气到删了博客。再次总结一下使用经验，警示后人。<br><strong>注意：本文仅针对使用MacOS的用户！因为我不使用Windows系统所以不知道Windows上应该如何操作！虽然大致操作基本上是一样的但是也有一定的区别！！！</strong></p><span id="more"></span><h2 id="所需材料"><a href="#所需材料" class="headerlink" title="所需材料"></a>所需材料</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li>一台装有MacOS的电脑</li></ul><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><ul><li><a href="https://nodejs.org/en/">node.js</a></li><li><a href="https://git-scm.com/">git</a></li><li>终端（MacOS自带）  <strong>以下涉及的命令均需要在终端中完成</strong><br>首先请确保软硬件均已准备完毕，<code>node.js</code>及<code>git</code>是使用hexo博客框架的基础！软件的安装非常简单，动动鼠标就能完成，在此不做过多赘述。</li></ul><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>在安装和使用<code>hexo</code>时，我们需要使用的<code>npm</code>，由于众所周知的原因，国内使用npm会很慢<del>如果你是会魔法的小魔仙的话就当我没说</del>，所以在这里，我们可以选择使用淘宝的镜像站。</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>安装完成后，再使用npm进行安装hexo</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cnpm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="开始安装并构建博客"><a href="#开始安装并构建博客" class="headerlink" title="开始安装并构建博客"></a>开始安装并构建博客</h2><p>首先，我们要选择一个位置放置博客的文件夹，个人推荐直接在用户文件夹下发进行构建。<br>方法一：</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo init &lt;此处填写你希望的文件夹名&gt;   #将hexo安装至某一文件夹cd &lt;此处文件夹名同上&gt;    #移动到某一文件夹npm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>方法二：</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir 此处填写你希望的文件夹名     #新建文件夹cd 此处填写同上      #移动到文件夹hexo initnpm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>等待安装完成即可。</p><h2 id="配置并使用hexo"><a href="#配置并使用hexo" class="headerlink" title="配置并使用hexo"></a>配置并使用hexo</h2><p>当我们安装好hexo之后，我们已经可以开始使用它了，通过</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>我们可以在浏览器中打开<code>http://localhost:4000/</code>对我们的博客进行预览<br>但是这样我们的博客还是只能在本地进行查看，所以我们要下载推送到远端的插件</p><h3 id="利用GitHub的服务部署blog"><a href="#利用GitHub的服务部署blog" class="headerlink" title="利用GitHub的服务部署blog"></a>利用GitHub的服务部署blog</h3><p><a href="https://github.com/">github</a>提供免费的静态页面托管服务（当然腾讯云什么的也提供类似服务，个人觉得腾讯云的难用得反人类，当然也可能只是我使用的问题），<strong>如果你愿意使用他们提供的域名，那么本教程涉及内容将不fa一分钱！</strong> </p><h4 id="GitHub设置"><a href="#GitHub设置" class="headerlink" title="GitHub设置"></a>GitHub设置</h4><p>首先我们需要有一个GitHub的账号<del>废话</del><br>登录后点击右上角的＋号<br>选择<code>new repository</code><br><img src="https://pic.superbed.cn/item/5e2510552fb38b8c3c8e701a.png"><br>填好项目名就可以下一步了<br>创建好这个项目后，打开项目页面并点击<code>Settings</code><br><img src="https://pic.superbed.cn/item/5e2510fb2fb38b8c3c8e7d3c.png"></p><h4 id="本地设置"><a href="#本地设置" class="headerlink" title="本地设置"></a>本地设置</h4><p>当我们准备好了GitHub的空仓库之后，需要想办法将本地内容推送到GitHub的仓库中<br>在博客的根目录下执行</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cnpm install --save hexo-deployer-git    #安装插件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>安装完成后，在博客根目录下找到<code>_config.yml</code>文件，这个就是博客的配置文件。<br>使用文件编辑器打开配置文件或在终端使用<code>vim</code>（我使用的文件编辑器是<a href="http://brackets.io/">brackets</a>）<br>在配置文件中添加以下内容</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: 此处换成你的GitHub仓库的网址或者空仓库给出的https推送使用的网址  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>配置完成后保存文件，当我们第一次推送时，会在终端中要求登录，使用GitHub账户登录即可。</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo d    #将博客推送至远端<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="使用Markdown写文章"><a href="#使用Markdown写文章" class="headerlink" title="使用Markdown写文章"></a>使用Markdown写文章</h3><p>hexo是支持Markdown的，我们使用Markdown进行写作。<br>在博客根目录下</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo n 此处填写文件名    #新建一篇模板，文件名请使用英文！<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>hexo会自动生成一个模板文件在<code>source/_posts/</code>目录下，使用文件编辑器打开就可以编写文章了<br>当然你也可以直接在<code>source/_posts/</code>目录下新建md文件</p><h4 id="Markdown语法知识"><a href="#Markdown语法知识" class="headerlink" title="Markdown语法知识"></a>Markdown语法知识</h4><p>此处列举一些常用语法，完整语法请参考<a href="https://daringfireball.net/projects/markdown/syntax">Markdown官方文档</a><br><strong>注意：md涉及的语法中，必须使用英文符号！否则无效！！！例如中文的“（”和英文的“(”是不一样的！</strong>*<br><strong>标题</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&quot;#&quot;为标题，只需要在标题那一行的前面加#即可，注意#后要空一格！标题共分6级# 一级标题## 二级标题### 三级标题·····以此类推<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>强调或突出</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">强调或突出可简单理解为加粗和斜体字在需要强调或突出的文字两侧加上*即可例如：*这是一个突出***这是一个强调**<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>插入图片或文字内联链接</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">为文字内联链接使用[]()中括号中填写文字内容，小括号中填写链接地址插入图片使用![]()方法跟文字一样，但是图片的注释（即中括号中的内容）有些主题不会显示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>列表</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">列表有序列表    使用1.    2.  这样的形式    例如：    1. MacBook    2. iPhone无序列表    使用*    例如：    * 吃饭    * 睡觉<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>代码块</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">使用“&#96;”例如：    &#96;这里的单行代码块&#96;多行代码块在头和尾留两行各打三个“&#96;”<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>水平分割线</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">三个或更多星号例如：    *******<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>换行</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">直接在行尾打两个空格<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><strong>删除线</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">在文字两侧各加上两个~~例如：    ~~中间这些字会被加上删除线~~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="hexo中文章md文件的格式"><a href="#hexo中文章md文件的格式" class="headerlink" title="hexo中文章md文件的格式"></a>hexo中文章md文件的格式</h4><p>格式如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">---title: 此处为文章标题date: 2019-10-1 8:43:45  #写作时间tags:  ---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>在<code>---</code>中间的部分为文章的一些数据，有些主题中还可以添加如文件转载规则等的信息，总之，你的文章内容需在<code>---</code>下方写作！</p><h2 id="hexo主题设置"><a href="#hexo主题设置" class="headerlink" title="hexo主题设置"></a>hexo主题设置</h2><p>我相信大家一定不会选用官方默认给的主题，这时候我们可以选择别的主题。<br>在hexo官网上有有些很不错的主题可供选择，有需要可以到<a href="https://hexo.io/themes/">这里</a>查看<br>我使用过一个叫<code>matery</code>的主题，功能齐全，还可以自行套cdn，对国内的访问非常友好，还挺好看的。<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">项目地址</a><br>目前使用的是一个很简洁的主题，叫<a href="https://github.com/Shen-Yu/hexo-theme-ayer">Ayer</a><br>每一个主题基本上都会有教怎么配置，这里就不多说了。</p><h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><p>新建md文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo n 此处填写文件名，建议英文<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>本地调试和查看博客</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo cleanhexo s# 以上两个命令执行后就可以在localhost:4000看到我们的博客# 退出使用control+c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>推送到远端</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><p>域名当然是能自定义的<br>首先我们需要在域名服务商的管理界面，添加一个<code>A记录</code>将服务器根域名指向GitHub的ip<br>GitHub服务器ip可以在终端里通过ping获得</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ping github.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>然后添加一个CNAME记录将一个子域名指向你的项目地址（也可以直接将根域名指向项目地址）<br>记录的更新需要一点时间，请耐心等待！<br>访问GitHub上的项目地址，点<code>setting</code><br>找到<code>GitHub pages</code>在文本框中输入自己的域名保存即可，也可以勾选下面的选项启用https。<br><img src="https://pic.superbed.cn/item/5e2526022fb38b8c3c906943.png"></p><h2 id="使用心得"><a href="#使用心得" class="headerlink" title="使用心得"></a>使用心得</h2><h3 id="提高博客访问速度"><a href="#提高博客访问速度" class="headerlink" title="提高博客访问速度"></a>提高博客访问速度</h3><p>一个博客的访问快速是非常重要的，总不能一个页面加载十几秒让人看吧？<br>由于众所周知的原因，GitHub的服务国内访问也很慢，所以得搞点骚操作。<del>怕折腾请选用反人类的tx云</del></p><h4 id="能用cdn就要用上cdn"><a href="#能用cdn就要用上cdn" class="headerlink" title="能用cdn就要用上cdn"></a>能用cdn就要用上cdn</h4><p>cdn是很有用的，对加速访问有奇效，有些主题可以自行设置添加cdn，如我前面说到的<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">matery</a><br>这里提供一个国内免费的<a href="https://www.bootcdn.cn/">cdn服务</a>，配合主题使用。请自行在主题的配置文件下修改cdn配置<br>有人会问：<strong>那万一主题并不支持添加cdn呢？</strong><br>这个问题问的好，这时我们就需要请出大佬<a href="https://dash.cloudflare.com/ff442e2ea64ed810dcf4d0f8a5be915b">cloudflare</a><br><strong>注意：以下操作必须要求有自己的域名！且域名由cloudflare托管！</strong><br>打开域名管理页面<br><img src="https://pic.superbed.cn/item/5e2529a62fb38b8c3c90b76c.png"><br>点击dns<br>将需要套dns的网址记录的proxy选项调整至<code>proxied</code>（这么操作也可以为网站的tls协议直接升级到1.3）<br><img src="https://pic.superbed.cn/item/5e2529a62fb38b8c3c90b76e.png"><br>完成后前往<code>speed</code>页面，点击<code>Optimization</code>将设置调整为如下,别的设置不用动<br><img src="https://pic.superbed.cn/item/5e252b332fb38b8c3c90d592.png"><br>设置完后，在国内访问也能提高不少，可以说效果拔群。<br><strong>不过有个小问题，由于采用了缓存技术，所以当我们将写好的文章推送到远端后访问博客可能无法第一时间看到更新，需要在cloudflare管理页面上的overview页面打开一下<code>Development Mode</code>选项（平时的话请把它关上）</strong></p><h4 id="图片能用图床就一定要用图床"><a href="#图片能用图床就一定要用图床" class="headerlink" title="图片能用图床就一定要用图床"></a>图片能用图床就一定要用图床</h4><p>推荐图床<a href="https://www.superbed.cn/">聚合图床</a><br>附上我的邀请链接<a href="https://www.superbed.cn/signup?from_id=8198">https://www.superbed.cn/signup?from_id=8198</a></p><h3 id="一定要备份！！！！！"><a href="#一定要备份！！！！！" class="headerlink" title="一定要备份！！！！！"></a>一定要备份！！！！！</h3><p>备份是很重要的，防止因为莫名其妙的问题导致文件丢失全都得从头再来。推荐用GitHub备份，关于GitHub的使用，下次有时间会专门写一篇文章介绍。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>博客这个东西国内除了程序员和一些网上冲浪的GG和MM可能知道以外现在知道有这个东西的人已经越来越少了，可以说是相当小众。由于很多的原因，我不喜欢微博之类的地方，国内的网络和现实环境都让我一言难尽。所以惹不起我还是躲得起的。博客就像互联网大海中的一座座孤立的小岛，时不时有人会来看看，时间长了，可能一些志同道合的人就会聚在一起。圈子不用大，关键是自己呆着很舒服。</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>博客</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用yandex搭建个人域名邮箱</title>
    <link href="/2019/12/16/email/"/>
    <url>/2019/12/16/email/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>事情是这个样子的：有一天突然想写个<del>拍簧片</del>PHP程序，然后在看b站教学的时候一看手机发现某群的大佬搞了个自己的域名邮箱，然后就想也弄一个玩玩了。<br><del>对，没错，就是能跑偏这么远</del></p><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>像腾x和阿里都有提供企业邮箱的服务，但是众所周知，国内嘛，各种实名认证，而我就是烦这个。<br>这里我选择了一家毛子的公司，叫<a href="https://yandex.com/">yandex</a>。他们家提供免费的域名邮箱服务。   </p><h3 id="注册yandex账号"><a href="#注册yandex账号" class="headerlink" title="注册yandex账号"></a>注册yandex账号</h3><p>这里我们先要去yandex的网站<a href="https://passport.yandex.com/registration">注册</a>一个自己的账号  </p><h3 id="申请域名邮箱"><a href="#申请域名邮箱" class="headerlink" title="申请域名邮箱"></a>申请域名邮箱</h3><p>然后在<a href="https://connect.yandex.com/pdd/">这里</a>申请域名邮箱。<br><img src="https://pic3.superbed.cn/item/5df74e2a76085c3289df7f8d.png" alt="输入自己的域名即可"></p><h4 id="验证域名所属权"><a href="#验证域名所属权" class="headerlink" title="验证域名所属权"></a>验证域名所属权</h4><p>官方提供以下四种验证方法</p><blockquote><ul><li>Html files</li><li>Meta tag</li><li>Whois</li><li>DNS record</li></ul></blockquote><h5 id="HTML-files"><a href="#HTML-files" class="headerlink" title="HTML files"></a>HTML files</h5><p>即在根目录下新建一个指定HTML文件，官方可以直接提供文件，点击下载，然后放到网站根目录即可</p><h5 id="Meta-tag"><a href="#Meta-tag" class="headerlink" title="Meta tag"></a>Meta tag</h5><p>简单的说就是在根域名网站主页的<code>head</code>上加一条验证信息<br>我的网站是部署在GitHub上的<br>直接把项目中的<code>index.md</code>改为<code>index.html</code>然后把里面的内容替换成网页源代码后，按官方的说明直接复制粘贴给出的需要添加在<code>head</code>中的代码即可。</p><h5 id="Whois"><a href="#Whois" class="headerlink" title="Whois"></a>Whois</h5><p>没用过，也不推荐</p><h5 id="DNS-record"><a href="#DNS-record" class="headerlink" title="DNS record"></a>DNS record</h5><p>即在DNS解析服务商的管理页面上添加一条<code>txt</code>记录<br><code>name</code>处填写<code>yandex-verification</code><br><code>Content</code>处填写官方给的验证码<br><strong>注意：这个方法所需时间可能会很长，一天甚至好几个月才能通过验证，所以有条件尽量选择使用<code>Html files</code>或<code>Meta tag</code>的方式进行验证</strong></p><h3 id="配置MX、SPF与DKIM记录"><a href="#配置MX、SPF与DKIM记录" class="headerlink" title="配置MX、SPF与DKIM记录"></a>配置MX、SPF与DKIM记录</h3><p>进入DNS管理后台<br>在DNS记录中添加以下记录，进行配置<code>MX</code>、<code>SPF</code>记录<br><img src="https://pic3.superbed.cn/item/5df74e2a76085c3289df7f8f.png" alt="配置MX、SPF记录"><br>在<a href="https://connect.yandex.com/portal/services/mail">这里</a>获取DKIM公钥后在DNS管理后台添加一条TXT记录，Name（host）填写<code>mail._domainkey</code>，Value填刚刚获取的公钥<br><a href="https://yandex.com/support/connect/DNS-editor.html">官方文档</a></p><h3 id="等待生效"><a href="#等待生效" class="headerlink" title="等待生效"></a>等待生效</h3><h3 id="自定义前缀"><a href="#自定义前缀" class="headerlink" title="自定义前缀"></a>自定义前缀</h3><p>等DNS解析生效后，我们就可以自由添加邮箱了，yandex可支持添加1000个邮箱前缀，且每个用户都有独立的5GB空间。<br>进入<a href="https://connect.yandex.com/portal/admin/departments/1">这个地址</a><br>点击<code>Add</code>即可添加自己喜欢的邮箱前缀</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>讲道理，我也不知道我搞了这个有啥用<br><img src="https://pic3.superbed.cn/item/5df74e2a76085c3289df7f91.jpg" alt="我和沙雕朋友为了测试邮箱是否能正常使用的沙雕对话"></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>email</tag>
      
      <tag>域名邮箱</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安卓刷机知识扫盲</title>
    <link href="/2019/11/17/Android/Android/"/>
    <url>/2019/11/17/Android/Android/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>是这样的，我的同学问我到底买啥安卓手机好，然后我就开始推销小米了。为啥推销小米呢？xda上很多大佬在用，刷机资源多，刷类原生方便。然后干脆写篇扫盲出来，方便他刷机<del>顺便拯救一下我博客惨淡的访问量</del></p><span id="more"></span><h2 id="正片"><a href="#正片" class="headerlink" title="正片"></a>正片</h2><h4 id="ROM"><a href="#ROM" class="headerlink" title="ROM"></a>ROM</h4><p>简单的说就是个系统安装包。<br>由于某些原因，国内ROM的Android系统定制化的程度基本都非常高，名气较大的如MIUI、Flyme。<br>在一定程度上，这些高度定制的ROM非常本地化，但是从我个人的角度来说，这些ROM<strong>太花里胡哨了！</strong><br>类原生的ROM是我较为推荐的，非常干净<br><strong>注意：在寻找ROM刷机的时候一定要确保对应自己的手机型号！</strong></p><h5 id="ROM推荐"><a href="#ROM推荐" class="headerlink" title="ROM推荐"></a>ROM推荐</h5><ul><li>国产专区   <ul><li><a href="http://www.miui.com/">MIUI</a><br>怎么说呢…….就那样，反正自从刷了类原生我就没再用了，个人不是很喜欢</li><li><a href="https://www.h2os.com/">氢OS</a> （氧OS为海外版）<br>没用过</li></ul></li><li>第三方类原生    <ul><li><a href="https://download.pixelexperience.org/">pixelexperience</a><br>基于aosp开发的ROM。个人超级推荐！！！预置谷歌全家桶，不需要自己手动安装，且有大量机型在维护，bug少</li><li><a href="https://lineageos.org/">lineageos</a><br>类原生界几乎是大哥大的存在，没用过。</li><li><a href="https://crdroid.net/">crDroid</a><br>这个ROM是基于lineages开发的，自定义内容很多，但是小毛病很多</li></ul></li></ul><h4 id="Recovery"><a href="#Recovery" class="headerlink" title="Recovery"></a>Recovery</h4><p>简称rec，是Android的一个恢复系统。在刷机过程中，我们需要利用rec完成大部分的操作。<br>一般预装的rec功能都很少，所以我们要刷入第三方rec。<br>推荐<a href="https://twrp.me/">twrp</a></p><h4 id="bootloader锁"><a href="#bootloader锁" class="headerlink" title="bootloader锁"></a>bootloader锁</h4><p>用于限制用户刷机<br>每个厂商基本都有官方解锁方法，当然也有非官方的骚操作可以搞一搞。<br>解锁bootloader锁是刷机的第一步。</p><h4 id="fastboot"><a href="#fastboot" class="headerlink" title="fastboot"></a>fastboot</h4><p>fastboot是一个引导模式，对于刷机来说，rec是卡刷，即用u盘或者sd卡刷入ROM，而fastboot则是利用电脑通过USB线连接手机进行刷机。<br>而fastboot本身用途非常多，我本人也不是很清楚</p><h4 id="底包"><a href="#底包" class="headerlink" title="底包"></a>底包</h4><p>一个非常重要的东西，如果不及时更新底包可能会在刷机的过程中遇到很多莫名其妙的问题，比如刷不进ROM，或者进入系统后没声音等</p><h4 id="root权限"><a href="#root权限" class="headerlink" title="root权限"></a>root权限</h4><p>即超级用户权限。有了root权限可以对手机进行很多骚操作，比如谷歌地图的纠偏。这个属于爱折腾的人才刷的东西，好处多多，当然也容易翻车。<br>目前最好的工具是magisk，今后会更新一篇文章专门详细介绍magisk的使用。</p><h4 id="open-gapps"><a href="#open-gapps" class="headerlink" title="open gapps"></a>open gapps</h4><p>在刷入大部分类原生ROM的时候很多人会问：<strong>不是类原生ROM吗？谷歌套件呢？</strong><br>先别急，一般的类原生ROM不会特意集成谷歌套件，<strong>因为安卓系统开源，但是谷歌套件不是啊！！！</strong><br>因此我们又需要自己动手在rec中刷入谷歌套件了。这里提到的open gapps就是提取好的谷歌套件，从<a href="https://opengapps.org/">官网</a>下载后利用rec刷入就可以愉快的使用了。<br><strong>注意：在选择open gapps包时要注意自己手机的系统，选择对应的包下载，不然无法刷入！</strong></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>本文会持续在博客上进行更新，欢迎来访<a href="https://blog.xianyu.one/">我的博客</a>！   </p>]]></content>
    
    
    
    <tags>
      
      <tag>科普</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WH-h900n 国行强刷国际版固件教程 </title>
    <link href="/2019/10/23/sony-wh-h900n/"/>
    <url>/2019/10/23/sony-wh-h900n/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>这个其实是我在暑假里干的事情，突然想到了所以赶紧写下来。<br>为啥我当时会搞这个事情呢？因为我偶然间发现国行的wh-h900n只更新到1.05版本就不再更新了，而国际版的已更新到4.20了，并且支持Google Assistant！<br>本着不折腾会死的信念我开始了这次的耳机刷机折腾之旅。<br><strong>注意：本教程适用于使用安卓的同学！</strong></p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h4 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h4><ul><li>Sony Headphone Connect 3.2.0 apk文件（一定要确保是这个版本的！因为之后的版本检测逻辑不同，本方法并不适用）</li><li><a href="https://ibotpeaches.github.io/Apktool/install/">apktool</a></li><li>文本编辑器任意</li><li>MT管理器（适用于方法二，详见为apk签名章节）</li></ul><h4 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h4><ul><li>wh-h900n</li><li>一台安卓手机</li><li>MacBook（macos）</li></ul><h2 id="开搞前的废话"><a href="#开搞前的废话" class="headerlink" title="开搞前的废话"></a>开搞前的废话</h2><p>对于一个懒人，自然是希望网上有现成的资源可以用。找了一圈之后发现：<strong>特么的为什么大家给的都是刷1000系的教程啊！！！</strong><br>不过也无所谓了，既然有教程，那么我也可以顺藤摸瓜，依葫芦画瓢找到刷wh-h900n的方法。<br>根据<a href="https://blog.lvwind.com/upgrade-sony-wi-1000x-china-ver/">这篇文章</a>提到的1000系各机型的产品ID，我在思考wh-h900n的产品ID是什么？<br>于是我安装了3.2.0的耳机软件抓包了一下。<br><img src="https://pic.superbed.cn/item/5db12dd38b58bc7bf7de125a.jpg" alt="抓包结果"><br>wh-h900n国行的ID为：<strong>289302</strong><br>那么根据下表可知wh-h900n的国际版产品ID为<strong>289300</strong>。<br><img src="https://i0.hdslb.com/bfs/article/bcc9ea8c86a0c8b7f06a6f3e63c72348e87a1dc9.png@1320w_694h.webp" alt="教程中提到的1000系各型耳机ID"><br>知道产品ID后，剩下的就是逆向和打包了。</p><h2 id="正文-解包与打包"><a href="#正文-解包与打包" class="headerlink" title="正文  解包与打包"></a>正文  解包与打包</h2><h4 id="配置apktool环境"><a href="#配置apktool环境" class="headerlink" title="配置apktool环境"></a>配置apktool环境</h4><p>进入<a href="https://ibotpeaches.github.io/Apktool/install/">apktool官网</a>按照教程进行配置<br><img src="https://ae01.alicdn.com/kf/Hb58bd8e2a26d4780b9dd177b0a7dae992.png" alt="方法如图"> </p><h4 id="解包及设置"><a href="#解包及设置" class="headerlink" title="解包及设置"></a>解包及设置</h4><p>下载好<code>Sony Headphone Connect 3.2.0</code><br>进入终端进行逆向 </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">apktool d 此处填写文件路径，直接打开apk所在文件夹，将apk拖入终端即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>解包后一般会用户的文件夹下，为了方便，我把apk包名称改为了<code>b.apk</code>，解包后文件夹路径为<code>/User/yuxian/b</code><br>接下去就是查找需要修改的文件的位置<br>我当时按着网上的教程找，没找着，后来我是一个个文件夹翻开手动找找到的<br><strong>是不是很牛逼？</strong><br>文件路径为<code>/smali/com/sony/songpal/mdr/application/b/a.smali</code><br>找到<code>.line 156</code>所在的那行，将下方修改为如下</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">.line 156:pswitch_1const-string v0, &quot;MDRID289302&quot;  #引号中为要填写的ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>重新打包</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">apktool b a -o 此处填新生成的文件名.apk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="为apk签名"><a href="#为apk签名" class="headerlink" title="为apk签名"></a>为apk签名</h4><h5 id="方法一：-使用jarsigner签名"><a href="#方法一：-使用jarsigner签名" class="headerlink" title="方法一： 使用jarsigner签名"></a>方法一： 使用jarsigner签名</h5><p>在终端中输入</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">jarsigner -verbose -keystore &#123;文件的路径&#125;  -storepass &#123;密码&#125;  -signedjar &#123;签名包的地址&#125; &#123;非签名包的地址&#125;  &#123;签名的别名&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>即可。</p><h5 id="方法二：MT管理器"><a href="#方法二：MT管理器" class="headerlink" title="方法二：MT管理器"></a>方法二：MT管理器</h5><p>在手机上安装<code>MT管理器</code><br>把我们打包好的文件传到手机，并在<code>MT管理器</code>中找到它<br>点击后就能看到签名选项，按提示签名即可。</p><h2 id="安装APP开始刷机"><a href="#安装APP开始刷机" class="headerlink" title="安装APP开始刷机"></a>安装APP开始刷机</h2><p>进入我们修改过的软件后就会看到升级的提示了<br><strong>记得提前将耳机的电充好！！！</strong><br><img src="https://pic.superbed.cn/item/5db12ddd8b58bc7bf7de13c0.jpg" alt="成功刷机"><br><img src="https://pic.superbed.cn/item/5db12dd38b58bc7bf7de1258.jpg" alt="刷机后抓包结果"></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>什么？你问我为什么不买1000系？<br><strong>还不是因为穷！！！<del>（明示打赏）</del></strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>耳机</tag>
      
      <tag>刷机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>终于。。。</title>
    <link href="/2019/10/16/Something/now/"/>
    <url>/2019/10/16/Something/now/</url>
    
    <content type="html"><![CDATA[<p>总算是调试的差不多了，两篇干货也重写好了。累死我了，学乖了，现在知道要备份了。<br><img src="https://ae01.alicdn.com/kf/Hcd7dfeae1dd8479d9cdc9b156557112fL.png" alt="弱智备份法"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>小米8刷机笔记</title>
    <link href="/2019/10/16/Android/mi8/"/>
    <url>/2019/10/16/Android/mi8/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>一直以来对MIUI都没有什么好感，比较喜欢清爽的类原生系统，然后就踏上了永无止境的刷（zhe）机（teng）之路了。<br><strong>只要你愿意折腾，本教程绝对好用。</strong></p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h4 id="所需硬件"><a href="#所需硬件" class="headerlink" title="所需硬件"></a>所需硬件</h4><ul><li>小米8</li><li>MacBook</li><li>OTG线</li><li>U盘</li></ul><h4 id="所需软件"><a href="#所需软件" class="headerlink" title="所需软件"></a>所需软件</h4><h5 id="刷机用"><a href="#刷机用" class="headerlink" title="刷机用"></a>刷机用</h5><ul><li>一个自己喜欢的ROM包 推荐<a href="https://download.pixelexperience.org/dipper/">PixelExperience</a></li><li>第三方rec 推荐<a href="https://dl.twrp.me/dipper/">twrp</a></li><li><a href="https://forum.xda-developers.com/android/software/universal-dm-verity-forceencrypt-t3817389">Disable_Dm-Verity_ForceEncrypt</a></li><li><a href="https://github.com/XiaomiFirmwareUpdater/firmware_xiaomi_dipper/releases/tag/stable-27.09.2019">底包</a></li><li><a href="https://github.com/topjohnwu/Magisk/releases">magisk</a> 下载<code>Magisk v19.3</code>,可自己选择安装那个版本。不需要root的用户可以不用下载。</li><li>～我在我的分享站对刷机资源做了整合，可以直接前往<a href="https://cloud.xianyu.one/home/2/%E5%B0%8F%E7%B1%B38%E5%88%B7%E6%9C%BA%E5%8C%85">分享站</a>下载  2020.3.15更新～</li></ul><h5 id="电脑上需要的软件"><a href="#电脑上需要的软件" class="headerlink" title="电脑上需要的软件"></a>电脑上需要的软件</h5><ul><li>终端（Mac OS自带）</li><li>Android Studio</li></ul><h4 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h4><h5 id="为手机开启开发者模式"><a href="#为手机开启开发者模式" class="headerlink" title="为手机开启开发者模式"></a>为手机开启开发者模式</h5><p>进入设置，找到版本号，一顿狂点即可。<br>进入开发者模式后，在开发者选项中打开adb调试。</p><h5 id="为手机解锁bootloader"><a href="#为手机解锁bootloader" class="headerlink" title="为手机解锁bootloader"></a>为手机解锁bootloader</h5><p>这是刷机的第一步，不解锁bootloader啥都干不了。<br>首先我们要去小米的官网注册账号并申请解锁，此后要在设置中将账号绑定至手机，等待一定天数后可解锁，如何解锁具体可参考这篇文章。<br>由于官方只有Windows下的解锁工具，所以解锁部分对我来说非常艰辛，为此我还专门跑到了有Windows电脑的同学家去解锁。直到后来我才不知道在哪看到有关Mac OS下解锁的文章。没有仔细了解，有兴趣的同学可以自行谷歌。</p><h5 id="配置好adb环境"><a href="#配置好adb环境" class="headerlink" title="配置好adb环境"></a>配置好adb环境</h5><p>下载Android Studio，并安装，默认安装位置即可。<br>打开Android Studio，点击<code>Configure</code>，选择<code>SDK Manager</code><br>显示的<code>Android SDK Location</code>后面的路径即为SDK的安装路径，待会会用到。<br><img src="https://pic.superbed.cn/item/5da29c509dc6d64c0b3efd2b.png" alt="Android SDK Location后面的路径即为SDK的安装路径"><br>进入终端创建<code>.bash_profile</code>文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">touch .bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>打开<code>.bash_profile</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">open .bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>在文件中添加以下配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ANDROID_HOME&#x3D;此处填写前面我们记下的SDK路径export PATH&#x3D;$PATH:$ANDROID_HOME&#x2F;toolsexport PATH&#x3D;$PATH:$ANDROID_HOME&#x2F;platform-tools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>生效配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">source .bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>在终端中输入</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">adb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>若有一大堆东西显示则为配置成功。<br><img src="https://pic.superbed.cn/item/5da29c509dc6d64c0b3efd29.png" alt="配置成功的标志"></p><h5 id="将刷机用的软件拷贝到U盘中备用。"><a href="#将刷机用的软件拷贝到U盘中备用。" class="headerlink" title="将刷机用的软件拷贝到U盘中备用。"></a>将刷机用的软件拷贝到U盘中备用。</h5><h2 id="正式刷机"><a href="#正式刷机" class="headerlink" title="正式刷机"></a>正式刷机</h2><h4 id="刷入第三方rec（twrp）"><a href="#刷入第三方rec（twrp）" class="headerlink" title="刷入第三方rec（twrp）"></a>刷入第三方rec（twrp）</h4><p>关机状态下按住手机音量减+开机键进入fastboot模式<br>终端中输入  </p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">adb reboot bootloaderfastboot flash recovery 此处为下载的twrp的文件名，包含扩展名。可以将本行代码输入到终端后打开twrp文件所在文件夹，将twrp文件直接拖入终端（macOS的使用就是这么方便）fastboot reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="进入rec开始刷入系统"><a href="#进入rec开始刷入系统" class="headerlink" title="进入rec开始刷入系统"></a>进入rec开始刷入系统</h4><p>进入rec界面后（可在关机下按住音量加+开机键）<br>完成首次设置，有<strong>中文界面</strong>哦<br>点击清除，选择格式化<code>Data</code>分区，格式化后选择高级清除,勾选<code>Cache</code> <code>System</code> <code>Data</code> <code>内置存储</code>滑动滑块清除。<br>清除后用OTG线连上U盘，回到主界面点击安装选择储存位置点击<code>USB-CTG</code><br>依次刷入<code>底包</code> <code>ROM包</code> <code>Disable_Dm-Verity_ForceEncrypt</code>，刷完后即可重启使用全新的系统了。如果需要root的用户可在rec中刷入<code>magisk</code>的包</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p><em><strong>刷机有风险，玩机需谨慎！</strong></em><br>安卓刷机真的非常折腾而且不确定因素很多（比如刷机过程中会遇到万能错误7）<br>对于安卓，我认为它的好处在于能够折腾，相对宽松的环境能够让手机实现很多骚操作。<br>国内的深度定制rom我个人并不喜欢，虽然流量监控、归属地显示等功能贴近生活确实好用，但是系统实在臃肿，<strong>花里胡哨</strong>。<br>某些安卓的定制rom会借鉴一些iOS的设计，但只学到了表面。<strong>简单易用、一目了然是iOS的绝对优势所在</strong><br>所以我会选择清爽的类原生系统。虽然缺乏本土化，但能让我记住使用<strong>手机根本的目的是为了提高效率，方便生活</strong>（虽然折腾刷机与此理念有所违背）。<br>对于懒人用户，<strong>还是选择iPhone吧！</strong><br><strong>iPhone不需要折腾就能让你爽到。</strong>  </p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://as.quanke.name/mac-os-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.html">Android studio MacOS环境配置</a><br><a href="https://blog.csdn.net/Airsaid/article/details/77288455">Mac 配置 adb</a><br><a href="https://www.jianshu.com/p/bc32c8133051">Android刷机教程（mac系统）</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>刷机</tag>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Minecraft BE（基岩版）服务器搭建教程</title>
    <link href="/2019/10/16/Linux/tutorial/Minecraft-server/"/>
    <url>/2019/10/16/Linux/tutorial/Minecraft-server/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>由于目前还在使用12年的MacBook Air，加上身边多数人会使用手机等移动设备玩游戏，所以决定搭建一台BE的服务器。<br><strong>请注意本教程适用于国际版的Minecraft BE，而非我的世界</strong>。   </p><span id="more"></span><h3 id="器材"><a href="#器材" class="headerlink" title="器材"></a>器材</h3><p>MacBook<br>一台Linux的服务器（博主使用的是阿里云Ubuntu18.04的服务器）   </p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>通过SSH连接服务器<br>更新系统</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">apt-get -y update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>安装软件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">apt-get -y install curl wget zip unzip screen jq openssl screen<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>设置服务端安装版本变量</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">BEDROCK_VERSION&#x3D;latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>获取服务端版本下载URL并设置变量</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">if [ -z &quot;$BEDROCK_VERSION&quot; ] || [ &quot;$BEDROCK_VERSION&quot; &#x3D;&#x3D; &quot;latest&quot; ]; then echo -e &quot;\n Downloading latest Bedrock server&quot;; DOWNLOAD_URL&#x3D;$(curl https:&#x2F;&#x2F;www.minecraft.net&#x2F;en-us&#x2F;download&#x2F;server&#x2F;bedrock&#x2F; | grep azureedge | grep linux | grep -Eo &quot;(http|https):&#x2F;&#x2F;[a-zA-Z0-9.&#x2F;?&#x3D;_-]*&quot;); BEDROCK_ZIP&#x3D;$(echo $DOWNLOAD_URL | cut -d&quot;&#x2F;&quot; -f5); else echo -e &quot;\n Downloading $BEDROCK_VERSION Bedrock server&quot;; DOWNLOAD_URL&#x3D;https:&#x2F;&#x2F;www.minecraft.azureedge.net&#x2F;bin-linux&#x2F;bedrock-server-$BEDROCK_VERSION.zip; BEDROCK_ZIP&#x3D;$(echo $DOWNLOAD_URL | cut -d&quot;&#x2F;&quot; -f5); fi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>设置服务端安装目录变量<br>等号后面的为服务端安装的目录，可自行修改。</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">BEDROCK_PATH&#x3D;&#x2F;home&#x2F;mc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="安装服务端"><a href="#安装服务端" class="headerlink" title="安装服务端"></a>安装服务端</h3><p>创建服务端目录</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir -p $BEDROCK_PATH<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>进入服务端目录<br>目录为前面配置变量时设置的目录</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;home&#x2F;mc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>下载服务端压缩包</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">wget $DOWNLOAD_URL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>解压压缩包</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">unzip -o $BEDROCK_ZIP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>删除压缩包</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">rm $BEDROCK_ZIP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>设置权限</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">chmod -R 777 bedrock_server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>Minecraft BE服务端的配置文件在服务端文件夹的根目录里为<code>server.properties</code>。使用vim打开它进行配置。</p><h5 id="vim的使用"><a href="#vim的使用" class="headerlink" title="vim的使用"></a>vim的使用</h5><h6 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h6><p>打开文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">vim 此处填写文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>打开后按i进入输入模式后修改文件<br>修改完成后按ESC回到命令模式<br>输入<code>：wq</code>退出<br><code>w</code>为保存；<code>q</code>为退出</p><h5 id="配置文件的一些常用内容"><a href="#配置文件的一些常用内容" class="headerlink" title="配置文件的一些常用内容"></a>配置文件的一些常用内容</h5><ul><li>服务器名称 <code>server-name=此处填写自己喜欢的名称</code></li><li>难度 <code>difficulty=此处填写难度</code>  默认为easy</li><li>最大玩家数 <code>max-players=此处填写数字</code> 如果服务器像博主的一样垃圾那么建议改小玩家数</li><li>端口号<code>server-port=填写自己喜欢的端口号</code><br><code>server-portv6=填写自己喜欢的端口号</code></li><li>世界名称<code>level-name=填自己喜欢的名称</code><br>-世界种子<code>level-seed=填自己喜欢的种子</code>不填的话会默认随机生成。</li><li>加入游戏的玩家的权限<code>default-player-permission-level=此处填写权限</code>默认为<code>member</code>，可选择填写<code>visitor</code>或<code>operator</code>。一般自己和朋友玩的话默认就好</li></ul><h3 id="软件运行及后台运行"><a href="#软件运行及后台运行" class="headerlink" title="软件运行及后台运行"></a>软件运行及后台运行</h3><h5 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h5><p>博主使用的是阿里云所以直接在控制面板就可以进行设置了。<br>具体就是进入阿里云控制面板，点击防火墙，添加规则，分别添加UDP和TCP的规则，开放服务器的端口。</p><h5 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h5><p>使用apt安装screen，没有apt就装一个。</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">sudo apt install screen<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>使用screen启动一个新的名为mcbds的窗口</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">screen -S mcbds<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>启动服务器</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">LD_LIBRARY_PATH&#x3D;. .&#x2F;bedrock_server或sudo LD_LIBRARY_PATH&#x3D;. .&#x2F;bedrock_server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>未出现错误，并显示<code>IP v4 supported, port = 你设置的端口号</code>之类的就是成功了<br>这些结束后可以按<code>control+a+d</code>退出窗口<br>需要再次打开窗口的话使用</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">screen -x mcbds<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h5 id="玩家权限设置"><a href="#玩家权限设置" class="headerlink" title="玩家权限设置"></a>玩家权限设置</h5><p>可以选择启动后先不退出窗口，游戏中登陆服务器后直接在窗口中输入</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">op &lt;玩家名&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>或使用白名单方法<br>登陆后会窗口显示玩家的名称和一串神秘代码（一长串数字）<br>按以下格式写入在服务端根目录的<code>permissions.json</code>文件中</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">[&#123;&quot;xuid&quot;: &quot;神秘代码&quot;,&quot;permission&quot;: &quot;权限&quot;&#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>权限处填<code>operator</code>即授予xuid为xxx的玩家狗管理的权限（最高游戏权限）</p><h3 id="一切准备就绪，开始玩吧！"><a href="#一切准备就绪，开始玩吧！" class="headerlink" title="一切准备就绪，开始玩吧！"></a>一切准备就绪，开始玩吧！</h3><hr><h3 id="2020-2-28更新"><a href="#2020-2-28更新" class="headerlink" title="2020-2-28更新"></a>2020-2-28更新</h3><p>在server.properties文件下加一个参数allow-cheats设置为true，op进入游戏后可以操作一些本只能在服务器后端操作的命令</p><hr><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://code.zackzhang.net/post/installing-minecraft-bedrock-dedicated-server-on-ubuntu-18-04.html">在 Ubuntu 18.04 上搭建 Minecraft 基岩版官方服务端</a><br><a href="https://minecraft-zh.gamepedia.com/index.php?title=Server.properties&variant=zh">server.properties Minecraft wiki</a><br><a href="https://www.mcbbs.net/thread-822207-1-1.html">Minecraft 基岩版官方服务器Alpha测试版本开服指南</a><br><a href="https://www.bilibili.com/read/cv2829225">Linux-基岩版服务器自定义版本搭建教程</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>服务器</tag>
      
      <tag>Linux</tag>
      
      <tag>游戏</tag>
      
      <tag>Minecraft</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
